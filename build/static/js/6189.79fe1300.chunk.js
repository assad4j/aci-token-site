"use strict";(self.webpackChunkaci_presale_site=self.webpackChunkaci_presale_site||[]).push([[6189],{66189:(e,t,n)=>{var a="/index.js";n.r(t),n.d(t,{Env:()=>rX,Human:()=>K2,default:()=>K2,defaults:()=>Wq,draw:()=>kK,empty:()=>C0,env:()=>iX,match:()=>z0,models:()=>U0});var r=Object.defineProperty,i=e=>{throw TypeError(e)},s=(e,t)=>{for(var n in t)r(e,n,{get:t[n],enumerable:!0})},o=(e,t,n)=>((e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n)(e,"symbol"!==typeof t?t+"":t,n),l=(e,t,n)=>t.has(e)||i("Cannot "+n),u=(e,t,n)=>(l(e,t,"read from private field"),n?n.call(e):t.get(e)),d=(e,t,n)=>t.has(e)?i("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n),p=(e,t,n,a)=>(l(e,t,"write to private field"),a?a.call(e,n):t.set(e,n),n),h={};s(h,{Abs:()=>qe,Acos:()=>Xe,Acosh:()=>Ke,AdadeltaOptimizer:()=>Oc,AdagradOptimizer:()=>Dc,AdamOptimizer:()=>zc,AdamaxOptimizer:()=>Lc,Add:()=>Ze,AddN:()=>Ye,All:()=>Je,Any:()=>Qe,ArgMax:()=>et,ArgMin:()=>tt,Asin:()=>nt,Asinh:()=>at,Atan:()=>rt,Atan2:()=>st,Atanh:()=>it,AvgPool:()=>ot,AvgPool3D:()=>ut,AvgPool3DGrad:()=>dt,AvgPoolGrad:()=>lt,BackendWasm:()=>FL,BatchMatMul:()=>pt,BatchToSpaceND:()=>ht,Bincount:()=>ct,BitwiseAnd:()=>ft,BroadcastArgs:()=>gt,BroadcastTo:()=>mt,Cast:()=>yt,Ceil:()=>At,ClipByValue:()=>xt,Complex:()=>bt,ComplexAbs:()=>vt,Concat:()=>wt,Conv2D:()=>kt,Conv2DBackpropFilter:()=>It,Conv2DBackpropInput:()=>St,Conv3D:()=>Nt,Conv3DBackpropFilterV2:()=>Ct,Conv3DBackpropInputV2:()=>Tt,Cos:()=>Rt,Cosh:()=>Et,CropAndResize:()=>Ft,Cumprod:()=>$t,Cumsum:()=>Mt,DataStorage:()=>V,DenseBincount:()=>_t,DepthToSpace:()=>Pt,DepthwiseConv2dNative:()=>Ot,DepthwiseConv2dNativeBackpropFilter:()=>Dt,DepthwiseConv2dNativeBackpropInput:()=>zt,Diag:()=>Lt,Dilation2D:()=>Wt,Dilation2DBackpropFilter:()=>Vt,Dilation2DBackpropInput:()=>Bt,Draw:()=>Ut,ENV:()=>Ge,Einsum:()=>Ht,Elu:()=>jt,EluGrad:()=>qt,Environment:()=>We,Equal:()=>Kt,Erf:()=>Xt,Exp:()=>Zt,ExpandDims:()=>Yt,Expm1:()=>Jt,FFT:()=>Qt,Fill:()=>en,FlipLeftRight:()=>tn,Floor:()=>nn,FloorDiv:()=>an,FromPixels:()=>or,FusedBatchNorm:()=>rn,FusedConv2D:()=>dr,FusedDepthwiseConv2D:()=>pr,GPGPUContext:()=>WN,GatherNd:()=>on,GatherV2:()=>sn,GraphModel:()=>Hy,Greater:()=>ln,GreaterEqual:()=>un,IFFT:()=>pn,Identity:()=>dn,Imag:()=>hn,IsFinite:()=>cn,IsInf:()=>fn,IsNan:()=>mn,KernelBackend:()=>U,LRN:()=>Tn,LRNGrad:()=>Rn,LeakyRelu:()=>gn,Less:()=>yn,LessEqual:()=>An,LinSpace:()=>xn,Log:()=>bn,Log1p:()=>vn,LogSoftmax:()=>Nn,LogicalAnd:()=>wn,LogicalNot:()=>kn,LogicalOr:()=>In,LogicalXor:()=>Sn,LowerBound:()=>Cn,MathBackendCPU:()=>Yy,MathBackendWebGL:()=>tT,MatrixBandPart:()=>En,Max:()=>$n,MaxPool:()=>Fn,MaxPool3D:()=>Pn,MaxPool3DGrad:()=>On,MaxPoolGrad:()=>_n,MaxPoolWithArgmax:()=>Dn,Maximum:()=>Mn,Mean:()=>zn,Min:()=>Ln,Minimum:()=>Wn,MirrorPad:()=>Bn,Mod:()=>Vn,MomentumOptimizer:()=>Bc,Multinomial:()=>Un,Multiply:()=>Gn,Neg:()=>Hn,NonMaxSuppressionV3:()=>qn,NonMaxSuppressionV4:()=>Xn,NonMaxSuppressionV5:()=>Kn,NotEqual:()=>jn,OP_SCOPE_SUFFIX:()=>Ui,OneHot:()=>Yn,OnesLike:()=>Zn,Optimizer:()=>Pc,OptimizerConstructors:()=>qf,Pack:()=>Jn,PadV2:()=>Qn,Pool:()=>ea,Pow:()=>ta,Prelu:()=>na,Prod:()=>aa,RMSPropOptimizer:()=>Vc,RaggedGather:()=>ra,RaggedRange:()=>ia,RaggedTensorToTensor:()=>sa,Range:()=>oa,Rank:()=>ui,Real:()=>la,RealDiv:()=>Gt,Reciprocal:()=>ua,Reduction:()=>nc,Relu:()=>da,Relu6:()=>ga,Reshape:()=>pa,ResizeBilinear:()=>fa,ResizeBilinearGrad:()=>ma,ResizeNearestNeighbor:()=>ha,ResizeNearestNeighborGrad:()=>ca,Reverse:()=>ya,RotateWithOffset:()=>lr,Round:()=>Aa,Rsqrt:()=>xa,SGDOptimizer:()=>Wc,ScatterNd:()=>ba,SearchSorted:()=>wa,Select:()=>ka,Selu:()=>Ia,Sigmoid:()=>Ra,Sign:()=>Ta,Sin:()=>Na,Sinh:()=>Ca,Slice:()=>Sa,Softmax:()=>Pa,Softplus:()=>Ea,SpaceToBatchND:()=>Fa,SparseFillEmptyRows:()=>Oa,SparseReshape:()=>Da,SparseSegmentMean:()=>za,SparseSegmentSum:()=>La,SparseToDense:()=>Wa,SplitV:()=>_a,Sqrt:()=>$a,Square:()=>Va,SquaredDifference:()=>Ba,StaticRegexReplace:()=>Ua,Step:()=>sr,StridedSlice:()=>Ga,StringNGrams:()=>Ha,StringSplit:()=>ja,StringToHashBucketFast:()=>qa,Sub:()=>Xa,Sum:()=>Ma,Tan:()=>Ka,Tanh:()=>Za,Tensor:()=>si,TensorBuffer:()=>ai,TensorScatterUpdate:()=>va,Tile:()=>Ya,TopK:()=>Ja,Transform:()=>Qa,Transpose:()=>er,Unique:()=>tr,Unpack:()=>nr,UnsortedSegmentSum:()=>ar,UpperBound:()=>rr,Variable:()=>li,WebGPUBackend:()=>MW,ZerosLike:()=>ir,_FusedMatMul:()=>ur,abs:()=>ko,acos:()=>Io,acosh:()=>So,add:()=>xo,addN:()=>No,all:()=>Co,any:()=>To,argMax:()=>Ro,argMin:()=>Eo,asin:()=>$o,asinh:()=>Mo,atan:()=>Fo,atan2:()=>_o,atanh:()=>Po,avgPool:()=>Jo,avgPool3d:()=>Qo,backend:()=>ms,backend_util:()=>Jf,basicLSTMCell:()=>il,batchNorm:()=>ll,batchNorm2d:()=>ul,batchNorm3d:()=>dl,batchNorm4d:()=>pl,batchToSpaceND:()=>sl,bincount:()=>hl,bitwiseAnd:()=>cl,booleanMaskAsync:()=>ah,broadcastArgs:()=>fl,broadcastTo:()=>ml,broadcast_util:()=>Ll,browser:()=>mf,buffer:()=>mo,cast:()=>go,ceil:()=>gl,clipByValue:()=>Al,clone:()=>yo,complex:()=>Hi,concat:()=>el,concat1d:()=>xl,concat2d:()=>bl,concat3d:()=>vl,concat4d:()=>wl,conv1d:()=>Il,conv2d:()=>kl,conv2dTranspose:()=>Nl,conv3d:()=>Cl,conv3dTranspose:()=>Rl,copyRegisteredKernels:()=>kr,cos:()=>El,cosh:()=>$l,cosineWindow:()=>ph,cumprod:()=>Ml,cumsum:()=>Fl,customGrad:()=>Bu,denseBincount:()=>_l,deprecationWarn:()=>Qi,depthToSpace:()=>Pl,depthwiseConv2d:()=>Ol,deregisterOp:()=>dg,device_util:()=>Fi,diag:()=>Dl,dilation2d:()=>zl,disableDeprecationWarnings:()=>Ji,dispose:()=>is,disposeVariables:()=>es,div:()=>vo,divNoNan:()=>jl,dot:()=>ql,dropout:()=>uh,einsum:()=>Xl,elu:()=>Kl,enableDebugMode:()=>Yi,enableProdMode:()=>Zi,enclosingPowerOfTwo:()=>dh,engine:()=>ts,ensureShape:()=>Zl,env:()=>Ve,equal:()=>Ul,erf:()=>Yl,euclideanNorm:()=>mu,exp:()=>gu,expandDims:()=>yu,expm1:()=>Au,eye:()=>bu,fft:()=>Np,fill:()=>yl,findBackend:()=>hs,findBackendFactory:()=>cs,floor:()=>vu,floorDiv:()=>bo,forceHalfFloat:()=>aT,fused:()=>ch,gather:()=>wu,gatherND:()=>lh,gather_util:()=>If,getBackend:()=>ds,getGradient:()=>yr,getKernel:()=>gr,getKernelsForBackend:()=>Ar,getThreadsCount:()=>qL,gpgpu_util:()=>yN,grad:()=>Ou,grads:()=>Du,greater:()=>ku,greaterEqual:()=>Iu,ifft:()=>Cp,imag:()=>Su,image:()=>kc,inTopKAsync:()=>hh,io:()=>Gc,irfft:()=>Tp,isFinite:()=>Nu,isInf:()=>Cu,isNaN:()=>Tu,keep:()=>ss,kernel_impls:()=>sg,leakyRelu:()=>Ru,less:()=>Eu,lessEqual:()=>$u,linalg:()=>Ic,linspace:()=>Mu,loadGraphModel:()=>jy,loadGraphModelSync:()=>qy,localResponseNormalization:()=>Fu,log:()=>_u,log1p:()=>Pu,logSigmoid:()=>Hu,logSoftmax:()=>qu,logSumExp:()=>Xu,logicalAnd:()=>Ku,logicalNot:()=>Zu,logicalOr:()=>Yu,logicalXor:()=>Ju,losses:()=>Sc,lowerBound:()=>td,matMul:()=>tl,math:()=>hf,max:()=>su,maxPool:()=>nd,maxPool3d:()=>ad,maxPoolWithArgmax:()=>rd,maximum:()=>id,mean:()=>sd,memory:()=>ns,meshgrid:()=>ud,min:()=>ou,minimum:()=>dd,mirrorPad:()=>pd,mod:()=>hd,moments:()=>cd,movingAverage:()=>ih,mul:()=>wo,multiRNNCell:()=>fd,multinomial:()=>md,neg:()=>Uu,nextFrame:()=>Zf,node:()=>Pq,norm:()=>fu,notEqual:()=>gd,oneHot:()=>yd,ones:()=>ld,onesLike:()=>Ad,op:()=>Gi,outerProduct:()=>xd,pad:()=>bd,pad1d:()=>vd,pad2d:()=>wd,pad3d:()=>kd,pad4d:()=>Id,pool:()=>Nd,pow:()=>lu,prelu:()=>Cd,print:()=>Ao,prod:()=>Td,profile:()=>as,raggedGather:()=>Rd,raggedRange:()=>Ed,raggedTensorToTensor:()=>$d,rand:()=>Md,randomGamma:()=>Jd,randomNormal:()=>Qd,randomStandardNormal:()=>ep,randomUniform:()=>tp,randomUniformInt:()=>np,range:()=>ap,ready:()=>us,real:()=>rp,reciprocal:()=>ip,registerBackend:()=>fs,registerGradient:()=>br,registerKernel:()=>xr,registerOp:()=>lg,relu:()=>sp,relu6:()=>op,removeBackend:()=>ps,reshape:()=>Yo,reverse:()=>lp,reverse1d:()=>up,reverse2d:()=>dp,reverse3d:()=>pp,reverse4d:()=>hp,rfft:()=>Ep,round:()=>cp,rsqrt:()=>fp,scalar:()=>uu,scatterND:()=>sh,scatter_util:()=>Up,searchSorted:()=>ed,selu:()=>mp,separableConv2d:()=>gp,serialization:()=>Tc,setBackend:()=>ls,setPlatform:()=>gs,setThreadsCount:()=>jL,setWasmPath:()=>VL,setWasmPaths:()=>UL,setWebGLContext:()=>PI,setdiff1dAsync:()=>yp,shared:()=>Jy,sigmoid:()=>nl,sign:()=>Ap,signal:()=>wc,sin:()=>xp,sinh:()=>bp,slice:()=>al,slice1d:()=>vp,slice2d:()=>wp,slice3d:()=>kp,slice4d:()=>Ip,slice_util:()=>Nf,softmax:()=>Sp,softplus:()=>Gu,spaceToBatchND:()=>Sd,sparse:()=>Nc,sparseToDense:()=>oh,spectral:()=>vc,split:()=>Rp,sqrt:()=>du,square:()=>pu,squaredDifference:()=>$p,squeeze:()=>Mp,stack:()=>Fp,step:()=>_p,stridedSlice:()=>Pp,string:()=>Cc,sub:()=>ju,sum:()=>hu,sumOutType:()=>Ai,tan:()=>Op,tanh:()=>rl,tensor:()=>qi,tensor1d:()=>Dp,tensor2d:()=>zp,tensor3d:()=>Lp,tensor4d:()=>Wp,tensor5d:()=>Bp,tensor6d:()=>Vp,tensorScatterUpdate:()=>qp,tensor_util:()=>mi,test_util:()=>_d,tidy:()=>rs,tile:()=>xu,time:()=>os,topk:()=>Xp,train:()=>Xf,transpose:()=>rh,truncatedNormal:()=>Kp,unique:()=>Zp,unregisterGradient:()=>wr,unregisterKernel:()=>vr,unsortedSegmentSum:()=>Yp,unstack:()=>Jp,upcastType:()=>yi,upperBound:()=>Qp,util:()=>Sr,valueAndGrad:()=>zu,valueAndGrads:()=>Lu,variable:()=>eh,variableGrads:()=>Wu,version:()=>_q,version_converter:()=>Xy,version_core:()=>jf,version_cpu:()=>Ib,version_wasm:()=>XL,version_webgl:()=>nT,webgl:()=>rT,webgl_util:()=>RI,webgpu_util:()=>AW,where:()=>Gl,whereAsync:()=>nh,zeros:()=>od,zerosLike:()=>Hl});var c=Object.create,f=Object.defineProperty,m=Object.getOwnPropertyDescriptor,g=Object.getOwnPropertyNames,y=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty,x=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),b=(e,t)=>{for(var n in t)f(e,n,{get:t[n],enumerable:!0})},v=(e,t,n)=>(n=null!=e?c(y(e)):{},((e,t,n,a)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of g(t))!A.call(e,r)&&r!==n&&f(e,r,{get:()=>t[r],enumerable:!(a=m(t,r))||a.enumerable});return e})(!t&&e&&e.__esModule?n:f(n,"default",{value:e,enumerable:!0}),e)),w=x((e,t)=>{t.exports=a;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(di){}function a(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=r;var i={},s={};function o(e,t){var n,a,r;return t?(r=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=u(e,(0|e)<0?-1:0,!0),r&&(s[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(a=i[e])?a:(n=u(e,e<0?-1:0,!1),r&&(i[e]=n),n)}function l(e,t){if(isNaN(e))return t?A:y;if(t){if(e<0)return A;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return w}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new a(e,t,n)}a.fromInt=o,a.fromNumber=l,a.fromBits=u;var d=Math.pow;function p(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return p(e.substring(1),t,n).neg();for(var r=l(d(n,8)),i=y,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),n);if(o<8){var h=l(d(n,o));i=i.mul(h).add(l(u))}else i=(i=i.mul(r)).add(l(u))}return i.unsigned=t,i}function h(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?p(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}a.fromString=p,a.fromValue=h;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);a.ZERO=y;var A=o(0,!0);a.UZERO=A;var x=o(1);a.ONE=x;var b=o(1,!0);a.UONE=b;var v=o(-1);a.NEG_ONE=v;var w=u(-1,2147483647,!1);a.MAX_VALUE=w;var k=u(-1,-1,!0);a.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);a.MIN_VALUE=I;var S=a.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=l(d(e,6),this.unsigned),i=this,s="";;){var o=i.div(r),u=(i.sub(o.mul(r)).toInt()>>>0).toString(e);if((i=o).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,i=65535&this.low,s=e.high>>>16,o=65535&e.high,l=e.low>>>16,d=0,p=0,c=0,f=0;return c+=(f+=i+(65535&e.low))>>>16,p+=(c+=a+l)>>>16,d+=(p+=n+o)>>>16,d+=t+s,u((c&=65535)<<16|(f&=65535),(d&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(r(e)||(e=h(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,a=65535&this.high,i=this.low>>>16,s=65535&this.low,o=e.high>>>16,d=65535&e.high,p=e.low>>>16,c=65535&e.low,f=0,m=0,A=0,x=0;return A+=(x+=s*c)>>>16,m+=(A+=i*c)>>>16,A&=65535,m+=(A+=s*p)>>>16,f+=(m+=a*c)>>>16,m&=65535,f+=(m+=i*p)>>>16,m&=65535,f+=(m+=s*d)>>>16,f+=t*c+a*p+i*d+s*o,u((A&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var t,a,i;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return b;i=A}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(a=this.sub(e.mul(t)),i=t.add(a.div(e)));if(e.eq(I))return this.unsigned?A:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();i=y}for(a=this;a.gte(e);){t=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var s=Math.ceil(Math.log(t)/Math.LN2),o=s<=48?1:d(2,s-48),p=l(t),c=p.mul(e);c.isNegative()||c.gt(a);)c=(p=l(t-=o,this.unsigned)).mul(e);p.isZero()&&(p=x),i=i.add(p),a=a.sub(c)}return i},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,n){return n?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),k=x(()=>{}),I=x(()=>{}),S=x((e,t)=>{!function(e,t,n){function a(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var n=new a(e),i=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.alea=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),N=x((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xor128=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),C=x((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xorwow=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),T=x((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.x&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xorshift7=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),R=x((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,i=t.i;return t.w=a=a+1640531527|0,n=r[i+34&127],e=r[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[i]=n^e,t.i=i,n+(a^a>>>16)|0},function(e,t){var n,a,r,i,s,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,i=-32;i<l;++i)t&&(a^=t.charCodeAt((i+32)%t.length)),0===i&&(s=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,i>=0&&(s=s+1640531527|0,r=0==(n=o[127&i]^=a+s)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=s,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&(i.X&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.xor4096=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),E=x((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var n=new a(e),i=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,i&&("object"==typeof i&&r(i,n),s.state=function(){return r(n,{})}),s}t&&t.exports?t.exports=i:n&&n.amd?n(function(){return i}):this.tychei=i}(0,"object"==typeof t&&t,"function"==typeof define&&define)}),$=x(()=>{}),M=x((e,t)=>{!function(e,a,r){var i,s=256,o="random",l=r.pow(s,6),u=r.pow(2,52),d=2*u,p=255;function h(t,n,p){var h=[],A=g(m((n=1==n?{entropy:!0}:n||{}).entropy?[t,y(a)]:null==t?function(){try{var t;return i&&(t=i.randomBytes)?t=t(s):(t=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(t)),y(t)}catch(h){var n=e.navigator,r=n&&n.plugins;return[+new Date,e,r,e.screen,y(a)]}}():t,3),h),x=new c(h),b=function(){for(var e=x.g(6),t=l,n=0;e<u;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|x.g(4)},b.quick=function(){return x.g(4)/4294967296},b.double=b,g(y(x.S),a),(n.pass||p||function(e,t,n,a){return a&&(a.S&&f(a,x),e.state=function(){return f(x,{})}),n?(r[o]=e,t):e})(b,A,"global"in n?n.global:this==r,n.state)}function c(e){var t,n=e.length,a=this,r=0,i=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<s;)o[r]=r++;for(r=0;r<s;r++)o[r]=o[i=p&i+e[r%n]+(t=o[r])],o[i]=t;(a.g=function(e){for(var t,n=0,r=a.i,i=a.j,o=a.S;e--;)t=o[r=p&r+1],n=n*s+o[p&(o[r]=o[i=p&i+t])+(o[i]=t)];return a.i=r,a.j=i,n})(s)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(m(e[n],t-1))}catch(i){}return a.length?a:"string"==r?e:e+"\0"}function g(e,t){for(var n,a=e+"",r=0;r<a.length;)t[p&r]=p&(n^=19*t[p&r])+a.charCodeAt(r++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(g(r.random(),a),"object"==typeof t&&t.exports){t.exports=h;try{i=$()}catch(A){}}else"function"==typeof define&&n.amdO?define(function(){return h}):r["seed"+o]=h}("undefined"!=typeof self?self:e,[],Math)}),F=x((e,t)=>{var n=S(),a=N(),r=C(),i=T(),s=R(),o=E(),l=M();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=i,l.xor4096=s,l.tychei=o,t.exports=l}),_=x(()=>{}),P=x(()=>{}),O=x(()=>{}),D=x(()=>{}),z=x(()=>{}),L=x((e,t)=>{var r=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||a,function(t){function a(){return $.buffer!=W&&K($.buffer),V}function r(){return $.buffer!=W&&K($.buffer),U}function i(){return $.buffer!=W&&K($.buffer),G}function s(){return $.buffer!=W&&K($.buffer),H}var o,l,u,d="undefined"!=typeof(t=t||{})?t:{};d.ready=new Promise(function(e,t){o=e,l=t}),"undefined"!=typeof process&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,h,c,f=Object.assign({},d),m=[],g=(e,t)=>{throw t},y="object"==typeof window,A="function"==typeof importScripts,x="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=d.ENVIRONMENT_IS_PTHREAD||!1,v="";function w(e){return d.locateFile?d.locateFile(e,v):v+e}if(x){var k=_(),I=P();let e;v=A?I.dirname(v)+"/":"//",p=(e,t)=>(e=pe(e)?new URL(e):I.normalize(e),k.readFileSync(e,t?void 0:"utf8")),c=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{e=pe(e)?new URL(e):I.normalize(e),k.readFile(e,function(e,a){e?n(e):t(a.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),m=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof fe))throw e}),process.on("unhandledRejection",function(e){throw e}),g=(e,t)=>{if(te())throw process.exitCode=e,t;(function(e){e instanceof fe||T("exiting due to exception: "+e)})(t),process.exit(e)},d.inspect=function(){return"[Emscripten Module object]"};try{e=O()}catch(nt){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),nt}n.g.Worker=e.Worker}else(y||A)&&(A?v=self.location.href:"undefined"!=typeof document&&document.currentScript&&(v=document.currentScript.src),"undefined"!=typeof e&&e&&(v=e),v=0!==v.indexOf("blob:")?v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):"",x||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},A&&(c=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}),e=>document.title=e);x&&"undefined"==typeof performance&&(n.g.performance=D().performance);var S=console.log.bind(console),N=console.warn.bind(console);x&&(S=e=>k.writeSync(1,e+"\n"),N=e=>k.writeSync(2,e+"\n"));var C=d.print||S,T=d.printErr||N;Object.assign(d,f),f=null,d.arguments&&(m=d.arguments),d.thisProgram&&d.thisProgram,d.quit&&(g=d.quit);var R;Atomics.load,Atomics.store,Atomics.compareExchange;d.wasmBinary&&(R=d.wasmBinary);var E=d.noExitRuntime||!0;"object"!=typeof WebAssembly&&le("no native wasm support detected");var $,M,F,L=!1;var W,B,V,U,G,H,j="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function q(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&j)return j.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(var i="";t<r;){var s=e[t++];if(128&s){var o=63&e[t++];if(192!=(224&s)){var l=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|l:(7&s)<<18|o<<12|l<<6|63&e[t++])<65536)i+=String.fromCharCode(s);else{var u=s-65536;i+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else i+=String.fromCharCode((31&s)<<6|o)}else i+=String.fromCharCode(s)}return i}function X(e,t){return(e>>>=0)?q(a(),e,t):""}function K(e){W=e,d.HEAP8=B=new Int8Array(e),d.HEAP16=new Int16Array(e),d.HEAP32=U=new Int32Array(e),d.HEAPU8=V=new Uint8Array(e),d.HEAPU16=new Uint16Array(e),d.HEAPU32=G=new Uint32Array(e),d.HEAPF32=new Float32Array(e),d.HEAPF64=H=new Float64Array(e)}b&&(W=d.buffer);var Z=d.INITIAL_MEMORY||16777216;if(b)$=d.wasmMemory,W=d.buffer;else if(d.wasmMemory)$=d.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:Z/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw T("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&T("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");$&&(W=$.buffer),Z=W.byteLength,K(W);var Y,J=[],Q=[],ee=[];function te(){return E}function ne(){!b&&be(Q)}function ae(e){J.unshift(e)}function re(e){ee.unshift(e)}var ie=0,se=null,oe=null;function le(e){d.onAbort&&d.onAbort(e),T(e="Aborted("+e+")"),L=!0,F=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}var ue;function de(e){return e.startsWith("data:application/octet-stream;base64,")}function pe(e){return e.startsWith("file://")}function he(e){try{if(e==ue&&R)return new Uint8Array(R);if(c)return c(e);throw"both async and sync fetching of the wasm failed"}catch(nt){le(nt)}}de(ue="tfjs-backend-wasm-threaded-simd.wasm")||(ue=w(ue));var ce={};function fe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function me(e){var t=xe.pthreads[e];(function(e,t){e||le(t)})(t),xe.returnWorkerToPool(t)}function ge(e){var t=xe.getNewWorker();if(!t)return 6;xe.runningWorkers.push(t),xe.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{x&&t.ref(),t.postMessage(n,e.transferList),delete t.runPthread},t.loaded&&t.runPthread(),0}function ye(e){if(b)return Te(1,1,e);F=e,te()||(xe.terminateAllThreads(),d.onExit&&d.onExit(e),L=!0),g(e,new fe(e))}var Ae=function(e,t){if(F=e,!t&&b)throw ve(e),"unwind";ye(e)};var xe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){b?xe.initWorker():xe.initMainThread()},initMainThread:function(){for(var e=8;e--;)xe.allocateUnusedWorker()},initWorker:function(){E=!1},setExitStatus:function(e){F=e},terminateAllThreads:function(){for(var e of Object.values(xe.pthreads))xe.returnWorkerToPool(e);for(var e of xe.unusedWorkers)e.terminate();xe.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete xe.pthreads[t],xe.unusedWorkers.push(e),xe.runningWorkers.splice(xe.runningWorkers.indexOf(e),1),e.pthread_ptr=0,x&&e.unref(),Xe(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){xe.tlsInitFunctions.forEach(e=>e())},loadWasmModuleToWorker:function(t,n){t.onmessage=e=>{var a=e.data,r=a.cmd;if(t.pthread_ptr&&(xe.currentProxiedOperationCallerThread=t.pthread_ptr),a.targetThread&&a.targetThread!=Ge()){var i=xe.pthreads[a.targetThread];return i?i.postMessage(a,a.transferList):T('Internal error! Worker sent a message "'+r+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(xe.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===r?Ne(a.queue):"spawnThread"===r?ge(a):"cleanupThread"===r?me(a.thread):"killThread"===r?function(e){var t=xe.pthreads[e];delete xe.pthreads[e],t.terminate(),Xe(e),xe.runningWorkers.splice(xe.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(a.thread):"cancelThread"===r?function(e){xe.pthreads[e].postMessage({cmd:"cancel"})}(a.thread):"loaded"===r?(t.loaded=!0,x&&t.unref(),n&&n(t),t.runPthread&&t.runPthread()):"print"===r?C("Thread "+a.threadId+": "+a.text):"printErr"===r?T("Thread "+a.threadId+": "+a.text):"alert"===r?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?t.postMessage(a):"callHandler"===r?d[a.handler](...a.args):r&&T("worker sent an unknown command "+r),xe.currentProxiedOperationCallerThread=void 0},t.onerror=e=>{throw T("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},x&&(t.on("message",function(e){t.onmessage({data:e})}),t.on("error",function(e){t.onerror(e)}),t.on("detachedExit",function(){}));var a=[];for(var r of["onExit","onAbort","print","printErr"])d.hasOwnProperty(r)&&a.push(r);t.postMessage({cmd:"load",handlers:a,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:$,wasmModule:M})},allocateUnusedWorker:function(){var e,t=w("tfjs-backend-wasm-threaded-simd.worker.js");e=new Worker(t),xe.unusedWorkers.push(e)},getNewWorker:function(){return 0==xe.unusedWorkers.length&&(xe.allocateUnusedWorker(),xe.loadWasmModuleToWorker(xe.unusedWorkers[0])),xe.unusedWorkers.pop()}};function be(e){for(;e.length>0;)e.shift()(d)}function ve(e){if(b)return Te(2,0,e);try{Ae(e)}catch(nt){!function(e){if(e instanceof fe||"unwind"==e)return F;g(1,e)}(nt)}}d.PThread=xe,d.establishStackSpace=function(){var e=Ge(),t=r()[e+52>>>2],n=r()[e+56>>>2];Ze(t,t-n),Je(t)};var we=[];function ke(e,t,n,a){return b?Te(3,1,e,t,n,a):Ie(e,t,n,a)}function Ie(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return T("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];if(b&&0===r.length)return ke(e,t,n,a);var i={startRoutine:n,pthread_ptr:e,arg:a,transferList:r};return b?(i.cmd="spawnThread",postMessage(i,r),0):ge(i)}d.invokeEntryPoint=function(e,t){var n=function(e){var t=we[e];return t||(e>=we.length&&(we.length=e+1),we[e]=t=Y.get(e)),t}(e)(t);te()?xe.setExitStatus(n):Ke(n)};var Se;function Ne(e){Atomics.store(r(),e>>2,1),Ge()&&qe(e),Atomics.compareExchange(r(),e>>2,1,0)}function Ce(e){Ce.shown||(Ce.shown={}),Ce.shown[e]||(Ce.shown[e]=1,x&&(e="warning: "+e),T(e))}function Te(e,t){var n=arguments.length-2,a=arguments;return function(e){var t=Ye(),n=e();return Je(t),n}(()=>{for(var r=n,i=Qe(8*r),o=i>>3,l=0;l<n;l++){var u=a[2+l];s()[o+l>>>0]=u}return je(e,r,i,t)})}d.executeNotifiedProxyingQueue=Ne,Se=x?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:()=>performance.timeOrigin+performance.now();var Re=[];function Ee(e){try{return $.grow(e-W.byteLength+65535>>>16),K($.buffer),1}catch(nt){}}function $e(e){return b?Te(4,1,e):52}function Me(e,t,n,a,r){return b?Te(5,1,e,t,n,a,r):70}var Fe=[null,[],[]];function _e(e,t){var n=Fe[e];0===t||10===t?((1===e?C:T)(q(n,0)),n.length=0):n.push(t)}function Pe(e,t,n,r){if(b)return Te(6,1,e,t,n,r);for(var s=0,o=0;o<n;o++){var l=i()[t>>>2],u=i()[t+4>>>2];t+=8;for(var d=0;d<u;d++)_e(e,a()[l+d>>>0]);s+=u}return i()[r>>>2]=s,0}function Oe(e){return d["_"+e]}function De(e,t){($.buffer!=W&&K($.buffer),B).set(e,t>>>0)}function ze(e,t,n,r,i){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,a){if(!(a>0))return 0;for(var r=n>>>=0,i=n+a-1,s=0;s<e.length;++s){var o=e.charCodeAt(s);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++s)),o<=127){if(n>=i)break;t[n++>>>0]=o}else if(o<=2047){if(n+1>=i)break;t[n++>>>0]=192|o>>6,t[n++>>>0]=128|63&o}else if(o<=65535){if(n+2>=i)break;t[n++>>>0]=224|o>>12,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}else{if(n+3>=i)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}}t[n>>>0]=0})(e,a(),t,n)})(e,t=Qe(n),n)}return t},array:e=>{var t=Qe(e.length);return De(e,t),t}};var o=Oe(e),l=[],u=0;if(r)for(var d=0;d<r.length;d++){var p=s[n[d]];p?(0===u&&(u=Ye()),l[d]=p(r[d])):l[d]=r[d]}var h,c=o.apply(null,l);return h=c,0!==u&&Je(u),c=function(e){return"string"===t?X(e):"boolean"===t?!!e:e}(h),c}xe.init();var Le,We,Be,Ve=[null,ye,ve,ke,$e,Me,Pe],Ue={__emscripten_init_main_thread_js:function(e){He(e,!A,1,!y),xe.threadInitTLS()},__emscripten_thread_cleanup:function(e){b?postMessage({cmd:"cleanupThread",thread:e}):me(e)},__pthread_create_js:Ie,_emscripten_default_pthread_stack_size:function(){return 65536},_emscripten_get_now_is_monotonic:function(){return true},_emscripten_notify_task_queue:function(e,t,n,a){if(e==t)setTimeout(()=>Ne(a));else if(b)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:a});else{var r=xe.pthreads[e];if(!r)return;r.postMessage({cmd:"processProxyingQueue",queue:a})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){le("")},emscripten_check_blocking_allowed:function(){x||A||Ce("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 4294901760},emscripten_get_now:Se,emscripten_memcpy_big:function(e,t,n){a().copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_num_logical_cores:function(){return x?z().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){Re.length=t;for(var a=n>>3,r=0;r<t;r++)Re[r]=s()[a+r>>>0];return(e<0?ce[-e-1]:Ve[e]).apply(null,Re)},emscripten_resize_heap:function(e){var t=a().length;if((e>>>=0)<=t)return!1;var n=4294901760;if(e>n)return!1;let r=(e,t)=>e+(t-e%t)%t;for(var i=1;i<=4;i*=2){var s=t*(1+.2/i);if(s=Math.min(s,e+100663296),Ee(Math.min(n,r(Math.max(e,s),65536))))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:Ae,fd_close:$e,fd_seek:Me,fd_write:Pe,memory:$||d.wasmMemory},Ge=(function(){var e={env:Ue,wasi_snapshot_preview1:Ue};function t(e,t){var n=e.exports;if(d.asm=n,function(e){xe.tlsInitFunctions.push(e)}(d.asm._emscripten_tls_init),Y=d.asm.__indirect_function_table,function(e){Q.unshift(e)}(d.asm.__wasm_call_ctors),M=t,!b){var a=xe.unusedWorkers.length;xe.unusedWorkers.forEach(function(e){xe.loadWasmModuleToWorker(e,function(){--a||function(){if(ie--,d.monitorRunDependencies&&d.monitorRunDependencies(ie),0==ie&&(null!==se&&(clearInterval(se),se=null),oe)){var e=oe;oe=null,e()}}()})})}}function n(e){t(e.instance,e.module)}function a(t){return function(){if(!R&&(y||A)){if("function"==typeof fetch&&!pe(ue))return fetch(ue,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+ue+"'";return e.arrayBuffer()}).catch(function(){return he(ue)});if(h)return new Promise(function(e,t){h(ue,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return he(ue)})}().then(function(t){return WebAssembly.instantiate(t,e)}).then(function(e){return e}).then(t,function(e){T("failed to asynchronously prepare wasm: "+e),le(e)})}if(b||(ie++,d.monitorRunDependencies&&d.monitorRunDependencies(ie)),d.instantiateWasm)try{return d.instantiateWasm(e,t)}catch(r){T("Module.instantiateWasm callback failed with error: "+r),l(r)}(R||"function"!=typeof WebAssembly.instantiateStreaming||de(ue)||pe(ue)||x||"function"!=typeof fetch?a(n):fetch(ue,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return T("wasm streaming compile failed: "+e),T("falling back to ArrayBuffer instantiation"),a(n)})})).catch(l)}(),d.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},d._init=function(){return(d._init=d.asm.init).apply(null,arguments)},d._init_with_threads_count=function(){return(d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},d._get_threads_count=function(){return(d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},d._register_tensor=function(){return(d._register_tensor=d.asm.register_tensor).apply(null,arguments)},d._dispose_data=function(){return(d._dispose_data=d.asm.dispose_data).apply(null,arguments)},d._dispose=function(){return(d._dispose=d.asm.dispose).apply(null,arguments)},d._Abs=function(){return(d._Abs=d.asm.Abs).apply(null,arguments)},d._Acos=function(){return(d._Acos=d.asm.Acos).apply(null,arguments)},d._Acosh=function(){return(d._Acosh=d.asm.Acosh).apply(null,arguments)},d._Add=function(){return(d._Add=d.asm.Add).apply(null,arguments)},d._AddN=function(){return(d._AddN=d.asm.AddN).apply(null,arguments)},d._All=function(){return(d._All=d.asm.All).apply(null,arguments)},d._Any=function(){return(d._Any=d.asm.Any).apply(null,arguments)},d._ArgMax=function(){return(d._ArgMax=d.asm.ArgMax).apply(null,arguments)},d._ArgMin=function(){return(d._ArgMin=d.asm.ArgMin).apply(null,arguments)},d._Asin=function(){return(d._Asin=d.asm.Asin).apply(null,arguments)},d._Asinh=function(){return(d._Asinh=d.asm.Asinh).apply(null,arguments)},d._Atan=function(){return(d._Atan=d.asm.Atan).apply(null,arguments)},d._Atan2=function(){return(d._Atan2=d.asm.Atan2).apply(null,arguments)},d._Atanh=function(){return(d._Atanh=d.asm.Atanh).apply(null,arguments)},d._AvgPool=function(){return(d._AvgPool=d.asm.AvgPool).apply(null,arguments)},d._AvgPool3D=function(){return(d._AvgPool3D=d.asm.AvgPool3D).apply(null,arguments)},d._AvgPool3DGrad=function(){return(d._AvgPool3DGrad=d.asm.AvgPool3DGrad).apply(null,arguments)},d._AvgPoolGrad=function(){return(d._AvgPoolGrad=d.asm.AvgPoolGrad).apply(null,arguments)},d._BatchMatMul=function(){return(d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},d._Bincount=function(){return(d._Bincount=d.asm.Bincount).apply(null,arguments)},d._BitwiseAnd=function(){return(d._BitwiseAnd=d.asm.BitwiseAnd).apply(null,arguments)},d._Ceil=function(){return(d._Ceil=d.asm.Ceil).apply(null,arguments)},d._ClipByValue=function(){return(d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},d._Conv2D=function(){return(d._Conv2D=d.asm.Conv2D).apply(null,arguments)},d._Conv2DBackpropInput=function(){return(d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},d._Conv3D=function(){return(d._Conv3D=d.asm.Conv3D).apply(null,arguments)},d._Conv3DBackpropFilterV2=function(){return(d._Conv3DBackpropFilterV2=d.asm.Conv3DBackpropFilterV2).apply(null,arguments)},d._Conv3DBackpropInputV2=function(){return(d._Conv3DBackpropInputV2=d.asm.Conv3DBackpropInputV2).apply(null,arguments)},d._Cos=function(){return(d._Cos=d.asm.Cos).apply(null,arguments)},d._Cosh=function(){return(d._Cosh=d.asm.Cosh).apply(null,arguments)},d._CropAndResize=function(){return(d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},d._Cumprod=function(){return(d._Cumprod=d.asm.Cumprod).apply(null,arguments)},d._Cumsum=function(){return(d._Cumsum=d.asm.Cumsum).apply(null,arguments)},d._DenseBincount=function(){return(d._DenseBincount=d.asm.DenseBincount).apply(null,arguments)},d._DepthToSpace=function(){return(d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},d._DepthwiseConv2dNative=function(){return(d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},d._Diag=function(){return(d._Diag=d.asm.Diag).apply(null,arguments)},d._Dilation2D=function(){return(d._Dilation2D=d.asm.Dilation2D).apply(null,arguments)},d._Dilation2DBackpropFilter=function(){return(d._Dilation2DBackpropFilter=d.asm.Dilation2DBackpropFilter).apply(null,arguments)},d._Dilation2DBackpropInput=function(){return(d._Dilation2DBackpropInput=d.asm.Dilation2DBackpropInput).apply(null,arguments)},d._Elu=function(){return(d._Elu=d.asm.Elu).apply(null,arguments)},d._EluGrad=function(){return(d._EluGrad=d.asm.EluGrad).apply(null,arguments)},d._Equal=function(){return(d._Equal=d.asm.Equal).apply(null,arguments)},d._Erf=function(){return(d._Erf=d.asm.Erf).apply(null,arguments)},d._Exp=function(){return(d._Exp=d.asm.Exp).apply(null,arguments)},d._Expm1=function(){return(d._Expm1=d.asm.Expm1).apply(null,arguments)},d._FlipLeftRight=function(){return(d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},d._Floor=function(){return(d._Floor=d.asm.Floor).apply(null,arguments)},d._FloorDiv=function(){return(d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},d._FusedBatchNorm=function(){return(d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},d._FusedConv2D=function(){return(d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},d._FusedDepthwiseConv2D=function(){return(d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},d._Gather=function(){return(d._Gather=d.asm.Gather).apply(null,arguments)},d._GatherNd=function(){return(d._GatherNd=d.asm.GatherNd).apply(null,arguments)},d._Greater=function(){return(d._Greater=d.asm.Greater).apply(null,arguments)},d._GreaterEqual=function(){return(d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},d._IsFinite=function(){return(d._IsFinite=d.asm.IsFinite).apply(null,arguments)},d._IsInf=function(){return(d._IsInf=d.asm.IsInf).apply(null,arguments)},d._IsNan=function(){return(d._IsNan=d.asm.IsNan).apply(null,arguments)},d._LRN=function(){return(d._LRN=d.asm.LRN).apply(null,arguments)},d._LRNGrad=function(){return(d._LRNGrad=d.asm.LRNGrad).apply(null,arguments)},d._LeakyRelu=function(){return(d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},d._Less=function(){return(d._Less=d.asm.Less).apply(null,arguments)},d._LessEqual=function(){return(d._LessEqual=d.asm.LessEqual).apply(null,arguments)},d._LinSpace=function(){return(d._LinSpace=d.asm.LinSpace).apply(null,arguments)},d._Log=function(){return(d._Log=d.asm.Log).apply(null,arguments)},d._Log1p=function(){return(d._Log1p=d.asm.Log1p).apply(null,arguments)},d._LogicalAnd=function(){return(d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},d._LogicalNot=function(){return(d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},d._LogicalOr=function(){return(d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},d._LogicalXor=function(){return(d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},d._Max=function(){return(d._Max=d.asm.Max).apply(null,arguments)},d._MaxPool=function(){return(d._MaxPool=d.asm.MaxPool).apply(null,arguments)},d._MaxPool3D=function(){return(d._MaxPool3D=d.asm.MaxPool3D).apply(null,arguments)},d._MaxPool3DGrad=function(){return(d._MaxPool3DGrad=d.asm.MaxPool3DGrad).apply(null,arguments)},d._MaxPoolGrad=function(){return(d._MaxPoolGrad=d.asm.MaxPoolGrad).apply(null,arguments)},d._MaxPoolWithArgmax=function(){return(d._MaxPoolWithArgmax=d.asm.MaxPoolWithArgmax).apply(null,arguments)},d._Maximum=function(){return(d._Maximum=d.asm.Maximum).apply(null,arguments)},d._Mean=function(){return(d._Mean=d.asm.Mean).apply(null,arguments)},d._Min=function(){return(d._Min=d.asm.Min).apply(null,arguments)},d._Minimum=function(){return(d._Minimum=d.asm.Minimum).apply(null,arguments)},d._MirrorPad=function(){return(d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},d._Mod=function(){return(d._Mod=d.asm.Mod).apply(null,arguments)},d._Multinomial=function(){return(d._Multinomial=d.asm.Multinomial).apply(null,arguments)},d._Multiply=function(){return(d._Multiply=d.asm.Multiply).apply(null,arguments)},d._Neg=function(){return(d._Neg=d.asm.Neg).apply(null,arguments)},d._NonMaxSuppressionV3=function(){return(d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},d._NonMaxSuppressionV4=function(){return(d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},d._NonMaxSuppressionV5=function(){return(d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},d._NotEqual=function(){return(d._NotEqual=d.asm.NotEqual).apply(null,arguments)},d._OneHot=function(){return(d._OneHot=d.asm.OneHot).apply(null,arguments)},d._PadV2=function(){return(d._PadV2=d.asm.PadV2).apply(null,arguments)},d._Pow=function(){return(d._Pow=d.asm.Pow).apply(null,arguments)},d._Prelu=function(){return(d._Prelu=d.asm.Prelu).apply(null,arguments)},d._Prod=function(){return(d._Prod=d.asm.Prod).apply(null,arguments)},d._RealDiv=function(){return(d._RealDiv=d.asm.RealDiv).apply(null,arguments)},d._Reciprocal=function(){return(d._Reciprocal=d.asm.Reciprocal).apply(null,arguments)},d._Relu=function(){return(d._Relu=d.asm.Relu).apply(null,arguments)},d._Relu6=function(){return(d._Relu6=d.asm.Relu6).apply(null,arguments)},d._ResizeBilinear=function(){return(d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},d._ResizeBilinearGrad=function(){return(d._ResizeBilinearGrad=d.asm.ResizeBilinearGrad).apply(null,arguments)},d._ResizeNearestNeighbor=function(){return(d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},d._ResizeNearestNeighborGrad=function(){return(d._ResizeNearestNeighborGrad=d.asm.ResizeNearestNeighborGrad).apply(null,arguments)},d._Reverse=function(){return(d._Reverse=d.asm.Reverse).apply(null,arguments)},d._RotateWithOffset=function(){return(d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},d._Round=function(){return(d._Round=d.asm.Round).apply(null,arguments)},d._Rsqrt=function(){return(d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},d._ScatterNd=function(){return(d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},d._SearchSorted=function(){return(d._SearchSorted=d.asm.SearchSorted).apply(null,arguments)},d._SelectV2=function(){return(d._SelectV2=d.asm.SelectV2).apply(null,arguments)},d._Selu=function(){return(d._Selu=d.asm.Selu).apply(null,arguments)},d._Sigmoid=function(){return(d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},d._Sign=function(){return(d._Sign=d.asm.Sign).apply(null,arguments)},d._Sin=function(){return(d._Sin=d.asm.Sin).apply(null,arguments)},d._Sinh=function(){return(d._Sinh=d.asm.Sinh).apply(null,arguments)},d._Softmax=function(){return(d._Softmax=d.asm.Softmax).apply(null,arguments)},d._Softplus=function(){return(d._Softplus=d.asm.Softplus).apply(null,arguments)},d._SparseFillEmptyRows=function(){return(d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},d._SparseReshape=function(){return(d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},d._SparseSegmentReduction=function(){return(d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},d._SparseToDense=function(){return(d._SparseToDense=d.asm.SparseToDense).apply(null,arguments)},d._Sqrt=function(){return(d._Sqrt=d.asm.Sqrt).apply(null,arguments)},d._Square=function(){return(d._Square=d.asm.Square).apply(null,arguments)},d._SquaredDifference=function(){return(d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},d._Step=function(){return(d._Step=d.asm.Step).apply(null,arguments)},d._StridedSlice=function(){return(d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},d._Sub=function(){return(d._Sub=d.asm.Sub).apply(null,arguments)},d._Sum=function(){return(d._Sum=d.asm.Sum).apply(null,arguments)},d._Tan=function(){return(d._Tan=d.asm.Tan).apply(null,arguments)},d._Tanh=function(){return(d._Tanh=d.asm.Tanh).apply(null,arguments)},d._TensorScatterUpdate=function(){return(d._TensorScatterUpdate=d.asm.TensorScatterUpdate).apply(null,arguments)},d._Tile=function(){return(d._Tile=d.asm.Tile).apply(null,arguments)},d._TopK=function(){return(d._TopK=d.asm.TopK).apply(null,arguments)},d._Transform=function(){return(d._Transform=d.asm.Transform).apply(null,arguments)},d._Transpose=function(){return(d._Transpose=d.asm.Transpose).apply(null,arguments)},d.__FusedMatMul=function(){return(d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},d._malloc=function(){return(d._malloc=d.asm.malloc).apply(null,arguments)},d._free=function(){return(d._free=d.asm.free).apply(null,arguments)},d.__emscripten_tls_init=function(){return(d.__emscripten_tls_init=d.asm._emscripten_tls_init).apply(null,arguments)},d._pthread_self=function(){return(Ge=d._pthread_self=d.asm.pthread_self).apply(null,arguments)}),He=(d.___errno_location=function(){return(d.___errno_location=d.asm.__errno_location).apply(null,arguments)},d.__emscripten_thread_init=function(){return(He=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)}),je=(d.__emscripten_thread_crashed=function(){return(d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},d._emscripten_main_thread_process_queued_calls=function(){return(d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},d._emscripten_main_browser_thread_id=function(){return(d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},d._emscripten_run_in_main_runtime_thread_js=function(){return(je=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),qe=(d._emscripten_dispatch_to_thread_=function(){return(d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},d.__emscripten_proxy_execute_task_queue=function(){return(qe=d.__emscripten_proxy_execute_task_queue=d.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Xe=d.__emscripten_thread_free_data=function(){return(Xe=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},Ke=d.__emscripten_thread_exit=function(){return(Ke=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},Ze=d._emscripten_stack_set_limits=function(){return(Ze=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},Ye=d.stackSave=function(){return(Ye=d.stackSave=d.asm.stackSave).apply(null,arguments)},Je=d.stackRestore=function(){return(Je=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},Qe=d.stackAlloc=function(){return(Qe=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)};d.dynCall_iijjiiii=function(){return(d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},d.dynCall_jiji=function(){return(d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)};function et(e){if(e=e||m,!(ie>0)){if(b)return o(d),ne(),void startWorker(d);(function(){if(d.preRun)for("function"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)ae(d.preRun.shift());be(J)})(),ie>0||(d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),t()},1)):t())}function t(){Le||(Le=!0,d.calledRun=!0,!L&&(ne(),o(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),function(){if(!b){if(d.postRun)for("function"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;)re(d.postRun.shift());be(ee)}}()))}}if(d.keepRuntimeAlive=te,d.wasmMemory=$,d.cwrap=function(e,t,n,a){var r=(n=n||[]).every(e=>"number"===e||"boolean"===e);return"string"!==t&&r&&!a?Oe(e):function(){return ze(e,t,n,arguments)}},d.ExitStatus=fe,d.PThread=xe,oe=function e(){Le||et(),Le||(oe=e)},d.preInit)for("function"==typeof d.preInit&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();if(et(),u&&(We={uncaughtException:process.listeners("uncaughtException").filter(function(e){return!u.uncaughtException.indexOf(e)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(e){return!u.unhandledRejection.indexOf(e)>-1})}),"undefined"!=typeof WasmBackendModule)Be=WasmBackendModule;else{if("undefined"==typeof t)throw new Error("Could not find wasm module in post.js");Be=t}if(We){var tt=Be._dispose;Be._dispose=function(){tt(),We.uncaughtException.forEach(function(e){process.removeListener("uncaughtException",e)}),We.unhandledRejection.forEach(function(e){process.removeListener("unhandledRejection",e)})}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&n.amdO?define([],function(){return r}):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=r)}),W=x((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'}),B=x((e,t)=>{var r=(()=>{var e="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||a,function(t){var n,a,r,i="undefined"!=typeof(t=t||{})?t:{};i.ready=new Promise(function(e,t){n=e,a=t}),"undefined"!=typeof process&&process.listeners&&(r={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var s,o,l,u=Object.assign({},i),d=[],p="object"==typeof window,h="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,f="";if(c){var m=_(),g=P();f=h?g.dirname(f)+"/":"//",s=(e,t)=>(e=H(e)?new URL(e):g.normalize(e),m.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=s(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=H(e)?new URL(e):g.normalize(e),m.readFile(e,function(e,a){e?n(e):t(a.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof q))throw e}),process.on("unhandledRejection",function(e){throw e}),i.inspect=function(){return"[Emscripten Module object]"}}else(p||h)&&(h?f=self.location.href:"undefined"!=typeof document&&document.currentScript&&(f=document.currentScript.src),e&&(f=e),f=0!==f.indexOf("blob:")?f.substr(0,f.replace(/[?#].*/,"").lastIndexOf("/")+1):"",s=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},h&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)},e=>document.title=e);var y=i.print||console.log.bind(console),A=i.printErr||console.warn.bind(console);Object.assign(i,u),u=null,i.arguments&&(d=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit;var x;i.wasmBinary&&(x=i.wasmBinary);var b=i.noExitRuntime||!0;"object"!=typeof WebAssembly&&B("no native wasm support detected");var v,w=!1;var k,I,S,N,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function T(e,t,n){for(var a=(t>>>=0)+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&C)return C.decode(e.subarray(t,r));for(var i="";t<r;){var s=e[t++];if(128&s){var o=63&e[t++];if(192!=(224&s)){var l=63&e[t++];if((s=224==(240&s)?(15&s)<<12|o<<6|l:(7&s)<<18|o<<12|l<<6|63&e[t++])<65536)i+=String.fromCharCode(s);else{var u=s-65536;i+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else i+=String.fromCharCode((31&s)<<6|o)}else i+=String.fromCharCode(s)}return i}function R(e,t){return(e>>>=0)?T(S,e,t):""}function E(e){k=e,i.HEAP8=I=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=new Int32Array(e),i.HEAPU8=S=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=N=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var $=[],M=[],F=[];function O(e){$.unshift(e)}function D(e){F.unshift(e)}var z=0,L=null,W=null;function B(e){i.onAbort&&i.onAbort(e),A(e="Aborted("+e+")"),w=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}var V,U;function G(e){return e.startsWith("data:application/octet-stream;base64,")}function H(e){return e.startsWith("file://")}function j(e){try{if(e==V&&x)return new Uint8Array(x);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(t){B(t)}}function q(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function X(e){for(;e.length>0;)e.shift()(i)}function K(e){try{return v.grow(e-k.byteLength+65535>>>16),E(v.buffer),1}catch(t){}}G(V="tfjs-backend-wasm.wasm")||(U=V,V=i.locateFile?i.locateFile(U,f):f+U);var Z=[null,[],[]];function Y(e,t){var n=Z[e];0===t||10===t?((1===e?y:A)(T(n,0)),n.length=0):n.push(t)}function J(e){return i["_"+e]}function Q(e,t,n,a,r){var i={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);(function(e,t,n){(function(e,t,n,a){if(!(a>0))return 0;for(var r=n>>>=0,i=n+a-1,s=0;s<e.length;++s){var o=e.charCodeAt(s);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++s)),o<=127){if(n>=i)break;t[n++>>>0]=o}else if(o<=2047){if(n+1>=i)break;t[n++>>>0]=192|o>>6,t[n++>>>0]=128|63&o}else if(o<=65535){if(n+2>=i)break;t[n++>>>0]=224|o>>12,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}else{if(n+3>=i)break;t[n++>>>0]=240|o>>18,t[n++>>>0]=128|o>>12&63,t[n++>>>0]=128|o>>6&63,t[n++>>>0]=128|63&o}}t[n>>>0]=0})(e,S,t,n)})(e,t=se(n),n)}return t},array:e=>{var t=se(e.length);return function(e,t){I.set(e,t>>>0)}(e,t),t}};var s=J(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var d=i[n[u]];d?(0===l&&(l=re()),o[u]=d(a[u])):o[u]=a[u]}var p,h=s.apply(null,o);return p=h,0!==l&&ie(l),h=function(e){return"string"===t?R(e):"boolean"===t?!!e:e}(p),h}var ee,te,ne,ae={abort:function(){B("")},emscripten_get_heap_max:function(){return 4294901760},emscripten_memcpy_big:function(e,t,n){S.copyWithin(e>>>0,t>>>0,t+n>>>0)},emscripten_resize_heap:function(e){var t=S.length,n=4294901760;if((e>>>=0)>n)return!1;let a=(e,t)=>e+(t-e%t)%t;for(var r=1;r<=4;r*=2){var i=t*(1+.2/r);if(i=Math.min(i,e+100663296),K(Math.min(n,a(Math.max(e,i),65536))))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,a,r){return 70},fd_write:function(e,t,n,a){for(var r=0,i=0;i<n;i++){var s=N[t>>>2],o=N[t+4>>>2];t+=8;for(var l=0;l<o;l++)Y(e,S[s+l>>>0]);r+=o}return N[a>>>2]=r,0}},re=(function(){var e={env:ae,wasi_snapshot_preview1:ae};function t(e,t){var n=e.exports;i.asm=n,E((v=i.asm.memory).buffer),i.asm.__indirect_function_table,function(e){M.unshift(e)}(i.asm.__wasm_call_ctors),function(){if(z--,i.monitorRunDependencies&&i.monitorRunDependencies(z),0==z&&(null!==L&&(clearInterval(L),L=null),W)){var e=W;W=null,e()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!x&&(p||h)){if("function"==typeof fetch&&!H(V))return fetch(V,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+V+"'";return e.arrayBuffer()}).catch(function(){return j(V)});if(o)return new Promise(function(e,t){o(V,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return j(V)})}().then(function(t){return WebAssembly.instantiate(t,e)}).then(function(e){return e}).then(t,function(e){A("failed to asynchronously prepare wasm: "+e),B(e)})}if(z++,i.monitorRunDependencies&&i.monitorRunDependencies(z),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(s){A("Module.instantiateWasm callback failed with error: "+s),a(s)}(x||"function"!=typeof WebAssembly.instantiateStreaming||G(V)||H(V)||c||"function"!=typeof fetch?r(n):fetch(V,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return A("wasm streaming compile failed: "+e),A("falling back to ArrayBuffer instantiation"),r(n)})})).catch(a)}(),i.___wasm_call_ctors=function(){return(i.___wasm_call_ctors=i.asm.__wasm_call_ctors).apply(null,arguments)},i._init=function(){return(i._init=i.asm.init).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.init_with_threads_count).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.get_threads_count).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.register_tensor).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.dispose_data).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.dispose).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.Abs).apply(null,arguments)},i._Acos=function(){return(i._Acos=i.asm.Acos).apply(null,arguments)},i._Acosh=function(){return(i._Acosh=i.asm.Acosh).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.Add).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.AddN).apply(null,arguments)},i._All=function(){return(i._All=i.asm.All).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.Any).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.ArgMax).apply(null,arguments)},i._ArgMin=function(){return(i._ArgMin=i.asm.ArgMin).apply(null,arguments)},i._Asin=function(){return(i._Asin=i.asm.Asin).apply(null,arguments)},i._Asinh=function(){return(i._Asinh=i.asm.Asinh).apply(null,arguments)},i._Atan=function(){return(i._Atan=i.asm.Atan).apply(null,arguments)},i._Atan2=function(){return(i._Atan2=i.asm.Atan2).apply(null,arguments)},i._Atanh=function(){return(i._Atanh=i.asm.Atanh).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.AvgPool).apply(null,arguments)},i._AvgPool3D=function(){return(i._AvgPool3D=i.asm.AvgPool3D).apply(null,arguments)},i._AvgPool3DGrad=function(){return(i._AvgPool3DGrad=i.asm.AvgPool3DGrad).apply(null,arguments)},i._AvgPoolGrad=function(){return(i._AvgPoolGrad=i.asm.AvgPoolGrad).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.BatchMatMul).apply(null,arguments)},i._Bincount=function(){return(i._Bincount=i.asm.Bincount).apply(null,arguments)},i._BitwiseAnd=function(){return(i._BitwiseAnd=i.asm.BitwiseAnd).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.Ceil).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.ClipByValue).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.Conv2D).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.Conv2DBackpropInput).apply(null,arguments)},i._Conv3D=function(){return(i._Conv3D=i.asm.Conv3D).apply(null,arguments)},i._Conv3DBackpropFilterV2=function(){return(i._Conv3DBackpropFilterV2=i.asm.Conv3DBackpropFilterV2).apply(null,arguments)},i._Conv3DBackpropInputV2=function(){return(i._Conv3DBackpropInputV2=i.asm.Conv3DBackpropInputV2).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.Cos).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.Cosh).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.CropAndResize).apply(null,arguments)},i._Cumprod=function(){return(i._Cumprod=i.asm.Cumprod).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.Cumsum).apply(null,arguments)},i._DenseBincount=function(){return(i._DenseBincount=i.asm.DenseBincount).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.DepthToSpace).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.DepthwiseConv2dNative).apply(null,arguments)},i._Diag=function(){return(i._Diag=i.asm.Diag).apply(null,arguments)},i._Dilation2D=function(){return(i._Dilation2D=i.asm.Dilation2D).apply(null,arguments)},i._Dilation2DBackpropFilter=function(){return(i._Dilation2DBackpropFilter=i.asm.Dilation2DBackpropFilter).apply(null,arguments)},i._Dilation2DBackpropInput=function(){return(i._Dilation2DBackpropInput=i.asm.Dilation2DBackpropInput).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.Elu).apply(null,arguments)},i._EluGrad=function(){return(i._EluGrad=i.asm.EluGrad).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.Equal).apply(null,arguments)},i._Erf=function(){return(i._Erf=i.asm.Erf).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.Exp).apply(null,arguments)},i._Expm1=function(){return(i._Expm1=i.asm.Expm1).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.FlipLeftRight).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.Floor).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.FloorDiv).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.FusedBatchNorm).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.FusedConv2D).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.FusedDepthwiseConv2D).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Gather).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.GatherNd).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.Greater).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.GreaterEqual).apply(null,arguments)},i._IsFinite=function(){return(i._IsFinite=i.asm.IsFinite).apply(null,arguments)},i._IsInf=function(){return(i._IsInf=i.asm.IsInf).apply(null,arguments)},i._IsNan=function(){return(i._IsNan=i.asm.IsNan).apply(null,arguments)},i._LRN=function(){return(i._LRN=i.asm.LRN).apply(null,arguments)},i._LRNGrad=function(){return(i._LRNGrad=i.asm.LRNGrad).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.LeakyRelu).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.Less).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.LessEqual).apply(null,arguments)},i._LinSpace=function(){return(i._LinSpace=i.asm.LinSpace).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.Log).apply(null,arguments)},i._Log1p=function(){return(i._Log1p=i.asm.Log1p).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.LogicalAnd).apply(null,arguments)},i._LogicalNot=function(){return(i._LogicalNot=i.asm.LogicalNot).apply(null,arguments)},i._LogicalOr=function(){return(i._LogicalOr=i.asm.LogicalOr).apply(null,arguments)},i._LogicalXor=function(){return(i._LogicalXor=i.asm.LogicalXor).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Max).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm.MaxPool).apply(null,arguments)},i._MaxPool3D=function(){return(i._MaxPool3D=i.asm.MaxPool3D).apply(null,arguments)},i._MaxPool3DGrad=function(){return(i._MaxPool3DGrad=i.asm.MaxPool3DGrad).apply(null,arguments)},i._MaxPoolGrad=function(){return(i._MaxPoolGrad=i.asm.MaxPoolGrad).apply(null,arguments)},i._MaxPoolWithArgmax=function(){return(i._MaxPoolWithArgmax=i.asm.MaxPoolWithArgmax).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.Maximum).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.Mean).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.Min).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.Minimum).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.MirrorPad).apply(null,arguments)},i._Mod=function(){return(i._Mod=i.asm.Mod).apply(null,arguments)},i._Multinomial=function(){return(i._Multinomial=i.asm.Multinomial).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.Multiply).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.Neg).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.NonMaxSuppressionV3).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.NonMaxSuppressionV4).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.NonMaxSuppressionV5).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.NotEqual).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.OneHot).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.PadV2).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.Pow).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.Prelu).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.Prod).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.RealDiv).apply(null,arguments)},i._Reciprocal=function(){return(i._Reciprocal=i.asm.Reciprocal).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.Relu).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.Relu6).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.ResizeBilinear).apply(null,arguments)},i._ResizeBilinearGrad=function(){return(i._ResizeBilinearGrad=i.asm.ResizeBilinearGrad).apply(null,arguments)},i._ResizeNearestNeighbor=function(){return(i._ResizeNearestNeighbor=i.asm.ResizeNearestNeighbor).apply(null,arguments)},i._ResizeNearestNeighborGrad=function(){return(i._ResizeNearestNeighborGrad=i.asm.ResizeNearestNeighborGrad).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.Reverse).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.RotateWithOffset).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.Round).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.Rsqrt).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.ScatterNd).apply(null,arguments)},i._SearchSorted=function(){return(i._SearchSorted=i.asm.SearchSorted).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.SelectV2).apply(null,arguments)},i._Selu=function(){return(i._Selu=i.asm.Selu).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.Sigmoid).apply(null,arguments)},i._Sign=function(){return(i._Sign=i.asm.Sign).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Sin).apply(null,arguments)},i._Sinh=function(){return(i._Sinh=i.asm.Sinh).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Softmax).apply(null,arguments)},i._Softplus=function(){return(i._Softplus=i.asm.Softplus).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.SparseFillEmptyRows).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.SparseReshape).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.SparseSegmentReduction).apply(null,arguments)},i._SparseToDense=function(){return(i._SparseToDense=i.asm.SparseToDense).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Sqrt).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Square).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.SquaredDifference).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Step).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.StridedSlice).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Sub).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.Sum).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Tan).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Tanh).apply(null,arguments)},i._TensorScatterUpdate=function(){return(i._TensorScatterUpdate=i.asm.TensorScatterUpdate).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Tile).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.TopK).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Transform).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Transpose).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm._FusedMatMul).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.malloc).apply(null,arguments)},i._free=function(){return(i._free=i.asm.free).apply(null,arguments)},i.___errno_location=function(){return(i.___errno_location=i.asm.__errno_location).apply(null,arguments)},i.stackSave=function(){return(re=i.stackSave=i.asm.stackSave).apply(null,arguments)}),ie=i.stackRestore=function(){return(ie=i.stackRestore=i.asm.stackRestore).apply(null,arguments)},se=i.stackAlloc=function(){return(se=i.stackAlloc=i.asm.stackAlloc).apply(null,arguments)};i.dynCall_iijjiiii=function(){return(i.dynCall_iijjiiii=i.asm.dynCall_iijjiiii).apply(null,arguments)},i.dynCall_jiji=function(){return(i.dynCall_jiji=i.asm.dynCall_jiji).apply(null,arguments)};function oe(e){function t(){ee||(ee=!0,i.calledRun=!0,!w&&(X(M),n(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),function(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)D(i.postRun.shift());X(F)}()))}e=e||d,z>0||(function(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)O(i.preRun.shift());X($)}(),z>0)||(i.setStatus?(i.setStatus("Running..."),setTimeout(function(){setTimeout(function(){i.setStatus("")},1),t()},1)):t())}if(i.cwrap=function(e,t,n,a){var r=(n=n||[]).every(e=>"number"===e||"boolean"===e);return"string"!==t&&r&&!a?J(e):function(){return Q(e,t,n,arguments)}},W=function e(){ee||oe(),ee||(W=e)},i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(oe(),r&&(te={uncaughtException:process.listeners("uncaughtException").filter(function(e){return!r.uncaughtException.indexOf(e)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(e){return!r.unhandledRejection.indexOf(e)>-1})}),"undefined"!=typeof t)ne=t;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");ne=WasmBackendModuleThreadedSimd}if(te){var le=ne._dispose;ne._dispose=function(){le(),te.uncaughtException.forEach(function(e){process.removeListener("uncaughtException",e)}),te.unhandledRejection.forEach(function(e){process.removeListener("unhandledRejection",e)})}}return t.ready}})();"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&n.amdO?define([],function(){return r}):"object"==typeof e&&(e.WasmBackendModule=r)}),V=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},U=class{refCount(e){return G("refCount")}incRef(e){return G("incRef")}timerAvailable(){return!0}time(e){return G("time")}read(e){return G("read")}readSync(e){return G("readSync")}readToGPU(e,t){return G("readToGPU")}numDataIds(){return G("numDataIds")}disposeData(e,t){return G("disposeData")}write(e,t,n){return G("write")}move(e,t,n,a,r){return G("move")}createTensorFromGPUData(e,t,n){return G("createTensorFromGPUData")}memory(){return G("memory")}floatPrecision(){return G("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return G("dispose")}};function G(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,K(e,t,n)}function j(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,K(e,n,a),K(t,n,a)}function q(e,t,n){return Math.max(e,Math.min(t,n))}function X(e){return e%2===0?e:e+1}function K(e,t,n){let a=e[t];e[t]=e[n],e[n]=a}function Z(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function Y(e,t){let n=Math.random();return t*n+(1-n)*e}function J(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function Q(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ee(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";Q(ie(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function te(e){Q(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ne(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ae(e){return 0===e.length}function re(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function ie(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function se(e){return e%1===0}function oe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function le(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ue(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return H(t),t}function de(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function pe(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise((r,i)=>{let s=0,o=()=>{if(e())return void r();s++;let l=t(s);null!=n&&s>=n?i():null!=a?a(o,l):setTimeout(o,l)};o()})}function he(e,t){let n=1,a=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${i}`);a=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function ce(e,t){let n=t.length;return Q((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),Q(e.every(e=>se(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function fe(e,t){let n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:ce(t,e).sort(),s=0;for(let o=0;o<e.length;++o){if(null!=i){if(i[s]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==i[s]||i[s]>o)&&1===e[o]&&(n.push(e[o]),a.push(o)),i[s]<=o&&s++}1!==e[o]&&(n.push(e[o]),a.push(o))}return{newShape:n,keptDims:a}}function me(e,t){return ge(e,t)}function ge(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ye(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function Ae(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function xe(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function be(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function ve(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function we(e){return"string"==typeof e||e instanceof String}function ke(e){return"boolean"==typeof e}function Ie(e){return"number"==typeof e}function Se(e){return Array.isArray(e)?Se(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ie(e)?"float32":we(e)?"string":ke(e)?"bool":"float32"}function Ne(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ce(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Te(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Re(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=new Array;if(1===t.length){let i=t[0]*(a?2:1);for(let t=0;t<i;t++)r[t]=n[e+t]}else{let i=t[0],s=t.slice(1),o=s.reduce((e,t)=>e*t)*(a?2:1);for(let t=0;t<i;t++)r[t]=Re(e+t*o,s,n,a)}return r}function Ee(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];let a=e.reduce((e,t)=>e*t)*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Re(0,e,t,n)}function $e(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Me(e,t){let n=Fe(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function Fe(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function _e(e,t){let n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Ee(e,new Float32Array(n));if("int32"===t)return Ee(e,new Int32Array(n));if("bool"===t)return Ee(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Pe(e){e.forEach(t=>{Q(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Oe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function De(e,t,n){if(0===t)return[];if(1===t)return[e];let a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function ze(e){return e&&e.then&&"function"==typeof e.then}var Le="tfjsflags",We=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Be,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ve().getBool("IS_TEST")||Ve().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];Ve().getBool("IS_TEST")||Ve().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ze(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"==typeof this.global||"undefined"==typeof this.global.location||"undefined"==typeof this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);Le in e&&e[Le].split(",").forEach(e=>{let[t,n]=e.split(":");this.urlFlags[t]=function(e,t){let n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)})}};function Be(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,a[0],a[1]),a.join("=")}),t}function Ve(){return Ge}var Ue,Ge=null;function He(){if(null==Ue){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Ue=e}return Ue}function je(e,t){let n=function(){let e=He();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var qe="Abs",Xe="Acos",Ke="Acosh",Ze="Add",Ye="AddN",Je="All",Qe="Any",et="ArgMax",tt="ArgMin",nt="Asin",at="Asinh",rt="Atan",it="Atanh",st="Atan2",ot="AvgPool",lt="AvgPoolGrad",ut="AvgPool3D",dt="AvgPool3DGrad",pt="BatchMatMul",ht="BatchToSpaceND",ct="Bincount",ft="BitwiseAnd",mt="BroadcastTo",gt="BroadcastArgs",yt="Cast",At="Ceil",xt="ClipByValue",bt="Complex",vt="ComplexAbs",wt="Concat",kt="Conv2D",It="Conv2DBackpropFilter",St="Conv2DBackpropInput",Nt="Conv3D",Ct="Conv3DBackpropFilterV2",Tt="Conv3DBackpropInputV2",Rt="Cos",Et="Cosh",$t="Cumprod",Mt="Cumsum",Ft="CropAndResize",_t="DenseBincount",Pt="DepthToSpace",Ot="DepthwiseConv2dNative",Dt="DepthwiseConv2dNativeBackpropFilter",zt="DepthwiseConv2dNativeBackpropInput",Lt="Diag",Wt="Dilation2D",Bt="Dilation2DBackpropInput",Vt="Dilation2DBackpropFilter",Ut="Draw",Gt="RealDiv",Ht="Einsum",jt="Elu",qt="EluGrad",Xt="Erf",Kt="Equal",Zt="Exp",Yt="ExpandDims",Jt="Expm1",Qt="FFT",en="Fill",tn="FlipLeftRight",nn="Floor",an="FloorDiv",rn="FusedBatchNorm",sn="GatherV2",on="GatherNd",ln="Greater",un="GreaterEqual",dn="Identity",pn="IFFT",hn="Imag",cn="IsFinite",fn="IsInf",mn="IsNan",gn="LeakyRelu",yn="Less",An="LessEqual",xn="LinSpace",bn="Log",vn="Log1p",wn="LogicalAnd",kn="LogicalNot",In="LogicalOr",Sn="LogicalXor",Nn="LogSoftmax",Cn="LowerBound",Tn="LRN",Rn="LRNGrad",En="MatrixBandPart",$n="Max",Mn="Maximum",Fn="MaxPool",_n="MaxPoolGrad",Pn="MaxPool3D",On="MaxPool3DGrad",Dn="MaxPoolWithArgmax",zn="Mean",Ln="Min",Wn="Minimum",Bn="MirrorPad",Vn="Mod",Un="Multinomial",Gn="Multiply",Hn="Neg",jn="NotEqual",qn="NonMaxSuppressionV3",Xn="NonMaxSuppressionV4",Kn="NonMaxSuppressionV5",Zn="OnesLike",Yn="OneHot",Jn="Pack",Qn="PadV2",ea="Pool",ta="Pow",na="Prelu",aa="Prod",ra="RaggedGather",ia="RaggedRange",sa="RaggedTensorToTensor",oa="Range",la="Real",ua="Reciprocal",da="Relu",pa="Reshape",ha="ResizeNearestNeighbor",ca="ResizeNearestNeighborGrad",fa="ResizeBilinear",ma="ResizeBilinearGrad",ga="Relu6",ya="Reverse",Aa="Round",xa="Rsqrt",ba="ScatterNd",va="TensorScatterUpdate",wa="SearchSorted",ka="Select",Ia="Selu",Sa="Slice",Na="Sin",Ca="Sinh",Ta="Sign",Ra="Sigmoid",Ea="Softplus",$a="Sqrt",Ma="Sum",Fa="SpaceToBatchND",_a="SplitV",Pa="Softmax",Oa="SparseFillEmptyRows",Da="SparseReshape",za="SparseSegmentMean",La="SparseSegmentSum",Wa="SparseToDense",Ba="SquaredDifference",Va="Square",Ua="StaticRegexReplace",Ga="StridedSlice",Ha="StringNGrams",ja="StringSplit",qa="StringToHashBucketFast",Xa="Sub",Ka="Tan",Za="Tanh",Ya="Tile",Ja="TopK",Qa="Transform",er="Transpose",tr="Unique",nr="Unpack",ar="UnsortedSegmentSum",rr="UpperBound",ir="ZerosLike",sr="Step",or="FromPixels",lr="RotateWithOffset",ur="_FusedMatMul",dr="FusedConv2D",pr="FusedDepthwiseConv2D";function hr(){Ve().getBool("IS_TEST")||Ve().getBool("PROD")||console.warn(...arguments)}function cr(){Ve().getBool("IS_TEST")||Ve().getBool("PROD")||console.log(...arguments)}var fr=je("kernelRegistry",()=>new Map),mr=je("gradRegistry",()=>new Map);function gr(e,t){let n=Ir(e,t);return fr.get(n)}function yr(e){return mr.get(e)}function Ar(e){let t=fr.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[i,s]=r,[o]=i.split("_");o===e&&n.push(s)}return n}function xr(e){let{kernelName:t,backendName:n}=e,a=Ir(t,n);fr.has(a)&&hr(`The kernel '${t}' for backend '${n}' is already registered`),fr.set(a,e)}function br(e){let{kernelName:t}=e;mr.has(t)&&Ve().getBool("DEBUG")&&hr(`Overriding the gradient for '${t}'`),mr.set(t,e)}function vr(e,t){let n=Ir(e,t);if(!fr.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);fr.delete(n)}function wr(e){if(!mr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);mr.delete(e)}function kr(e,t){Ar(e).forEach(e=>{xr(Object.assign({},e,{backendName:t}))})}function Ir(e,t){return`${t}_${e}`}var Sr={};function Nr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}b(Sr,{arraysEqual:()=>ie,arraysEqualWithNull:()=>re,assert:()=>Q,assertNonNegativeIntegerDimensions:()=>Pe,assertNonNull:()=>te,assertShapesMatch:()=>ee,bytesFromStringArray:()=>ve,bytesPerElement:()=>be,checkConversionForErrors:()=>ye,clamp:()=>q,computeStrides:()=>Te,convertBackendValuesAndArrayBuffer:()=>$e,createScalarValue:()=>Br,createShuffledIndices:()=>ue,decodeString:()=>jr,distSquared:()=>J,encodeString:()=>Hr,fetch:()=>Gr,fingerPrint64:()=>Wr,flatten:()=>Xr,getArrayFromDType:()=>ge,getTypedArrayFromDType:()=>me,hasEncodingLoss:()=>xe,hexToLong:()=>Rr,indexToLoc:()=>De,inferDtype:()=>Se,inferFromImplicitShape:()=>he,isBoolean:()=>ke,isFunction:()=>Ne,isInt:()=>se,isNumber:()=>Ie,isPromise:()=>ze,isScalarShape:()=>ae,isString:()=>we,isTypedArray:()=>qr,isValidDtype:()=>Ae,locToIndex:()=>Oe,makeOnesTypedArray:()=>Me,makeZerosNestedTypedArray:()=>_e,makeZerosTypedArray:()=>Fe,nearestDivisor:()=>Ce,nearestLargerEven:()=>X,now:()=>Ur,parseAxisParam:()=>ce,randUniform:()=>Y,repeatedTry:()=>pe,rightPad:()=>de,shuffle:()=>H,shuffleCombo:()=>j,sizeFromShape:()=>ne,sizeToSquarishShape:()=>le,squeezeShape:()=>fe,sum:()=>Z,swap:()=>K,tanh:()=>oe,toNestedArray:()=>Ee,toTypedArray:()=>Vr});var Cr=v(w()),Tr=Cr.default||Cr;function Rr(e){return Tr.fromString(e,!0,16)}var Er=Rr("c3a5c85c97cb3127"),$r=Rr("b492b66fbe98f273"),Mr=Rr("9ae16a3b2f90404f");function Fr(e){return e.xor(e.shru(47))}function _r(e,t,n){let a=e.slice(t,t+n);return Tr.fromBytes(Array.from(a),!0,!0)}function Pr(e,t){return _r(e,t,8)}function Or(e,t){return _r(e,t,4)}function Dr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function zr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Rr("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Lr(e,t,n,a){return function(e,t,n,a,r,i){r=r.add(e),i=Dr(i.add(r).add(a),21);let s=r;return r=(r=r.add(t)).add(n),i=i.add(Dr(r,44)),[r.add(a),i.add(s)]}(Pr(e,t),Pr(e,t+8),Pr(e,t+16),Pr(e,t+24),n,a)}function Wr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=Tr.fromNumber(81,!0);if(t<=32)return t<=16?function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){let n=Mr.add(2*t),a=Pr(e,0).add(Mr),r=Pr(e,t-8);return zr(Dr(r,37).mul(n).add(a),Dr(a,25).add(r).mul(n),n)}if(t>=4){let n=Mr.add(2*t);return zr(Or(e,0).shl(3).add(t),Or(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Fr(Mr.mul(n).xor(Er.mul(a))).mul(Mr)}return Mr}(e,t):function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=Mr.add(2*t),a=Pr(e,0).mul($r),r=Pr(e,8),i=Pr(e,t-8).mul(n),s=Pr(e,t-16).mul(Mr);return zr(Dr(a.add(r),43).add(Dr(i,30)).add(s),a.add(Dr(r.add(Mr),18)).add(i),n)}(e,t);if(t<=64)return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length,n=Mr.add(2*t),a=Pr(e,0).mul(Mr),r=Pr(e,8),i=Pr(e,t-8).mul(n),s=Pr(e,t-16).mul(Mr),o=Dr(a.add(r),43).add(Dr(i,30)).add(s),l=zr(o,a.add(Dr(r.add(Mr),18)).add(i),n),u=Pr(e,16).mul(n),d=Pr(e,24),p=o.add(Pr(e,t-32)).mul(n),h=l.add(Pr(e,t-24)).mul(n);return zr(Dr(u.add(d),43).add(Dr(p,30)).add(h),u.add(Dr(d.add(a),18)).add(p),n)}(e,t);let a=n,r=n.mul($r).add(113),i=Fr(r.mul(Mr).add(113)).mul(Mr),s=[Tr.UZERO,Tr.UZERO],o=[Tr.UZERO,Tr.UZERO];a=a.mul(Mr).add(Pr(e,0));let l=0,u=64*(t-1>>6),d=u+(t-1&63)-63;do{a=Dr(a.add(r).add(s[0]).add(Pr(e,l+8)),37).mul($r),r=Dr(r.add(s[1]).add(Pr(e,l+48)),42).mul($r),a=a.xor(o[1]),r=r.add(s[0]).add(Pr(e,l+40)),i=Dr(i.add(o[0]),33).mul($r),s=Lr(e,l,s[1].mul($r),a.add(o[0])),o=Lr(e,l+32,i.add(o[1]),r.add(Pr(e,l+16))),[i,a]=[a,i],l+=64}while(l!==u);let p=$r.add(i.and(255).shl(1));return l=d,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),a=Dr(a.add(r).add(s[0]).add(Pr(e,l+8)),37).mul(p),r=Dr(r.add(s[1]).add(Pr(e,l+48)),42).mul(p),a=a.xor(o[1].mul(9)),r=r.add(s[0].mul(9).add(Pr(e,l+40))),i=Dr(i.add(o[0]),33).mul(p),s=Lr(e,l,s[1].mul(p),a.add(o[0])),o=Lr(e,l+32,i.add(o[1]),r.add(Pr(e,l+16))),[i,a]=[a,i],zr(zr(s[0],o[0],p).add(Fr(r).mul(Er)).add(i),zr(s[1],o[1],p).add(a),p)}function Br(e,t){return"string"===t?Hr(e):Vr([e],t)}function Vr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Xr(e)),Ve().getBool("DEBUG")&&ye(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ur(){return Ve().platform.now()}function Gr(e,t){return Ve().platform.fetch(e,t)}function Hr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ve().platform.encode(e,t)}function jr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",Ve().platform.decode(e,t)}function qr(e){return null!=Ve().platform.isTypedArray?Ve().platform.isTypedArray(e):Nr(e)}function Xr(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||ze(e)||null==e||qr(e)&&n)t.push(e);else if(Array.isArray(e)||qr(e))for(let a=0;a<e.length;++a)Xr(e[a],t,n);else{let a=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)Xr(e[r],t,n)}return t}var Kr=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Yr)}profileKernel(e,t,n){let a,r,i=()=>{a=n()},s=Ur();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(i);else{i();for(let e of a)e.dataSync();r=Promise.resolve({kernelMs:Ur()-s})}if(Ve().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<a.length;o++){let t=a[o];t.data().then(n=>{Zr(n,t.dtype,e)})}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then(e=>e.kernelMs),extraInfo:r.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:i}=e;n.forEach(e=>{Promise.all([e.data(),a,i]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])})})}};function Zr(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){let t=e[a];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}var Yr=class{logKernelProfile(e,t,n,a,r,i){let s="number"==typeof a?de(`${a}ms`,9):a.error,o=de(e,25),l=t.rank,u=t.size,d=de(t.shape.toString(),14),p="";for(let h in r){let e=r[h];if(null!=e){let n=e.shape||t.shape,a=n.length;p+=`${h}: ${a}D ${a>0?n:""} `}}console.log(`%c${o}\t%c${s}\t%c${l}D ${d}\t%c${u}\t%c${p}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Jr(e,t,n,a){let r=Te(t),i=function(e,t,n,a){let r=ne(t),i=a[a.length-1],s=new Array(i).fill(0),o=t.length,l="complex64"===n?ni(e):e;if(o>1)for(let u=0;u<r/i;u++){let e=u*i;for(let t=0;t<i;t++)s[t]=Math.max(s[t],Qr(l[e+t],0,n).length)}return s}(e,t,n,r),s=t.length,o=ti(e,t,n,r,i),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${s}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map(e=>"    "+e).join("\n")),l.join("\n")}function Qr(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:we(e)?`'${e}'`:"bool"===n?ei(e):parseFloat(e.toFixed(7)).toString(),de(a,t)}function ei(e){return 0===e?"false":"true"}function ti(e,t,n,a,r){let i=!(arguments.length>5&&void 0!==arguments[5])||arguments[5],s="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Qr(ni(e)[0],0,n)]}return"bool"===n?[ei(e[0])]:[e[0].toString()]}if(1===l){if(o>20){let t=3*s,a=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-3)*s,o*s));return"complex64"===n&&(a=ni(a),i=ni(i)),["["+a.map((e,t)=>Qr(e,r[t],n)).join(", ")+", ..., "+i.map((e,t)=>Qr(e,r[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?ni(e):Array.from(e)).map((e,t)=>Qr(e,r[t],n)).join(", ")+"]"]}let u=t.slice(1),d=a.slice(1),p=a[0]*s,h=[];if(o>20){for(let t=0;t<3;t++){let a=t*p,i=a+p;h.push(...ti(e.slice(a,i),u,n,d,r,!1))}h.push("...");for(let t=o-3;t<o;t++){let a=t*p,i=a+p;h.push(...ti(e.slice(a,i),u,n,d,r,t===o-1))}}else for(let m=0;m<o;m++){let t=m*p,a=t+p;h.push(...ti(e.slice(t,a),u,n,d,r,m===o-1))}let c=2===l?",":"";h[0]="["+(o>0?h[0]+c:"");for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+c;let f=",\n";for(let m=2;m<l;m++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(i?"":f),h}function ni(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ai=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),null!=n){let e=n.length;Q(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ge(t,this.size),this.strides=Te(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),Q(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);let r=this.locToIndex(n);this.values[r]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(let i of t){if(i<0||i>=this.shape[a]){let e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}a++}let r=t[t.length-1];for(let i=0;i<t.length-1;++i)r+=this.strides[i]*t[i];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ri().makeTensor(this.values,this.shape,this.dtype)}},ri=null,ii=null;var si=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Te(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return ii.buffer(this.shape,this.dtype,e)}bufferSync(){return ii.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Ee(this.shape,e,"complex64"===this.dtype)}arraySync(){return Ee(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=ri().read(this.dataId);if("string"===this.dtype){let n=await e;try{return n.map(e=>jr(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ri().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ri().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>jr(e))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ri().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),ri().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return ii.print(this,e)}clone(){return this.throwIfDisposed(),ii.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return Jr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ii.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),ri().makeVariable(this,e,t,n)}};function oi(){return je("Tensor",()=>si)}Object.defineProperty(si,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),oi();var li=class extends si{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ie(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ri().disposeTensor(this),this.dataId=e.dataId,ri().incRef(this,null)}dispose(){ri().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(li,Symbol.hasInstance,{value:e=>e instanceof si&&null!=e.assign&&e.assign instanceof Function});var ui,di,pi,hi,ci,fi,mi={};b(mi,{assertTypesMatch:()=>wi,getTensorsInContainer:()=>Ii,isTensorInList:()=>ki,makeTypesMatch:()=>vi}),(di=ui||(ui={})).R0="R0",di.R1="R1",di.R2="R2",di.R3="R3",di.R4="R4",di.R5="R5",di.R6="R6",function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(pi||(pi={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(hi||(hi={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ci||(ci={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(fi||(fi={}));var gi={float32:ci,int32:pi,bool:hi,complex64:fi};function yi(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return gi[e][t]}function Ai(e){return yi(e,"int32")}function xi(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function bi(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function vi(e,t){if(e.dtype===t.dtype)return[e,t];let n=yi(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function wi(e,t){Q(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function ki(e,t){return t.some(t=>t.id===e.id)}function Ii(e){let t=[];return Si(e,t,new Set),t}function Si(e,t,n){if(null==e)return;if(e instanceof si)return void t.push(e);if(!function(e){return Array.isArray(e)||"object"==typeof e}(e))return;let a=e;for(let r in a){let e=a[r];n.has(e)||(n.add(e),Si(e,t,n))}}function Ni(e){return null!=e.kernelName}var Ci=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Ti=class e{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ci}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(hr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Kr(this.backendInstance),!0}setupRegisteredKernels(){Ar(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ar(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof U||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,a=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,hr(`Initialization of backend ${e} failed`),hr(n.stack||n.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return hr(`Initialization of backend ${e} failed`),hr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),i=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun(()=>this.startScope(a),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return e.nextTensorId++}nextVariableId(){return e.nextVariableId++}clone(e){let t=Ei.runKernel(dn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{let t={x:e},n={dtype:"float32"};return Ei.runKernel(yt,t,n)}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==gr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach(e=>{r+="complex64"===e.dtype?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=a-t-r-i;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,a=[],r=this.isTapeOn(),i=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=Ni(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Ni(e)){let{kernelName:t,inputs:i,attrs:s}=e;null==this.backendName&&this.backend;let l=gr(t,this.backendName);Q(null!=l,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:i,attrs:s,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(r){let e=this.getTensorsForGradient(t,i,u);a=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,i=e=>{r&&(a=e.map(e=>this.keep(this.clone(e))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,i));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:d,attrs:p}=e,h=Ni(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,d,()=>n()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()}),r&&this.addTapeNode(l,d,t,h,a,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){let a=yr(e);if(null!=a){let e,r=a.inputsToSave||[],i=a.outputsToSave||[];a.saveAllInputs?(Q(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=r.map(e=>t[e]);let s=n.filter((e,t)=>i[t]);return e.concat(s)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&we(e[0])&&(r=e.map(e=>Hr(e)));let i=a.write(r,t,n),s=new si(t,n,i,this.nextTensorId());if(this.trackTensor(s,a),"string"===n){let e=this.state.tensorInfo.get(i),t=ve(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,n,a){let r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:a,dtype:r}=e,i=new si(a,r,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));let r=new li(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*be(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof li||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*be(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,i){let s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=yr(e);null!=o&&(a=o.gradFunc),null!=a&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=n[t],a=Fe(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e}),a(e.length>1?e:e[0],r,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=Ii(e),n=new Set(t.map(e=>e.id));for(let r=0;r<this.state.activeScope.track.length;r++){let e=this.state.activeScope.track[r];!e.kept&&!n.has(e.id)&&e.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{!e.kept&&e.scopeId===a.id&&this.track(e)})}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(Q(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));Q(r instanceof si,()=>"The result y returned by f() must be a tensor.");let i=function(e,t,n){let a={},r={};for(let l=0;l<t.length;l++)a[t[l].id]=!0;for(let l=0;l<e.length;l++){let n=e[l],i=n.inputs;for(let e in i){let s=i[e],o=!1;for(let e=0;e<t.length;e++)if(a[s.id]){n.outputs.forEach(e=>a[e.id]=!0),o=!0,r[n.id]=!0;break}if(o)break}}let i={};i[n.id]=!0;let s={};for(let l=e.length-1;l>=0;l--){let t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(i[t.outputs[e].id]){for(let e in n)i[n[e].id]=!0,s[t.id]=!0;break}}let o=[];for(let l=0;l<e.length;l++){let t=e[l];if(r[t.id]&&s[t.id]){let e={};for(let r in t.inputs){let n=t.inputs[r];a[n.id]&&(e[r]=n)}let n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,r);if(!a&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[r.id]=null==n?function(e){let t=Me(ne(e),"float32");return Ei.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){let i=t[r],s=[];if(i.outputs.forEach(t=>{let n=e[t.id];null!=n?s.push(n):s.push(null)}),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let o=i.gradient(s);for(let t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let r=n(()=>o[t]());if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);let s=i.inputs[t];if(!ie(r.shape,s.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=r;else{let t=e[s.id];e[s.id]=a(t,r),t.dispose()}}}}(e,i,e=>this.tidy(e),$i);let a=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:r,grads:a}})}customGrad(e){var t=this;return Q(Ne(e),()=>"The f passed in customGrad(f) must be a function."),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];Q(a.every(e=>e instanceof si),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let i,s={};a.forEach((e,t)=>{s[t]=e});return t.runKernelFunc({forwardFunc:(t,n)=>(i=e(...a,n),Q(i.value instanceof si,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),Q(Ne(i.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),i.value),backwardsFunc:(e,t)=>{let n=i.gradFunc(e,t),r=Array.isArray(n)?n:[n];Q(r.length===a.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),Q(r.every(e=>e instanceof si),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let s={};return r.forEach((e,t)=>{s[t]=()=>e}),s},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Ur(),n=await this.backend.time(e);return n.wallMs=Ur()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ci;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function Ri(){let e=He();if(null==e._tfengine){let t=new We(e);e._tfengine=new Ti(t)}return function(e){Ge=e}(e._tfengine.ENV),function(e){ri=e}(()=>e._tfengine),e._tfengine}Ti.nextTensorId=0,Ti.nextVariableId=0;var Ei=Ri();function $i(e,t){let n={a:e,b:t};return Ei.runKernel("Add",n)}var Mi,Fi={};function _i(e){Mi=e}function Pi(e){if(void 0!==Mi)return Mi;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Oi(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}b(Fi,{isBrowser:()=>Oi,isMobile:()=>Pi,mockIsMobile:()=>_i});var Di=Ve();function zi(e,t){let n=e;if(qr(e))return"string"===t?[]:[e.length];if(xi(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(bi(e))return[e.buffer.size/(null==t?4:be(t))];if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||qr(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Ve().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Li(e,a,[]),a}function Li(e,t,n){if(n=n||[],!Array.isArray(e)&&!qr(e))return void Q(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);Q(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),Q(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let a=t.slice(1);for(let r=0;r<e.length;++r)Li(e[r],a,n.concat(r))}function Wi(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function Bi(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof oi())return Wi(a,e.dtype,t,n),e;let r=Se(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Wi(a,r,t,n),null==e||!qr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}let i=zi(e,r);!qr(e)&&!Array.isArray(e)&&(e=[e]);let s="string"!==r?Vr(e,r):Xr(e,[],!0);return Ei.makeTensor(s,i,r)}function Vi(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,r)=>Bi(e,`${t}[${r}]`,n,a))}Di.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Di.registerFlag("IS_BROWSER",()=>Oi()),Di.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&"undefined"!=typeof process.versions&&"undefined"!=typeof process.versions.node),Di.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Di.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),Di.registerFlag("PROD",()=>!1),Di.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Di.getBool("DEBUG")),Di.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Di.registerFlag("IS_TEST",()=>!1),Di.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Di.getBool("DEBUG")),Di.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Di.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Di.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);var Ui="__op";function Gi(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ui;let r=function(){Ei.startScope(n);try{let e=a(...arguments);return ze(e)&&console.error("Cannot return a Promise inside of tidy."),Ei.endScope(e),e}catch(e){throw Ei.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}var Hi=Gi({complex_:function(e,t){let n=Bi(e,"real","complex"),a=Bi(t,"imag","complex");ee(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return Ei.runKernel(bt,r)}});function ji(e,t,n,a){if(null==a)a=Se(e);else if("complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(bi(e)||xi(e)){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return Ei.backend.createTensorFromGPUData(e,t||n,a)}if(!qr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Pe(t);let e=ne(t),a=ne(n);Q(e===a,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`);for(let r=0;r<n.length;++r){let e=n[r],a=r!==n.length-1||e!==ne(t.slice(r));Q(n[r]===t[r]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!qr(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==a?Vr(e,a):Xr(e,[],!0),Ei.makeTensor(e,t,a)}function qi(e,t,n){return ji(e,t,zi(e,n),n)}var Xi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Ki=class e{static join(t){return new e(t).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>qr(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);let a=new ArrayBuffer(t-e),r=new Uint8Array(a),i=0;for(let s=n;s<this.shards.length;s++){let n=this.shards[s],a=e+i-n.start,o=i,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,a,l-a);if(r.set(u,o),i+=u.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let n=function(e,t){let n=0,a=e.length;for(;n<=a;){let r=Math.floor((a-n)/2)+n,i=t(e[r]);if(0===i)return r;i<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function Zi(){Ve().set("PROD",!0)}function Yi(){Ve().set("DEBUG",!0)}function Ji(){Ve().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Qi(e){Ve().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function es(){Ei.disposeVariables()}function ts(){return Ei}function ns(){return Ei.memory()}function as(e){return Ei.profile(e)}function rs(e,t){return Ei.tidy(e,t)}function is(e){Ii(e).forEach(e=>e.dispose())}function ss(e){return Ei.keep(e)}function os(e){return Ei.time(e)}function ls(e){return Ei.setBackend(e)}function us(){return Ei.ready()}function ds(){return Ei.backendName}function ps(e){Ei.removeBackend(e)}function hs(e){return Ei.findBackend(e)}function cs(e){return Ei.findBackendFactory(e)}function fs(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return Ei.registerBackend(e,t,n)}function ms(){return Ei.backend}function gs(e,t){Ve().setPlatform(e,t)}!function(e){0}(Qi);async function ys(e,t){let n=[],a=[],r=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<r.length;++i){let s=r[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let l={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+4*t.length,a=new Uint8Array(n),r=0;for(let i=0;i<t.length;i++){let e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=4,a.set(e,r),r+=e.length}e(a)});a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Is(await Promise.all(a)),specs:n}}function As(e,t){let n=new Ki(e),a={},r=0;for(let i of t){let e=xs(i,(e,t)=>n.slice(r+e,r+t));a[i.name]=vs(i,n.slice(r,r+e)),r+=e}return a}function xs(e,t){let n,a=ne(e.shape);if("quantization"in e){let t=e.quantization;n=Xi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<a;n++)e+=4+new Uint32Array(t(e,e+4))[0];return e}n=Xi[e.dtype]}return a*n}async function bs(e,t){let n,a=ne(e.shape);if("quantization"in e){let t=e.quantization;n=Xi[t.dtype]}else{if("string"===e.dtype){let e=0;for(let n=0;n<a;n++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}n=Xi[e.dtype]}return a*n}function vs(e,t){let n,a=e.name,r=e.dtype,i=e.shape,s=ne(i),o=0;if("quantization"in e){let i=e.quantization;if("uint8"===i.dtype||"uint16"===i.dtype){if(!("min"in i)||!("scale"in i))throw new Error(`Weight ${e.name} with quantization ${i.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==i.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${i.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${i.dtype} which only supports weights of type float32 not ${r}.`)}let l=Xi[i.dtype],u="uint8"===i.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===i.dtype||"uint16"===i.dtype){n=new Float32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=t*i.scale+i.min}}else{if("float16"!==i.dtype)throw new Error(`Unsupported quantization type ${i.dtype} for weight type float32.`);n=function(){let e=function(){let e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{let r=new ArrayBuffer(4*a.length),i=new Uint32Array(r);for(let s=0;s<a.length;s++){let r=a[s],o=e[n[r>>10]+(1023&r)]+t[r>>10];i[s]=o}return new Float32Array(r)}}()(u)}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${a}': ${r}`);if("uint8"!==i.dtype&&"uint16"!==i.dtype)throw new Error(`Unsupported quantization type ${i.dtype} for weight type int32.`);n=new Int32Array(u.length);for(let e=0;e<u.length;e++){let t=u[e];n[e]=Math.round(t*i.scale+i.min)}}o+=s*l}else if("string"===r){let a=ne(e.shape);n=[];for(let e=0;e<a;e++){let e=new Uint32Array(t.slice(o,o+4))[0];o+=4;let a=new Uint8Array(t.slice(o,o+e));n.push(a),o+=e}}else{let e=Xi[r];if("float32"===r)n=new Float32Array(t);else if("int32"===r)n=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){n=new Float32Array(t);let e=new Float32Array(n.length/2),a=new Float32Array(n.length/2);for(let t=0;t<e.length;t++)e[t]=n[2*t],a[t]=n[2*t+1];let r=qi(e,i,"float32"),s=qi(a,i,"float32"),o=Hi(r,s);return r.dispose(),s.dispose(),o}throw new Error(`Unsupported dtype in weight '${a}': ${r}`)}n=new Uint8Array(t)}o+=s*e}return qi(n,i,r)}async function ws(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){let{done:t,value:r}=await e.read();if(t&&null==r){let e=n-a.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}let i=new Uint8Array(a.length+r.byteLength);i.set(a,0),i.set(new Uint8Array(r),a.length),a=i}return a.buffer}async function ks(e,t){let n={},a=e.getReader(),r=new ArrayBuffer(0);for(let i of t){let e=await bs(i,async(e,t)=>(r=await ws(a,r,t),r.slice(e,t)));r=await ws(a,r,e);let t=r.slice(0,e);r=r.slice(e);let s=vs(i,t);if(n[i.name]=s,"webgpu"===ds()){let e=ms();"uploadToGPU"in e&&ne(s.shape)>=Ve().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(s.dataId)}}return n}function Is(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let a=new Uint8Array(t),r=0;return n.forEach(e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength}),a.buffer}var Ss="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ns(e){return Ss?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Cs(e){return Ki.join(e)}function Ts(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function Rs(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Es(e,t,n){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function $s(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),Es(e,n,a)}function Ms(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ns(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ns(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ki(e.weightData).byteLength}}function Fs(e){let t=[];for(let n of e)t.push(...n.weights);return t}var _s=class e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerSaveRouter(t){e.getInstance().saveRouters.push(t)}static registerLoadRouter(t){e.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return e.getHandlers(t,"save")}static getLoadHandlers(t,n){return e.getHandlers(t,"load",n)}static getHandlers(t,n,a){let r=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach(e=>{let n=e(t,a);null!==n&&r.push(n)}),r}},Ps=e=>_s.registerSaveRouter(e),Os=e=>_s.registerLoadRouter(e),Ds=e=>_s.getSaveHandlers(e),zs=(e,t)=>_s.getLoadHandlers(e,t),Ls="tensorflowjs",Ws="models_store",Bs="model_info_store";function Vs(){if(!Ve().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Us(e){let t=e.result;t.createObjectStore(Ws,{keyPath:"modelPath"}),t.createObjectStore(Bs,{keyPath:"modelPath"})}var Gs=class{constructor(e){if(this.indexedDB=Vs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{let a=this.indexedDB.open(Ls,1);a.onupgradeneeded=()=>Us(a),a.onsuccess=()=>{let r=a.result;if(null==t){let t=r.transaction(Ws,"readonly"),a=t.objectStore(Ws).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=Ki.join(t.weightData);let a,s,o=Ms(t),l=r.transaction(Bs,"readwrite"),u=l.objectStore(Bs);try{a=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(i){return n(i)}a.onsuccess=()=>{s=r.transaction(Ws,"readwrite");let a,i=s.objectStore(Ws);try{a=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(d){return n(d)}a.onsuccess=()=>e({modelArtifactsInfo:o}),a.onerror=e=>{u=l.objectStore(Bs);let t=u.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(a.error)),t.onerror=e=>(r.close(),n(a.error))}},a.onerror=e=>(r.close(),n(a.error)),l.oncomplete=()=>{null==s?r.close():s.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)})}};Gs.URL_SCHEME="indexeddb://";var Hs=e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Gs.URL_SCHEME)?function(e){return new Gs(e)}(e.slice(Gs.URL_SCHEME.length)):null;_s.registerSaveRouter(Hs),_s.registerLoadRouter(Hs);var js="/",qs="tensorflowjs_models",Xs="info",Ks="model_topology",Zs="weight_specs",Ys="weight_data",Js="model_metadata";function Qs(e){return{info:[qs,e,Xs].join(js),topology:[qs,e,Ks].join(js),weightSpecs:[qs,e,Zs].join(js),weightData:[qs,e,Ys].join(js),modelMetadata:[qs,e,Js].join(js)}}function eo(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function to(e){let t=e.split(js);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(js)}var no=class{constructor(e){if(!Ve().getBool("IS_BROWSER")||"undefined"==typeof window||"undefined"==typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Qs(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Ms(e),i=Ki.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Ss)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(i));let t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw eo(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){let e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ss){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(i),t}};no.URL_SCHEME="localstorage://";var ao=e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(no.URL_SCHEME)?function(e){return new no(e)}(e.slice(no.URL_SCHEME.length)):null;_s.registerSaveRouter(ao),_s.registerLoadRouter(ao);var ro="://",io=class e{constructor(){this.managers={}}static getInstance(){return null==e.instance&&(e.instance=new e),e.instance}static registerManager(t,n){Q(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(ro)&&(t=t.slice(0,t.indexOf(ro))),Q(t.length>0,()=>"scheme must not be an empty string.");let a=e.getInstance();Q(null==a.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),a.managers[t]=n}static getManager(t){let n=e.getInstance().managers[t];if(null==n)throw new Error(`Cannot find model manager for scheme '${t}'`);return n}static getSchemes(){return Object.keys(e.getInstance().managers)}};function so(e){if(-1===e.indexOf(ro))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${io.getSchemes().join(",")}`);return{scheme:e.split(ro)[0],path:e.split(ro)[1]}}async function oo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Q(e!==t,()=>`Old path and new path are the same: '${e}'`);let a=_s.getLoadHandlers(e);Q(a.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),Q(a.length<2,()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`);let r=a[0],i=_s.getSaveHandlers(t);Q(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),Q(i.length<2,()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`);let s=i[0],o=so(e).scheme,l=so(e).path,u=o===so(e).scheme,d=await r.load();n&&u&&await io.getManager(o).removeModel(l);let p=await s.save(d);return n&&!u&&await io.getManager(o).removeModel(l),p.modelArtifactsInfo}async function lo(){let e=io.getSchemes(),t={};for(let n of e){let e=await io.getManager(n).listModels();for(let a in e){t[n+ro+a]=e[a]}}return t}async function uo(e){let t=so(e);return io.getManager(t.scheme).removeModel(t.path)}async function po(e,t){return oo(e,t,!1)}async function ho(e,t){return oo(e,t,!0)}if(Ve().get("IS_BROWSER")){Ve().setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&Ve().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(e,t)}isTypedArray(e){return Nr(e)}});try{io.registerManager(no.URL_SCHEME,new class{constructor(){Q(Ve().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Q("undefined"==typeof window||"undefined"!=typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=qs+js,n=js+Xs;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[to(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){e=function(e){return e.startsWith(no.URL_SCHEME)?e.slice(no.URL_SCHEME.length):e}(e);let t=Qs(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return eo(t),n}})}catch(di){}try{io.registerManager(Gs.URL_SCHEME,new class{constructor(){this.indexedDB=Vs()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Ls,1);n.onupgradeneeded=()=>Us(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(Bs,"readonly"),i=r.objectStore(Bs).getAll();i.onsuccess=()=>{let t={};for(let e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(a.close(),t(i.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)})}async removeModel(e){return e=function(e){return e.startsWith(Gs.URL_SCHEME)?e.slice(Gs.URL_SCHEME.length):e}(e),new Promise((t,n)=>{let a=this.indexedDB.open(Ls,1);a.onupgradeneeded=()=>Us(a),a.onsuccess=()=>{let r,i=a.result,s=i.transaction(Bs,"readwrite"),o=s.objectStore(Bs),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return i.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=o.delete(e),s=()=>{r=i.transaction(Ws,"readwrite");let a=r.objectStore(Ws).delete(e);a.onsuccess=()=>t(l.result.modelArtifactsInfo),a.onerror=e=>n(l.error)};a.onsuccess=s,a.onerror=e=>(s(),i.close(),n(l.error))}},l.onerror=e=>(i.close(),n(l.error)),s.oncomplete=()=>{null==r?i.close():r.oncomplete=()=>i.close()}},a.onerror=e=>n(a.error)})}})}catch(di){}}var co,fo=()=>k();function mo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",Pe(e),new ai(e,t,n)}Ve().get("IS_NODE")&&!Ve().get("IS_BROWSER")&&Ve().setPlatform("node",new class{constructor(){this.util=I(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ve().global.fetch?Ve().global.fetch(e,t):(null==co&&(co=fo()),co(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});var go=Gi({cast_:function(e,t){let n=Bi(e,"x","cast");if(!Ae(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return Ei.runKernel(yt,a,r)}});var yo=Gi({clone_:function(e){let t={x:Bi(e,"x","clone","string_or_numeric")};return Ei.runKernel(dn,t)}});function Ao(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}Ri(),function(e){ii=e}({buffer:mo,cast:go,clone:yo,print:Ao});var xo=Gi({add_:function(e,t){let n=Bi(e,"a","add"),a=Bi(t,"b","add");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel("Add",r)}});var bo=Gi({floorDiv_:function(e,t){let n=Bi(e,"a","floorDiv"),a=Bi(t,"b","floorDiv");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel(an,r)}});var vo=Gi({div_:function(e,t){let n=Bi(e,"a","div"),a=Bi(t,"b","div");if([n,a]=vi(n,a),"int32"===n.dtype&&"int32"===a.dtype)return bo(n,a);let r={a:n,b:a};return Ei.runKernel(Gt,r,{})}});var wo=Gi({mul_:function(e,t){let n=Bi(e,"a","mul"),a=Bi(t,"b","mul");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel(Gn,r)}});var ko=Gi({abs_:function(e){let t=Bi(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return Ei.runKernel(vt,e)}{let e={x:t};return Ei.runKernel("Abs",e)}}});var Io=Gi({acos_:function(e){let t={x:Bi(e,"x","acos")};return Ei.runKernel(Xe,t)}});var So=Gi({acosh_:function(e){let t={x:Bi(e,"x","acosh")};return Ei.runKernel(Ke,t)}});var No=Gi({addN_:function(e){Q(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),Q(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>Bi(e,`tensors${t}`,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!ie(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let a=t;return Ei.runKernel(Ye,a)}});var Co=Gi({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a={x:Bi(e,"x","all","bool")},r={axis:t,keepDims:n};return Ei.runKernel("All",a,r)}});var To=Gi({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a={x:Bi(e,"x","any","bool")},r={axis:t,keepDims:n};return Ei.runKernel("Any",a,r)}});var Ro=Gi({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Bi(e,"x","argMax")},a={axis:t};return Ei.runKernel(et,n,a)}});var Eo=Gi({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Bi(e,"x","argMin")},a={axis:t};return Ei.runKernel(tt,n,a)}});var $o=Gi({asin_:function(e){let t={x:Bi(e,"x","asin")};return Ei.runKernel(nt,t)}});var Mo=Gi({asinh_:function(e){let t={x:Bi(e,"x","asinh")};return Ei.runKernel(at,t)}});var Fo=Gi({atan_:function(e){let t={x:Bi(e,"x","atan")};return Ei.runKernel(rt,t)}});var _o=Gi({atan2_:function(e,t){let n=Bi(e,"a","atan2"),a=Bi(t,"b","atan2");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel(st,r)}});var Po=Gi({atanh_:function(e){let t={x:Bi(e,"x","atanh")};return Ei.runKernel(it,t)}});function Oo(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5?arguments[5]:void 0;return Lo(e,[...t,e[3]],n,i,a,null,null,Ko(r))}function Do(e,t,n,a,r,i){let s,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",[l,u]=Vo(t);if("channelsLast"===o)s=[l,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);s=[l,u,e[1],e[1]]}return Lo(e,s,n,a,r,i,!1,o)}function zo(e,t,n,a,r,i){let s,o,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC",[u,d,p]=Uo(t);if("NDHWC"===l)o="channelsLast",s=[u,d,p,e[4],e[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);o="channelsFirst",s=[u,d,p,e[1],e[1]]}return Wo(e,s,n,a,r,!1,o,i)}function Lo(e,t,n,a,r,i){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[l,u,d,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,d,p]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,p,u,d]=e}let h,[c,f,,m]=t,[g,y]=Vo(n),[A,x]=Vo(a),b=Go(c,A),v=Go(f,x),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,a,r,i,s,o,l){let u,d,p;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let r=function(e,t,n,a,r){null==a&&(a=Bo(e,t,n));let i=e[0],s=e[1],o=Ho((i-t+2*a)/n+1,r),l=Ho((s-t+2*a)/n+1,r);return[o,l]}([t,n],i,a,e,o);d=r[0],p=r[1]}else if("same"===e){d=Math.ceil(t/a),p=Math.ceil(n/r);let e=Math.max(0,(d-1)*a+i-t),o=Math.max(0,(p-1)*r+s-n),l=Math.floor(e/2),h=e-l,c=Math.floor(o/2);u={top:l,bottom:h,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-i+1)/a),p=Math.ceil((n-s+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let h="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:h,bottom:c,left:f,right:m,type:0===h&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=Ho((t-i+h+c)/a+1,o),p=Ho((n-s+f+m)/r+1,o)}}return{padInfo:u,outHeight:d,outWidth:p}}(r,u,d,g,y,b,v,i,o),S=s?m*p:m;return"channelsFirst"===o?h=[l,S,k,I]:"channelsLast"===o&&(h=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:p,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:b,effectiveFilterWidth:v,dilationHeight:A,dilationWidth:x,inShape:e,outShape:h,filterShape:t}}function Wo(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",o=arguments.length>7?arguments[7]:void 0,[l,u,d,p,h]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[l,u,d,p,h]=e;else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);[l,h,u,d,p]=e}let c,[f,m,g,,y]=t,[A,x,b]=Uo(n),[v,w,k]=Uo(a),I=Go(f,v),S=Go(m,w),N=Go(g,k),{padInfo:C,outDepth:T,outHeight:R,outWidth:E}=function(e,t,n,a,r,i,s,o,l,u,d){let p,h,c,f;if("valid"===e&&(e=0),"number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let m=function(e,t,n,a,r,i){null==r&&(r=Bo(e,t[0],a[0]));let s=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(s[o]=Ho((e[o]-t[o]+2*r)/a[o]+1,i));return s}([t,n,a,1],[o,l,u],1,[r,i,s],e,d);h=m[0],c=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{h=Math.ceil(t/r),c=Math.ceil(n/i),f=Math.ceil(a/s);let e=(h-1)*r+o-t,d=(c-1)*i+l-n,m=(f-1)*s+u-a,g=Math.floor(e/2),y=e-g,A=Math.floor(d/2),x=d-A,b=Math.floor(m/2);p={top:A,bottom:x,left:b,right:m-b,front:g,back:y,type:"SAME"}}}return{padInfo:p,outDepth:h,outHeight:c,outWidth:f}}(r,u,d,p,A,x,b,I,S,N,o),$=i?y*h:y;return"channelsFirst"===s?c=[l,$,T,R,E]:"channelsLast"===s&&(c=[l,T,R,E,$]),{batchSize:l,dataFormat:s,inDepth:u,inHeight:d,inWidth:p,inChannels:h,outDepth:T,outHeight:R,outWidth:E,outChannels:$,padInfo:C,strideDepth:A,strideHeight:x,strideWidth:b,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:c,filterShape:t}}function Bo(e,t,n){let a=Go(t,arguments.length>3&&void 0!==arguments[3]?arguments[3]:1);return Math.floor((e[0]*(n-1)-n+a)/2)}function Vo(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Uo(e){return"number"==typeof e?[e,e,e]:e}function Go(e,t){return t<=1?e:e+(e-1)*(t-1)}function Ho(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function jo(e){let[t,n,a]=Vo(e);return 1===t&&1===n&&1===a}function qo(e,t){return jo(e)||jo(t)}function Xo(e){return Vo(e).every(e=>e>0)}function Ko(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Zo(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Q(se(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach(t=>{t.forEach(t=>{Q(se(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})})}}}var Yo=Gi({reshape_:function(e,t){let n={x:Bi(e,"x","reshape","string_or_numeric")},a={shape:t};return Ei.runKernel(pa,n,a)}});var Jo=Gi({avgPool_:function(e,t,n,a,r){let i=Bi(e,"x","avgPool","float32");Q(qo(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let s=i,o=!1;3===i.rank&&(o=!0,s=Yo(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Q(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),Zo("avgPool",a,r);let l={x:s},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},d=Ei.runKernel(ot,l,u);return d=go(d,i.dtype),o?Yo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Qo=Gi({avgPool3d_:function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",s=Bi(e,"x","avgPool3d","float32"),o=s,l=!1;4===s.rank&&(l=!0,o=Yo(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Q(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Q("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),Zo("avgPool3d",a,r);let u={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:i},p=Ei.runKernel(ut,u,d);return p=go(p,o.dtype),l?Yo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var el=Gi({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Q(e.length>=1,()=>"Pass at least one tensor to concat");let n=Vi(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return yo(n[0]);let a=n,r={axis:t};return Ei.runKernel(wt,a,r)}});var tl=Gi({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Bi(e,"a","matMul"),i=Bi(t,"b","matMul");[r,i]=vi(r,i);let s={a:r,b:i},o={transposeA:n,transposeB:a};return Ei.runKernel(pt,s,o)}});var nl=Gi({sigmoid_:function(e){let t={x:Bi(e,"x","sigmoid","float32")};return Ei.runKernel(Ra,t)}});var al=Gi({slice_:function(e,t,n){let a=Bi(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");let r={x:a},i={begin:t,size:n};return Ei.runKernel(Sa,r,i)}});var rl=Gi({tanh_:function(e){let t={x:Bi(e,"x","tanh","float32")};return Ei.runKernel(Za,t)}});var il=Gi({basicLSTMCell_:function(e,t,n,a,r,i){let s=Bi(e,"forgetBias","basicLSTMCell"),o=Bi(t,"lstmKernel","basicLSTMCell"),l=Bi(n,"lstmBias","basicLSTMCell"),u=Bi(a,"data","basicLSTMCell"),d=Bi(r,"c","basicLSTMCell"),p=Bi(i,"h","basicLSTMCell"),h=el([u,p],1),c=tl(h,o),f=xo(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=al(f,[0,0],y),x=al(f,[0,g],y),b=al(f,[0,2*g],y),v=al(f,[0,3*g],y),w=xo(wo(nl(A),rl(x)),wo(d,nl(xo(s,b))));return[w,wo(rl(w),nl(v))]}});var sl=Gi({batchToSpaceND_:function(e,t,n){let a=Bi(e,"x","batchToSpaceND"),r=t.reduce((e,t)=>e*t);Q(a.rank>=1+t.length,()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`),Q(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),Q(a.shape[0]%r===0,()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let i={x:a},s={blockShape:t,crops:n};return Ei.runKernel(ht,i,s)}});function ol(e){let t;return t=0===e.rank||1===e.rank?Yo(e,[1,1,1,e.size]):2===e.rank?Yo(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Yo(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}var ll=Gi({batchNorm_:function(e,t,n,a,r,i){null==i&&(i=.001);let s,o,l=Bi(e,"x","batchNorm"),u=Bi(t,"mean","batchNorm"),d=Bi(n,"variance","batchNorm");null!=r&&(s=Bi(r,"scale","batchNorm")),null!=a&&(o=Bi(a,"offset","batchNorm")),Q(u.rank===d.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Q(null==o||u.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Q(null==s||u.rank===s.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let p={x:ol(l),scale:s,offset:o,mean:u,variance:d},h={varianceEpsilon:i},c=Ei.runKernel(rn,p,h);return Yo(c,l.shape)}});var ul=Gi({batchNorm2d_:function(e,t,n,a,r,i){let s,o,l=Bi(e,"x","batchNorm"),u=Bi(t,"mean","batchNorm"),d=Bi(n,"variance","batchNorm");return null!=r&&(s=Bi(r,"scale","batchNorm")),null!=a&&(o=Bi(a,"offset","batchNorm")),Q(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),Q(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`),Q(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`),null!=s&&Q(2===s.rank||1===s.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${s.rank}.`),null!=o&&Q(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),ll(l,u,d,o,s,i)}});var dl=Gi({batchNorm3d_:function(e,t,n,a,r,i){let s,o,l=Bi(e,"x","batchNorm"),u=Bi(t,"mean","batchNorm"),d=Bi(n,"variance","batchNorm");return null!=r&&(s=Bi(r,"scale","batchNorm")),null!=a&&(o=Bi(a,"offset","batchNorm")),Q(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),Q(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`),Q(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`),null!=s&&Q(3===s.rank||1===s.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${s.rank}.`),null!=o&&Q(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),ll(l,u,d,o,s,i)}});var pl=Gi({batchNorm4d_:function(e,t,n,a,r,i){let s,o,l=Bi(e,"x","batchNorm"),u=Bi(t,"mean","batchNorm"),d=Bi(n,"variance","batchNorm");return null!=r&&(s=Bi(r,"scale","batchNorm")),null!=a&&(o=Bi(a,"offset","batchNorm")),Q(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),Q(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`),Q(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`),null!=s&&Q(4===s.rank||1===s.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${s.rank}.`),null!=o&&Q(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),ll(l,u,d,o,s,i)}});var hl=Gi({bincount_:function(e,t,n){let a=Bi(e,"x","bincount"),r=Bi(t,"weights","bincount");Q("int32"===a.dtype,()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(r.size===a.size||0===r.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`);let i={x:a,weights:r},s={size:n};return Ei.runKernel(ct,i,s)}});var cl=Gi({bitwiseAnd_:function(e,t){let n=Bi(e,"x","bitwiseAnd"),a=Bi(t,"y","bitwiseAnd");if(!ie(n.shape,a.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${a.shape}`);if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${a.dtype}`);let r={a:n,b:a};return Ei.runKernel(ft,r)}});var fl=Gi({broadcastArgs_:function(e,t){let n=Bi(e,"s0","broadcastArgs","int32"),a=Bi(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);let r={s0:n,s1:a};return Ei.runKernel(gt,r)}});var ml=Gi({broadcastTo_:function(e,t){let n=Bi(e,"broadcastTo","x"),a=n.shape;if(Pe(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Yo(n,e)}let r=n.shape,i=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])i[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===i.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return yo(n);let s={x:n},o={reps:i};return Ei.runKernel(Ya,s,o)}});var gl=Gi({ceil_:function(e){let t={x:Bi(e,"x","ceil","float32")};return Ei.runKernel(At,t)}});function yl(e,t,n){Pe(e);let a={shape:e,value:t,dtype:n=n||Se(t)};return Ei.runKernel(en,{},a)}var Al=Gi({clipByValue_:function(e,t,n){let a=Bi(e,"x","clipByValue");if(Q(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return yl(a.shape,t,a.dtype);let r={x:a},i={clipValueMin:t,clipValueMax:n};return Ei.runKernel(xt,r,i)}});var xl=Gi({concat1d_:function(e){return el(e,0)}});var bl=Gi({concat2d_:function(e,t){return el(e,t)}});var vl=Gi({concat3d_:function(e,t){return el(e,t)}});var wl=Gi({concat4d_:function(e,t){return el(e,t)}});var kl=Gi({conv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,o=Bi(e,"x","conv2d","float32"),l=Bi(t,"filter","conv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Yo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Zo("conv2d",a,s);let p="NHWC"===r?u.shape[3]:u.shape[1];Q(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),Q(qo(n,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Q(Xo(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),Q(Xo(n),()=>"Error in conv2D: Strides should be larger than 0.");let h={x:u,filter:l},c={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s},f=Ei.runKernel(kt,h,c);return d?Yo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Il=Gi({conv1d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6?arguments[6]:void 0,o=Bi(e,"x","conv1d"),l=Bi(t,"filter","conv1d"),u=o,d=!1;2===o.rank&&(d=!0,u=Yo(o,[1,o.shape[0],o.shape[1]])),Q(3===u.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),Q(3===l.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Zo("conv1d",a,s),Q(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),Q(qo(n,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`),Q(Xo(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),Q(Xo(n),()=>"Error in conv1D: Stride should be larger than 0."),Q("NWC"===r,()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=Yo(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=Yo(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=kl(h,p,[1,n],a,"NHWC",[1,i],s);return Yo(c,d?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}});var Sl=Gi({conv2DBackpropInput_:function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=arguments.length>6?arguments[6]:void 0;Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Yo(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Q(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),Q(4===l.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),Q(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let d="NHWC"===i?o[3]:o[1],p="NHWC"===i?l.shape[3]:l.shape[1];Q(d===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${n.shape[2]}.`),Q(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),Zo("conv2dDerInput",r,s);let h={dy:l,filter:n},c={strides:a,pad:r,dataFormat:i,dimRoundingMode:s,inputShape:o},f=Ei.runKernel(St,h,c);return u?Yo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Nl=Gi({conv2dTranspose_:function(e,t,n,a,r,i){let s=Bi(e,"x","conv2dTranspose"),o=Bi(t,"filter","conv2dTranspose");return Sl(n,s,o,a,r,"NHWC",i)}});var Cl=Gi({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],s=Bi(e,"x","conv3d"),o=Bi(t,"filter","conv3d"),l=s,u=!1;4===s.rank&&(u=!0,l=Yo(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Q(5===l.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),Q(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),Q(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),Q(qo(n,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),Q("NDHWC"===r,()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),Q(Xo(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),Q(Xo(n),()=>"Error in conv3D: Strides should be larger than 0.");let d={x:l,filter:o},p={strides:n,pad:a,dataFormat:r,dilations:i},h=Ei.runKernel(Nt,d,p);return u?Yo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Tl=Gi({conv3DBackpropInput_:function(e,t,n,a,r){Q(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=Yo(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);let l=i[4],u=s.shape[4];Q(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),Q(5===s.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),Q(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),Q(l===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`),Q(u===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`);let d={dy:s,filter:n},p={pad:r,strides:a,inputShape:i},h=Ei.runKernel(Tt,d,p);return o?Yo(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}});var Rl=Gi({conv3dTranspose_:function(e,t,n,a,r){let i=Bi(e,"x","conv3dTranspose"),s=Bi(t,"filter","conv3dTranspose");return Tl(n,i,s,a,r)}});var El=Gi({cos_:function(e){let t={x:Bi(e,"x","cos","float32")};return Ei.runKernel("Cos",t)}});var $l=Gi({cosh_:function(e){let t={x:Bi(e,"x","cosh","float32")};return Ei.runKernel(Et,t)}});var Ml=Gi({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={x:Bi(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:a};return Ei.runKernel($t,r,i)}});var Fl=Gi({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={x:Bi(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:a};return Ei.runKernel(Mt,r,i)}});var _l=Gi({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Bi(e,"x","denseBincount"),i=Bi(t,"weights","denseBincount");Q("int32"===r.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),Q(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),Q(n>=0,()=>`size must be non-negative, but got ${n}.`),Q(i.size===r.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);let s={x:r,weights:i},o={size:n,binaryOutput:a};return Ei.runKernel(_t,s,o)}});var Pl=Gi({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC",a=Bi(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],i="NHWC"===n?a.shape[2]:a.shape[3],s="NHWC"===n?a.shape[3]:a.shape[1];Q(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),Q(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`),Q(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${a.shape}`),Q(s%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${a.shape}`);let o={x:a},l={blockSize:t,dataFormat:n};return Ei.runKernel(Pt,o,l)}});var Ol=Gi({depthwiseConv2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,o=Bi(e,"x","depthwiseConv2d","float32"),l=Bi(t,"filter","depthwiseConv2d","float32"),u=o,d=!1;3===o.rank&&(d=!0,u=Yo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(4===u.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),Q(4===l.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p="NHWC"===r?u.shape[3]:u.shape[1];Q(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),Zo("depthwiseConv2d",a,s);let h={x:u,filter:l},c={strides:n,pad:a,dataFormat:r,dilations:i,dimRoundingMode:s},f=Ei.runKernel(Ot,h,c);return d?Yo(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Dl=Gi({diag_:function(e){let t={x:Bi(e,"x","diag")};return Ei.runKernel(Lt,t)}});var zl=Gi({dilation2d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=Bi(e,"x","dilation2d"),o=Bi(t,"filter","dilation2d");Q(3===s.rank||4===s.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),Q(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),Q("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=s,u=!1;3===s.rank&&(l=Yo(s,[1,s.shape[0],s.shape[1],s.shape[2]]),u=!0),Q(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);let d={x:l,filter:o},p={strides:n,pad:a,dilations:r},h=Ei.runKernel(Wt,d,p);return u?Yo(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ll={};function Wl(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let i=n-1-r,s=e[i]||1;(t[t.length-1-r]||1)>1&&1===s&&a.unshift(i)}return a}function Bl(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],i=t.length-a-1,s=t[i];(null==r||1===r&&s>1)&&n.unshift(i)}return n}function Vl(e,t){let n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let i=e[e.length-r-1];null==i&&(i=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===i)a[n-r-1]=s;else if(1===s)a[n-r-1]=i;else{if(i!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}a[n-r-1]=i}}return a}b(Ll,{assertAndGetBroadcastShape:()=>Vl,getBroadcastDims:()=>Wl,getReductionAxes:()=>Bl});var Ul=Gi({equal_:function(e,t){let n=Bi(e,"a","equal","string_or_numeric"),a=Bi(t,"b","equal","string_or_numeric");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(Kt,r)}});var Gl=Gi({where_:function(e,t,n){let a=Bi(t,"a","where"),r=Bi(n,"b","where"),i=Bi(e,"condition","where","bool"),s=Vl(Vl(i.shape,a.shape),r.shape),o={condition:ml(i,s),t:ml(a,s),e:ml(r,s)};return Ei.runKernel(ka,o)}});var Hl=Gi({zerosLike_:function(e){let t={x:Bi(e,"x","zerosLike")};return Ei.runKernel(ir,t)}});var jl=Gi({divNoNan_:function(e,t){let n=Bi(e,"a","div"),a=Bi(t,"b","div");[n,a]=vi(n,a);let r=vo(n,a),i=Hl(r),s=Ul(a,i);return Gl(s,i,r)}});var ql=Gi({dot_:function(e,t){let n=Bi(e,"t1","dot"),a=Bi(t,"t2","dot");Q((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`);let r=1===n.rank?n.size:n.shape[1],i=1===a.rank?a.size:a.shape[0];if(Q(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),1===n.rank&&1===a.rank){let e=Yo(n,[1,-1]),t=Yo(a,[-1,1]),r=tl(e,t);return Yo(r,[])}if(1===n.rank&&2===a.rank){let e=Yo(n,[1,-1]),t=Yo(a,[a.shape[0],a.shape[1]]),r=tl(e,t);return Yo(r,[r.size])}if(2===n.rank&&1===a.rank){let e=Yo(a,[-1,1]),t=tl(n,e);return Yo(t,[t.size])}{let e=Yo(a,[a.shape[0],a.shape[1]]);return tl(n,e)}}});var Xl=Gi({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];let r=n.map((e,t)=>Bi(e,`tensors${t}`,"einsum")),i={equation:e};return Ei.runKernel(Ht,r,i)}});var Kl=Gi({elu_:function(e){let t={x:Bi(e,"x","elu","float32")};return Ei.runKernel("Elu",t)}});var Zl=Gi({ensureShape_:function(e,t){let n=Bi(e,"x","ensureShape","string_or_numeric");if(!re(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var Yl=Gi({erf_:function(e){let t=Bi(e,"x","erf");Q("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=go(t,"float32"));let n={x:t};return Ei.runKernel("Erf",n)}});function Jl(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Ql(e,t,n){let a=e.length+t.length,r=[],i=0,s=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[i++]):r.push(t[s++]);return r}function eu(e,t){let n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map(t=>e[t])]}function tu(e,t){return Ql(e,t.map(e=>1),t)}function nu(e,t,n){Q(Jl(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function au(e,t){if(Jl(e,t))return null;let n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach(e=>n.push(e)),n}function ru(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function iu(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}var su=Gi({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a={x:Bi(e,"x","max")},r={reductionIndices:t,keepDims:n};return Ei.runKernel("Max",a,r)}});var ou=Gi({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a={x:Bi(e,"x","min")},r={axis:t,keepDims:n};return Ei.runKernel("Min",a,r)}});var lu=Gi({pow_:function(e,t){let n=Bi(e,"base","pow"),a=Bi(t,"exp","pow");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel("Pow",r)}});function uu(e,t){if((qr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&qr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ji(e,[],[],t)}var du=Gi({sqrt_:function(e){let t={x:Bi(e,"x","sqrt","float32")};return Ei.runKernel($a,t)}});var pu=Gi({square_:function(e){let t=Bi(e,"x","square");return Ei.runKernel("Square",{x:t},{})}});var hu=Gi({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=Bi(e,"x","sum");"bool"===a.dtype&&(a=go(a,"int32"));let r={x:a},i={axis:t,keepDims:n};return Ei.runKernel("Sum",r,i)}});function cu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return ko(e);if(1!==e.rank&&null===n)return cu(Yo(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return hu(ko(e),n);if(t===1/0)return su(ko(e),n);if(t===-1/0)return ou(ko(e),n);if("euclidean"===t||2===t)return du(hu(lu(ko(e),uu(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return su(hu(ko(e),n[0]),n[1]-1);if(t===1/0)return su(hu(ko(e),n[1]),n[0]);if(t===-1/0)return ou(hu(ko(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return du(hu(pu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var fu=Gi({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=cu(e=Bi(e,"x","norm"),t,n),i=r.shape;if(a){let t=ce(n,e.shape);i=tu(r.shape,t)}return Yo(r,i)}});var mu=Gi({euclideanNorm_:function(e){return fu(e,"euclidean",arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}});var gu=Gi({exp_:function(e){let t={x:Bi(e,"x","exp")};return Ei.runKernel("Exp",t)}});var yu=Gi({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Bi(e,"x","expandDims","string_or_numeric");Q(t<=n.rank,()=>"Axis must be <= rank of the tensor");let a={input:n},r={dim:t};return Ei.runKernel(Yt,a,r)}});var Au=Gi({expm1_:function(e){let t={x:Bi(e,"x","expm1")};return Ei.runKernel(Jt,t)}});var xu=Gi({tile_:function(e,t){let n=Bi(e,"x","tile","string_or_numeric");Q(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let a={x:n},r={reps:t};return Ei.runKernel(Ya,a,r)}});var bu=Gi({eye_:function(e,t,n){null==t&&(t=e);let a=mo([e,t],arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32"),r=e<=t?e:t;for(let s=0;s<r;++s)a.set(1,s,s);let i=Yo(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return xu(yu(i,0),[n[0],1,1]);if(2===n.length)return xu(yu(yu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return xu(yu(yu(yu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var vu=Gi({floor_:function(e){let t={x:Bi(e,"x","floor","float32")};return Ei.runKernel(nn,t)}});var wu=Gi({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r={x:Bi(e,"x","gather"),indices:Bi(t,"indices","gather","int32")},i={axis:n,batchDims:a};return Ei.runKernel(sn,r,i)}});var ku=Gi({greater_:function(e,t){let n=Bi(e,"a","greater","string_or_numeric"),a=Bi(t,"b","greater","string_or_numeric");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(ln,r)}});var Iu=Gi({greaterEqual_:function(e,t){let n=Bi(e,"a","greaterEqual","string_or_numeric"),a=Bi(t,"b","greaterEqual","string_or_numeric");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(un,r)}});var Su=Gi({imag_:function(e){let t={input:Bi(e,"input","imag")};return Ei.runKernel(hn,t)}});var Nu=Gi({isFinite_:function(e){let t={x:Bi(e,"x","isFinite")};return Ei.runKernel(cn,t)}});var Cu=Gi({isInf_:function(e){let t={x:Bi(e,"x","isInf")};return Ei.runKernel(fn,t)}});var Tu=Gi({isNaN_:function(e){let t={x:Bi(e,"x","isNaN")};return Ei.runKernel(mn,t)}});var Ru=Gi({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2,n={x:Bi(e,"x","leakyRelu")},a={alpha:t};return Ei.runKernel(gn,n,a)}});var Eu=Gi({less_:function(e,t){let n=Bi(e,"a","less","string_or_numeric"),a=Bi(t,"b","less","string_or_numeric");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(yn,r)}});var $u=Gi({lessEqual_:function(e,t){let n=Bi(e,"a","lessEqual","string_or_numeric"),a=Bi(t,"b","lessEqual","string_or_numeric");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(An,r)}});function Mu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return Ei.runKernel(xn,{},a)}var Fu=Gi({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5,i=Bi(e,"x","localResponseNormalization");Q(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`),Q(se(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,o=!1;3===i.rank&&(o=!0,s=Yo(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let l={x:s},u={depthRadius:t,bias:n,alpha:a,beta:r},d=Ei.runKernel("LRN",l,u);return o?Yo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var _u=Gi({log_:function(e){let t={x:Bi(e,"x","log","float32")};return Ei.runKernel("Log",t)}});var Pu=Gi({log1p_:function(e){let t={x:Bi(e,"x","log1p")};return Ei.runKernel(vn,t)}});function Ou(e){return Q(Ne(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let a=Bi(t,"x","tf.grad","string_or_numeric"),r=null!=n?Bi(n,"dy","tf.grad"):null;return Ei.tidy(()=>{let{value:t,grads:n}=Ei.gradients(()=>e(a),[a],r);return null!=r&&ee(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Vu(n),n[0]})}}function Du(e){return Q(Ne(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{Q(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let a=Vi(t,"args","tf.grads","string_or_numeric"),r=null!=n?Bi(n,"dy","tf.grads"):null;return Ei.tidy(()=>{let{value:t,grads:n}=Ei.gradients(()=>e(...a),a,r);return null!=r&&ee(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Vu(n),n})}}function zu(e){return Q(Ne(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{Q(t instanceof si,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),Q(null==n||n instanceof si,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:a,value:r}=Ei.gradients(()=>e(t),[t],n);return Vu(a),{grad:a[0],value:r}}}function Lu(e){return Q(Ne(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{Q(Array.isArray(t)&&t.every(e=>e instanceof si),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),Q(null==n||n instanceof si,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let a=Ei.gradients(()=>e(...t),t,n);return null!=n&&ee(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Vu(a.grads),a}}function Wu(e,t){Q(Ne(e),()=>"The f passed in variableGrads(f) must be a function"),Q(null==t||Array.isArray(t)&&t.every(e=>e instanceof li),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=null!=t;if(!n){t=[];for(let e in Ei.registeredVariables)t.push(Ei.registeredVariables[e])}let a=n?t.filter(e=>!e.trainable):null,r=t.length;Q((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let{value:i,grads:s}=Ei.gradients(e,t,null,!0);Q(s.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),Q(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let o={};return t.forEach((e,t)=>{null!=s[t]&&(o[e.name]=s[t])}),null!=a&&a.forEach(e=>o[e.name]=null),{value:i,grads:o}}function Bu(e){return Ei.customGrad(e)}function Vu(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var Uu=Gi({neg_:function(e){let t={x:Bi(e,"x","neg")};return Ei.runKernel("Neg",t)}});var Gu=Gi({softplus_:function(e){let t={x:Bi(e,"x","softplus")};return Ei.runKernel(Ea,t)}});var Hu=Gi({logSigmoid_:function(e){let t=Bi(e,"x","logSigmoid");return Bu(e=>({value:Uu(Gu(Uu(e))),gradFunc:t=>wo(t,nl(Uu(e)))}))(t)}});var ju=Gi({sub_:function(e,t){let n=Bi(e,"a","sub"),a=Bi(t,"b","sub");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel("Sub",r)}});var qu=Gi({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=Bi(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Bu((e,n)=>{let a=su(e,t,!0),r=ju(e,a),i=ju(go(r,"float32"),_u(hu(gu(r),t,!0)));return n([i]),{value:i,gradFunc:(e,n)=>{let[a]=n,r=gu(a);return ju(e,wo(hu(e,t,!0),r))}}})(n)}});var Xu=Gi({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=Bi(e,"x","logSumExp"),r=ce(t,a.shape),i=su(a,r,!0),s=ju(a,i),o=gu(s),l=hu(o,r),u=_u(l),d=xo(Yo(i,u.shape),u);if(n){let e=tu(d.shape,r);return Yo(d,e)}return d}});var Ku=Gi({logicalAnd_:function(e,t){let n=Bi(e,"a","logicalAnd","bool"),a=Bi(t,"b","logicalAnd","bool");Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(wn,r)}});var Zu=Gi({logicalNot_:function(e){let t={x:Bi(e,"x","logicalNot","bool")};return Ei.runKernel(kn,t)}});var Yu=Gi({logicalOr_:function(e,t){let n=Bi(e,"a","logicalOr","bool"),a=Bi(t,"b","logicalOr","bool");Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(In,r)}});var Ju=Gi({logicalXor_:function(e,t){let n=Bi(e,"a","logicalXor","bool"),a=Bi(t,"b","logicalXor","bool");return Vl(n.shape,a.shape),Ku(Yu(e,t),Zu(Ku(e,t)))}}),Qu=2147483648;var ed=Gi({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left",a=Bi(e,"sortedSequence","searchSorted"),r=Bi(t,"values","searchSorted"),i=a.shape[a.shape.length-1],s=r.shape[r.shape.length-1],o=Yo(a,[-1,i]),l=Yo(r,[-1,s]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ne(l.shape)>=Qu)throw new Error(`values tensor size must less than ${Qu}`);if(o.shape[1]>=Qu)throw new Error(`trailing dim_size must less than ${Qu} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},d={side:n};return Ei.runKernel(wa,u,d)}});function td(e,t){return ed(e,t,"left")}var nd=Gi({maxPool_:function(e,t,n,a,r){let i=Bi(e,"x","maxPool"),s=i,o=!1;3===i.rank&&(o=!0,s=Yo(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Q(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),Q(qo(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),Zo("maxPool",a,r);let l={x:s},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},d=Ei.runKernel(Fn,l,u);return o?Yo(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var ad=Gi({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",s=Bi(e,"x","maxPool3d"),o=s,l=!1;4===s.rank&&(l=!0,o=Yo(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),Q(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),Q("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),Zo("maxPool3d",a,r);let u={x:o},d={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:i},p=Ei.runKernel(Pn,u,d);return l?Yo(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var rd=Gi({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i={x:Bi(e,"x","maxPoolWithArgmax")},s={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=Ei.runKernel(Dn,i,s);return{result:o[0],indexes:o[1]}}});var id=Gi({maximum_:function(e,t){let n=Bi(e,"a","maximum"),a=Bi(t,"b","maximum");[n,a]=vi(n,a),"bool"===n.dtype&&(n=go(n,"int32"),a=go(a,"int32")),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(Mn,r)}});var sd=Gi({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a={x:Bi(e,"x","mean")},r={axis:t,keepDims:n};return Ei.runKernel(zn,a,r)}});function od(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Pe(e),"complex64"===t){let t=od(e,"float32"),n=od(e,"float32");return Hi(t,n)}let n=Fe(ne(e),t);return Ei.makeTensor(n,e,t)}function ld(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if(Pe(e),"complex64"===t){let t=ld(e,"float32"),n=od(e,"float32");return Hi(t,n)}let n=Me(ne(e),t);return Ei.makeTensor(n,e,t)}function ud(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=Bi(e,"x","meshgrid",e instanceof si?e.dtype:"float32");if(void 0===t)return[a];let r=Bi(t,"y","meshgrid",t instanceof si?t.dtype:"float32"),i=ne(a.shape),s=ne(r.shape);return"xy"===n?(a=Yo(a,[1,-1]),r=Yo(r,[-1,1]),[tl(ld([s,1],a.dtype),a),tl(r,ld([1,i],r.dtype))]):(a=Yo(a,[-1,1]),r=Yo(r,[1,-1]),[tl(a,ld([1,s],a.dtype)),tl(ld([i,1],r.dtype),r)])}var dd=Gi({minimum_:function(e,t){let n=Bi(e,"a","minimum"),a=Bi(t,"b","minimum");[n,a]=vi(n,a),"bool"===n.dtype&&(n=go(n,"int32"),a=go(a,"int32")),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(Wn,r)}});var pd=Gi({mirrorPad_:function(e,t,n){Q("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let a=Bi(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q(t.length===a.rank,()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`);let r="reflect"===n?1:0;for(let o=0;o<a.rank;o++)Q(2===t[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),Q(t[o][0]>=0&&t[o][0]<=a.shape[o]-r&&t[o][1]>=0&&t[o][1]<=a.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${a.shape[o]-r} or less than 0 for input of shape ${a.shape}`);let i={paddings:t,mode:n},s={x:a};return Ei.runKernel(Bn,s,i)}});var hd=Gi({mod_:function(e,t){let n=Bi(e,"a","mod"),a=Bi(t,"b","mod");[n,a]=vi(n,a);let r={a:n,b:a};return Ei.runKernel("Mod",r)}});var cd=Gi({moments_:function(e){let t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=ce(arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,(e=Bi(e,"x","moments")).shape),a=sd(e,n,t),r=a.shape;t||(r=tu(a.shape,n));let i=pu(ju(go(e,"float32"),Yo(a,r)));return{mean:a,variance:sd(i,n,t)}}});var fd=Gi({multiRNNCell_:function(e,t,n,a){let r=Bi(t,"data","multiRNNCell"),i=Vi(n,"c","multiRNNCell"),s=Vi(a,"h","multiRNNCell"),o=r,l=[];for(let p=0;p<e.length;p++){let t=e[p](o,i[p],s[p]);l.push(t[0]),l.push(t[1]),o=t[1]}let u=[],d=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),d.push(l[p+1]);return[u,d]}});var md=Gi({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Bi(e,"logits","multinomial"),i=r.size,s=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();let o={logits:1===s?Yo(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=Ei.runKernel(Un,o,l);return 1===s?Yo(u,[u.size]):u}});var gd=Gi({notEqual_:function(e,t){let n=Bi(e,"a","notEqual","string_or_numeric"),a=Bi(t,"b","notEqual","string_or_numeric");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(jn,r)}});var yd=Gi({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:Bi(e,"indices","oneHot","int32")},s={dtype:r,depth:t,onValue:n,offValue:a};return Ei.runKernel(Yn,i,s)}});var Ad=Gi({onesLike_:function(e){let t={x:Bi(e,"x","onesLike")};return Ei.runKernel(Zn,t)}});var xd=Gi({outerProduct_:function(e,t){let n=Bi(e,"v1","outerProduct"),a=Bi(t,"v2","outerProduct");Q(1===n.rank&&1===a.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`);let r=Yo(n,[-1,1]),i=Yo(a,[1,-1]);return tl(r,i)}});var bd=Gi({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=Bi(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},i={x:a};return Ei.runKernel(Qn,i,r)}});var vd=Gi({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Q(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),bd(e,[t],n)}});var wd=Gi({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Q(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),bd(e,t,n)}});var kd=Gi({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Q(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),bd(e,t,n)}});var Id=Gi({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Q(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),bd(e,t,n)}});var Sd=Gi({spaceToBatchND_:function(e,t,n){let a=Bi(e,"x","spaceToBatchND");Q(a.rank>=1+t.length,()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`),Q(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),Q(a.shape.reduce((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e,!0),()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:a},i={blockShape:t,paddings:n};return Ei.runKernel(Fa,r,i)}});var Nd=Gi({pool_:function(e,t,n,a,r,i,s){null==r&&(r=[1,1]),null==i&&(i=1),0===a&&(a="valid");let o=Bi(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=Yo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Q(qo(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);let d,p=Do(l.shape,t,i,r,a),h=[p.dilationHeight,p.dilationWidth];d="same"===a?function(e,t){let n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),a=n.map(e=>Math.floor(e/2)),r=n.map((e,t)=>e-a[t]);return n.map((e,t)=>[a[t],r[t]])}([p.filterHeight,p.filterWidth],h):[[0,0],[0,0]];let c=1===h[0]&&1===h[1],[f,m]=function(e,t,n){let a=n.map(e=>e[0]),r=n.map(e=>e[1]),i=e.concat(a,r),s=t.map((e,t)=>(e-i[t]%e)%e),o=r.map((e,t)=>e+s[t]),l=t.map((e,t)=>[a[t],o[t]]),u=t.map((e,t)=>[0,s[t]]);return[l,u]}([p.inHeight,p.inWidth],h,d),g=c?a:"valid",y=c?l:Sd(l,h,f),A=("avg"===n?()=>Jo(y,t,i,g,s):()=>nd(y,t,i,g,s))(),x=c?A:sl(A,h,m);return u?Yo(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var Cd=Gi({prelu_:function(e,t){let n={x:Bi(e,"x","prelu"),alpha:Bi(t,"alpha","prelu")};return Ei.runKernel(na,n)}});var Td=Gi({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=Bi(e,"x","prod");"bool"===a.dtype&&(a=go(a,"int32"));let r={x:a},i={axis:t,keepDims:n};return Ei.runKernel(aa,r,i)}});var Rd=Gi({raggedGather_:function(e,t,n,a){let r={paramsNestedSplits:e.map((e,t)=>Bi(e,`tensors${t}`,"raggedGather","int32")),paramsDenseValues:Bi(t,"paramsDenseValues","raggedGather"),indices:Bi(n,"indices","raggedGather","int32")},i={outputRaggedRank:a},s=Ei.runKernel(ra,r,i);return{outputNestedSplits:s.slice(0,s.length-1),outputDenseValues:s[s.length-1]}}});var Ed=Gi({raggedRange_:function(e,t,n){let a=Bi(e,"starts","raggedRange"),r={starts:a,limits:Bi(t,"limits","raggedRange",a.dtype),deltas:Bi(n,"deltas","raggedRange",a.dtype)},i=Ei.runKernel(ia,r);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}});var $d=Gi({raggedTensorToTensor_:function(e,t,n,a,r){let i=Bi(e,"shape","raggedTensorToTensor","int32"),s=Bi(t,"values","raggedTensorToTensor"),o={shape:i,values:s,defaultValue:Bi(n,"defaultValue","raggedTensorToTensor",s.dtype),rowPartitionTensors:a.map((e,t)=>Bi(e,`tensors${t}`,"raggedTensorToTensor","int32"))},l={rowPartitionTypes:r};return Ei.runKernel(sa,o,l)}});var Md=Gi({rand_:function(e,t,n){Pe(e);let a=ne(e),r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(a)}for(let i=0;i<a;i++)r[i]=t();return Ei.makeTensor(r,e,n)}}),Fd=v(F()),_d={};b(_d,{TEST_EPSILON_FLOAT16:()=>Od,createVideoElement:()=>qd,encodeStrings:()=>jd,expectArrayBuffersEqual:()=>Hd,expectArraysClose:()=>Dd,expectArraysEqual:()=>Bd,expectNumbersClose:()=>Vd,expectPromiseToFail:()=>Wd,expectValuesInRange:()=>Gd,play:()=>Xd,testEpsilon:()=>zd});var Pd=.001,Od=.1;function Dd(e,t,n){return null==n&&(n=zd()),Ld(e,t,(e,t)=>Ud(e,t,n))}function zd(){return 32===Ei.backend.floatPrecision()?Pd:Od}function Ld(e,t,n){let a=!0;if((qr(e)||qr(t))&&(a=!1),qr(e)&&qr(t)&&(a=!0),a){let n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=zi(e),a=zi(t);if(!ie(n,a))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${a}]`)}let r=qr(e)?e:Xr(e),i=qr(t)?t:Xr(t);if(r.length!==i.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${i.length}.\nActual:   ${r}.\nExpected: ${i}.`);for(let s=0;s<i.length;++s){let e=r[s],t=i[s];if(!n(e,t))throw new Error(`Arrays differ: actual[${s}] = ${e}, expected[${s}] = ${t}.\nActual:   ${r}.\nExpected: ${i}.`)}"undefined"!=typeof expect&&expect().nothing()}function Wd(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function Bd(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return we(e)||we(e[0])||we(t)||we(t[0])?Ld(e,n,(e,t)=>e==t):Ld(e,t,(e,t)=>Ud(e,t,0))}function Vd(e,t,n){if(null==n&&(n=zd()),!Ud(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function Ud(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Gd(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function Hd(e,t){let n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error(`Expected ArrayBuffer to be of length ${a.length}, but it was ${n.length}`);for(let r=0;r<a.length;r++)if(n[r]!==a[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${a[r]} but got ${n[r]} instead`)}function jd(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?jd(n):e[t]=Hr(n)}return e}function qd(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",n=>e(t)),t.load()})}async function Xd(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var Kd=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=r||Math.random();this.random=Fd.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,i;do{a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r}while(i>=1||0===i);let s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*a*s,t=this.mean+this.stdDev*r*s,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Zd=class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=Fd.alea(r.toString()),this.randn=new Kd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,i;for(;;){do{a=this.randn.nextValue(),i=1+this.c*a}while(i<=0);if(i*=i*i,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-i+Math.log(i)),r=this.randu(),r<t||Math.log(r)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},Yd=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Fd.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};var Jd=Gi({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if(Pe(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);let i=new Zd(t,n,a,r),s=mo(e,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});var Qd=Gi({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(Pe(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);let i=new Kd(t,n,a,!1,r),s=mo(e,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});var ep=Gi({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Qd(e,0,1,t,n)}});var tp=Gi({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;Pe(e);let i=mo(e,a),s=new Yd(t,n,null,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var np=Gi({randomUniformInt_:function(e,t,n,a){return tp(e,t,n,"int32",a)}});function ap(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return Ei.runKernel(oa,{},r)}var rp=Gi({real_:function(e){let t={input:Bi(e,"input","real")};return Ei.runKernel(la,t)}});var ip=Gi({reciprocal_:function(e){let t={x:Bi(e,"x","reciprocal")};return Ei.runKernel(ua,t)}});var sp=Gi({relu_:function(e){let t={x:Bi(e,"x","relu")};return Ei.runKernel(da,t)}});var op=Gi({relu6_:function(e){let t={x:Bi(e,"x","relu6")};return Ei.runKernel(ga,t)}});var lp=Gi({reverse_:function(e,t){let n={x:Bi(e,"x","reverse")},a={dims:t};return Ei.runKernel(ya,n,a)}});var up=Gi({reverse1d_:function(e){let t=Bi(e,"x","reverse");return Q(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),lp(t,0)}});var dp=Gi({reverse2d_:function(e,t){let n=Bi(e,"x","reverse");return Q(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),lp(n,t)}});var pp=Gi({reverse3d_:function(e,t){let n=Bi(e,"x","reverse");return Q(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),lp(n,t)}});var hp=Gi({reverse4d_:function(e,t){let n=Bi(e,"x","reverse");return Q(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),lp(n,t)}});var cp=Gi({round_:function(e){let t={x:Bi(e,"x","round")};return Ei.runKernel(Aa,t)}});var fp=Gi({rsqrt_:function(e){let t={x:Bi(e,"x","rsqrt","float32")};return Ei.runKernel(xa,t)}});var mp=Gi({selu_:function(e){let t={x:Bi(e,"x","selu")};return Ei.runKernel(Ia,t)}});var gp=Gi({separableConv2d_:function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC",o=Bi(e,"x","separableConv2d"),l=Bi(t,"depthwiseFilter","separableConv2d"),u=Bi(n,"pointwiseFilter","separableConv2d"),d=o,p=!1;if(3===o.rank&&(p=!0,d=Yo(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Q(4===d.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),Q(4===l.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),Q(4===u.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),Q(1===u.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),Q(1===u.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let h=l.shape[2],c=l.shape[3];Q(u.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${u.shape[2]}.`);let f=Ol(d,l,a,r,s,i),m=kl(f,u,1,"valid",s);return p?Yo(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var yp=async function(e,t){let n=Bi(e,"x","setdiff1d"),a=Bi(t,"y","setdiff1d");Q(n.dtype===a.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`),Q(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),Q(1===a.rank,()=>`y should be 1D tensor, but got y (${a.shape}).`);let r=await n.data(),i=await a.data(),s=new Set(i),o=0;for(let d=0;d<r.length;d++)s.has(r[d])||o++;let l=new ai([o],n.dtype),u=new ai([o],"int32");for(let d=0,p=0;d<r.length;d++)s.has(r[d])||(l.values[p]=r[d],u.values[p]=d,p++);return[l.toTensor(),u.toTensor()]};var Ap=Gi({sign_:function(e){let t={x:Bi(e,"x","sign")};return Ei.runKernel(Ta,t)}});var xp=Gi({sin_:function(e){let t={x:Bi(e,"x","sin","float32")};return Ei.runKernel("Sin",t)}});var bp=Gi({sinh_:function(e){let t={x:Bi(e,"x","sinh")};return Ei.runKernel(Ca,t)}});var vp=Gi({slice1d_:function(e,t,n){let a=Bi(e,"x","slice1d");return Q(1===a.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`),al(a,[t],[n])}});var wp=Gi({slice2d_:function(e,t,n){let a=Bi(e,"x","slice2d");return Q(2===a.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`),al(a,t,n)}});var kp=Gi({slice3d_:function(e,t,n){let a=Bi(e,"x","slice3d");return Q(3===a.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`),al(a,t,n)}});var Ip=Gi({slice4d_:function(e,t,n){let a=Bi(e,"x","slice4d");return Q(4===a.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`),al(a,t,n)}});var Sp=Gi({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,n=Bi(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return Ei.runKernel(Pa,a,r)}});var Np=Gi({fft_:function(e){Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return Ei.runKernel("FFT",t)}});var Cp=Gi({ifft_:function(e){Q("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return Ei.runKernel(pn,t)}});var Tp=Gi({irfft_:function(e){let t,n=e.shape[e.shape.length-1],a=e.size/n;if(n<=2){let r=Yo(e,[a,n]);t=Cp(r)}else{let r=[a,2*(n-1)],i=Yo(rp(e),[a,n]),s=Yo(Su(e),[a,n]),o=lp(al(i,[0,1],[a,n-2]),1),l=wo(lp(al(s,[0,1],[a,n-2]),1),uu(-1)),u=el([i,o],1),d=el([s,l],1),p=Yo(Hi(u,d),[r[0],r[1]]);t=Cp(p)}if(t=rp(t),3===e.rank&&0!==e.shape[0]){let n=t,a=e.shape[0];t=Yo(t,[a,t.shape[0]/a,t.shape[1]]),n.dispose()}return t}});var Rp=Gi({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a={x:Bi(e,"x","split")},r={numOrSizeSplits:t,axis:n};return Ei.runKernel(_a,a,r)}});var Ep=Gi({rfft_:function(e,t){Q("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n,a=e.shape[e.shape.length-1],r=e.size/a;if(null!=t&&t<a){let r=e.shape.map(e=>0),i=e.shape.map(e=>e);i[e.shape.length-1]=t,n=al(e,r,i),a=t}else if(null!=t&&t>a){let r=e.shape.map(e=>e);r[e.shape.length-1]=t-a,n=el([e,od(r)],e.shape.length-1),a=t}else n=e;let i=Hl(n),s=Yo(Hi(n,i),[r,a]),o=Np(s),l=Math.floor(a/2)+1,u=rp(o),d=Su(o),p=Rp(u,[l,a-l],u.shape.length-1),h=Rp(d,[l,a-l],d.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,Yo(Hi(p[0],h[0]),c)}});var $p=Gi({squaredDifference_:function(e,t){let n=Bi(e,"a","squaredDifference"),a=Bi(t,"b","squaredDifference");[n,a]=vi(n,a),Vl(n.shape,a.shape);let r={a:n,b:a};return Ei.runKernel(Ba,r,{})}});var Mp=Gi({squeeze_:function(e,t){let n=Bi(e,"x","squeeze","string_or_numeric");return Yo(n,fe(n.shape,t).newShape)}});var Fp=Gi({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Vi(e,"tensors","stack","string_or_numeric");Q(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&Q(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let a=n,r={axis:t};return Ei.runKernel(Jn,a,r)}});var _p=Gi({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n={x:Bi(e,"x","step")},a={alpha:t};return Ei.runKernel(sr,n,a)}});var Pp=Gi({stridedSlice_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0,u={x:Bi(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:a,beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};return Ei.runKernel(Ga,u,d)}});var Op=Gi({tan_:function(e){let t={x:Bi(e,"x","tan","float32")};return Ei.runKernel("Tan",t)}});function Dp(e,t){te(e);let n=zi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ji(e,null,n,t)}function zp(e,t,n){if(te(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let a=zi(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ji(e,t,a,n)}function Lp(e,t,n){if(te(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let a=zi(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ji(e,t,a,n)}function Wp(e,t,n){if(te(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let a=zi(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ji(e,t,a,n)}function Bp(e,t,n){if(te(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let a=zi(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ji(e,t,a,n)}function Vp(e,t,n){if(te(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let a=zi(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ji(e,t=t||a,a,n)}var Up={};function Gp(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(i+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(i+" update.rank != "+(r+e.length-a));for(let s=0;s<r;++s)if(n.shape[s]!==t.shape[s])throw new Error(i+` updates.shape[${s}] (${n.shape[s]}) != indices.shape[${s}] (${t.shape[s]}).`);for(let s=0;s<n.rank-r;++s)if(n.shape[s+r]!==e[s+a])throw new Error(i+` updates.shape[${s+r}] (${n.shape[s+r]}) != shape[${s+r}] (${e[s+r]})`)}function Hp(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Gp(n,t,e)}function jp(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,i=n.length,s=1;for(let l=r;l<i;++l)s*=n[l];let o=r<1?1:r;return{sliceRank:r,numUpdates:ne(t.shape)/o,sliceSize:s,strides:[...Te(n.slice(0,r)),1],outputSize:ne(n)}}b(Up,{calculateShapes:()=>jp,validateInput:()=>Hp,validateUpdateShape:()=>Gp});var qp=Gi({tensorScatterUpdate_:function(e,t,n){let a=Bi(e,"tensor","tensorScatterupdate"),r=Bi(t,"indices","tensorScatterupdate","int32"),i=Bi(n,"updates","tensorScatterupdate");if(Hp(i,r,a.shape),a.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${a.dtype} and ${i.dtype}.`);let s={tensor:a,indices:r,updates:i};return Ei.runKernel(va,s,{})}});var Xp=Gi({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a=Bi(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let i={x:a},s={k:t,sorted:n},[o,l]=Ei.runKernel(Ja,i,s);return{values:o,indices:l}}});var Kp=Gi({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if(Pe(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");let i=new Kd(t,n,a,!0,r),s=mo(e,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});var Zp=Gi({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Bi(e,"x","unique","string_or_numeric");Q(n.rank>0,()=>"The input tensor must be at least 1D");let a={x:n},r={axis:t},[i,s]=Ei.runKernel(tr,a,r);return{values:i,indices:s}}});var Yp=Gi({unsortedSegmentSum_:function(e,t,n){let a=Bi(e,"x","unsortedSegmentSum"),r=Bi(t,"segmentIds","unsortedSegmentSum","int32");Q(se(n),()=>"numSegments must be of dtype int");let i={x:a,segmentIds:r},s={numSegments:n};return Ei.runKernel(ar,i,s)}});var Jp=Gi({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=Bi(e,"x","unstack","string_or_numeric");Q(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let a={value:n},r={axis:t};return Ei.runKernel(nr,a,r)}});function Qp(e,t){return ed(e,t,"right")}function eh(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Ei.makeVariable(e,t,n,a)}function th(e,t){let n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);let a=mo(e,"int32"),r=mo([n.length,e.length],"int32");for(let i=0;i<n.length;i++){let t=a.indexToLoc(n[i]),s=i*e.length;r.values.set(t,s)}return r.toTensor()}var nh=async function(e){let t=Bi(e,"condition","whereAsync","bool"),n=await t.data(),a=th(t.shape,n);return e!==t&&t.dispose(),a};var ah=async function(e,t,n){let a=Bi(e,"tensor","boolMask"),r=Bi(t,"mask","boolMask","bool"),i=null==n?0:n,s=r.rank,o=a.shape;Q(s>0,()=>"mask cannot be scalar"),ee(o.slice(i,i+s),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=i;m<i+s;m++)l*=o[m];let u=o.slice(0,i).concat([l],o.slice(i+s)),d=Yo(a,u),p=Yo(r,[-1]),h=await nh(p),c=Mp(h,[1]),f=wu(d,c,i);return e!==a&&a.dispose(),t!==r&&r.dispose(),c.dispose(),d.dispose(),p.dispose(),h.dispose(),f};var rh=Gi({transpose_:function(e,t,n){let a=Bi(e,"x","transpose");if(null==t&&(t=a.shape.map((e,t)=>t).reverse()),Q(a.rank===t.length,()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`),t.forEach(e=>{Q(e>=0&&e<a.rank,()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`)}),a.rank<=1)return a.clone();let r={x:a},i={perm:t};return"complex64"===a.dtype?rs(()=>{let e=rp(a),t=Su(a);return e=Ei.runKernel(er,{x:e},i),t=Ei.runKernel(er,{x:t},i),n&&(t=Uu(t)),Hi(e,t)}):Ei.runKernel(er,r,i)}});var ih=Gi({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=Bi(e,"v","movingAverage"),s=Bi(t,"x","movingAverage"),o=Bi(n,"decay","movingAverage");wi(i,s),Q(ie(i.shape,s.shape),()=>"Shape mismatch in v and x");let l=uu(1),u=ju(l,o),d=wo(ju(s,i),u);if(r){Q(null!=a,()=>"When using zeroDebias: true, step is required.");let e=Bi(a,"step","movingAverage");d=vo(d,ju(l,lu(o,e)))}return xo(i,d)}});var sh=Gi({scatterND_:function(e,t,n){Pe(n);let a=Bi(e,"indices","scatterND","int32"),r=Bi(t,"updates","scatterND");Hp(r,a,n);let i={indices:a,updates:r},s={shape:n};return Ei.runKernel(ba,i,s)}});var oh=Gi({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;Pe(n);let r=Bi(e,"sparseIndices","sparseToDense","int32"),i=Bi(t,"sparseValues","sparseToDense","string_or_numeric"),s=Bi(a,"defaultValue","sparseToDense",i.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(n.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${i}.`);let s=t.size;if(0!==t.rank&&(1!==t.rank||s!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,i,n,s);let o={sparseIndices:r,sparseValues:i,defaultValue:s},l={outputShape:n};return Ei.runKernel(Wa,o,l)}});var lh=Gi({gatherND_:function(e,t){let n=Bi(t,"indices","gatherND","int32"),a={params:Bi(e,"x","gatherND","string_or_numeric"),indices:n};return Ei.runKernel(on,a)}});var uh=Gi({dropout_:function(e,t,n,a){let r=Bi(e,"x","dropout");if(Q("float32"===r.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),Q(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof si?r.clone():r;let i=function(e,t){if(null==t)return e.shape.slice();if(ie(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),s=1-t,o=vo(vu(xo(tp(i,0,1,"float32",a),s)),s);return wo(r,o)}});function dh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function ph(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let i=0;i<e;++i){let s=2*Math.PI*i/(e+a-1);r[i]=t-n*Math.cos(s)}return Dp(r,"float32")}var hh=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=Bi(e,"predictions","inTopK"),r=Bi(t,"targets","inTopK");Q(a.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`),Q(a.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`),ee(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=a.shape[a.shape.length-1];Q(n>0&&n<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${n}`);let s=await a.data(),o=await r.data(),[l,u]=[s.length/i,i],d=me("bool",l);for(let p=0;p<l;p++){let e=p*u,t=s.subarray(e,e+u),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort((e,t)=>t.value-e.value),d[p]=0;for(let r=0;r<n;r++)if(a[r].index===o[p]){d[p]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),qi(d,r.shape,"bool")},ch={};b(ch,{conv2d:()=>xh,depthwiseConv2d:()=>wh,matMul:()=>kh});var fh=Gi({conv2DBackpropFilter_:function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",s=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Yo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Yo(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Q(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),Q(4===l.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),Q(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let u="NHWC"===i?o.shape[3]:o.shape[1],d="NHWC"===i?l.shape[3]:l.shape[1];Q(u===n[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`),Q(d===n[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${n[3]}).`),Zo("conv2dDerFilter",r,s);let p={x:o,dy:l},h={strides:a,pad:r,dataFormat:i,dimRoundingMode:s,filterShape:n};return Ei.runKernel(It,p,h)}});function mh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return wo(e,_p(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function gh(e,t){let n=t,a=Bl(e.shape,t.shape);return a.length>0&&(n=hu(n,a)),Yo(n,e.shape)}function yh(e,t,n,a){if("linear"===t)return e;if("relu"===t)return sp(e);if("elu"===t)return Kl(e);if("relu6"===t)return op(e);if("prelu"===t)return Cd(e,n);if("leakyrelu"===t)return Ru(e,a);if("sigmoid"===t)return nl(e);throw new Error(`Unknown fused activation ${t}.`)}var Ah=(e,t)=>!(e>0)||"linear"===t;var xh=Gi({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:p}=e;if(u=u||"linear",!1===Ah(Ei.state.gradientDepth,u)){Q("NHWC"===i,()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let e=kl(t,n,a,r,i,s,o);return null!=l&&(e=xo(e,l)),yh(e,u,d,p)}let h=Bi(t,"x","conv2d","float32"),c=Bi(n,"filter","conv2d","float32"),f=h,m=!1;3===h.rank&&(m=!0,f=Yo(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===f.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),Q(4===c.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${c.rank}.`),Zo("fused conv2d",r,o);let g="NHWC"===i?f.shape[3]:f.shape[1];Q(c.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${c.shape[2]}.`),Q(qo(a,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);let y,A,x=Lo(f.shape,c.shape,a,s,r,o);if(null!=l&&(y=Bi(l,"bias","fused conv2d"),[y]=vi(y,h),"NHWC"===i?Vl(x.outShape,y.shape):(Q(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),Q(0===y.shape.length||y.shape[0]===x.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${x.outChannels})`))),null!=d){let e=d.shape;if(Q(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)Q(1===e[0]||e[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`);else if(3===e.length)try{Vl(e,x.outShape)}catch(k){let t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`;throw Error(t)}A=Bi(d,"prelu weights","fused conv2d")}let b=(e,t)=>{Q("NHWC"===i,()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`);let[n,o,l,d]=t,p=mh(e,l,u);Q(jo(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let h=[Sl(o.shape,p,n,a,r),fh(o,p,n.shape,a,r)];if(null!=d){let e=gh(d,p);h.push(e)}return h},v={x:f,filter:c,bias:y,preluActivationWeights:A},w={strides:a,pad:r,dataFormat:i,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:p};return null==l?Bu((e,t,n)=>{let a=Ei.runKernel(dr,v,w);return n([t,e,a]),m&&(a=Yo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(f,c):Bu((e,t,n,a)=>{let r=Ei.runKernel(dr,v,w);return a([t,e,r,n]),m&&(r=Yo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}})(f,c,y)}});var bh=Gi({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,o=e;3===e.rank&&(o=Yo(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Yo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},d={strides:a,pad:r,dimRoundingMode:s,dilations:i,filterShape:n};return Ei.runKernel(Dt,u,d)}});var vh=Gi({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],s=arguments.length>6?arguments[6]:void 0,o=t,l=!1;3===t.rank&&(l=!0,o=Yo(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},d={strides:a,pad:r,dimRoundingMode:s,dilations:i,inputShape:e},p=Ei.runKernel(zt,u,d);return l?Yo(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var wh=Gi({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:i="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:p}=e;if(!1===Ah(Ei.state.gradientDepth,u)){let e=Ol(t,n,a,r,i,s,o);return null!=l&&(e=xo(e,l)),yh(e,u,d,p)}let h=Bi(t,"x","depthwiseConv2d","float32"),c=Bi(n,"filter","depthwiseConv2d","float32"),f=h,m=!1;3===h.rank&&(m=!0,f=Yo(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Q(4===f.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),Q(4===c.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`),Q(f.shape[3]===c.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),null==s&&(s=[1,1]),Q(qo(a,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`),Zo("fused depthwiseConv2d",r,o);let g,y,A=Lo(f.shape,c.shape,a,s,r,o,!0);null!=l&&(g=Bi(l,"bias","fused conv2d"),[g]=vi(g,h),Vl(A.outShape,g.shape)),null!=d&&(y=Bi(d,"prelu weights","fused depthwiseConv2d"));let x=(e,t)=>{Q(jo(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[n,i,l,d]=t,p=mh(e,l,u),h=vh(i.shape,p,n,a,r,s,o),c=bh(i,p,n.shape,a,r,s,o);if(null!=d){return[h,c,gh(g,p)]}return[h,c]},b={x:f,filter:c,bias:g,preluActivationWeights:y},v={strides:a,pad:r,dataFormat:i,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:p};return null==l?Bu((e,t,n)=>{let a=Ei.runKernel(pr,b,v);return n([t,e,a]),m&&(a=Yo(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(f,c):Bu((e,t,n,a)=>{let r=Ei.runKernel(pr,b,v);return a([t,e,r,n]),m&&(r=Yo(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}})(f,c,g)}});var kh=Gi({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:i,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:l=.2}=e;if(!1===Ah(Ei.state.gradientDepth,s)){let e=tl(t,n,a,r);return null!=i&&(e=xo(e,i)),yh(e,s,o,l)}let u=Bi(t,"a","fused matMul"),d=Bi(n,"b","fused matMul");[u,d]=vi(u,d);let p=a?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?d.shape[d.rank-1]:d.shape[d.rank-2],c=a?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?d.shape[d.rank-2]:d.shape[d.rank-1],m=u.shape.slice(0,-2),g=d.shape.slice(0,-2),y=ne(m),A=ne(g);Q(p===h,()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${a} and transposeB=${r} must match.`);let x,b,v=Vl(u.shape.slice(0,-2),d.shape.slice(0,-2)).concat([c,f]),w=Yo(u,a?[y,p,c]:[y,c,p]),k=Yo(d,r?[A,f,h]:[A,h,f]);null!=i&&(x=Bi(i,"bias","fused matMul"),[x]=vi(x,u),Vl(v,x.shape)),null!=o&&(b=Bi(o,"prelu weights","fused matMul"));let I=(e,t)=>{let n,o,[l,u,d,p]=t,h=mh(Yo(e,d.shape),d,s);if(a||r?!a&&r?(n=tl(h,u,!1,!1),o=tl(h,l,!0,!1)):a&&!r?(n=tl(u,h,!1,!0),o=tl(l,h,!1,!1)):(n=tl(u,h,!0,!0),o=tl(h,l,!0,!0)):(n=tl(h,u,!1,!0),o=tl(l,h,!0,!1)),null!=i){return[n,o,gh(p,h)]}return[n,o]},S={a:w,b:k,bias:x,preluActivationWeights:b},N={transposeA:a,transposeB:r,activation:s,leakyreluAlpha:l};return null==i?Bu((e,t,n)=>{let a=Ei.runKernel(ur,S,N);return n([e,t,a]),{value:Yo(a,v),gradFunc:I}})(w,k):Bu((e,t,n,a)=>{let r=Ei.runKernel(ur,S,N);return a([e,t,r,n]),{value:Yo(r,v),gradFunc:I}})(w,k,x)}});var Ih=Gi({hammingWindow_:function(e){return ph(e,.54,.46)}});var Sh=Gi({hannWindow_:function(e){return ph(e,.5,.5)}});var Nh=Gi({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=0,s=[];for(;i+t<=e.size;)s.push(al(e,i,t)),i+=n;if(a)for(;i<e.size;){let a=i+t-e.size,o=el([al(e,i,t-a),yl([a],r)]);s.push(o),i+=n}return 0===s.length?zp([],[0,t]):Yo(el(s),[s.length,t])}});var Ch=Gi({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Sh;null==a&&(a=dh(t));let i=Nh(e,t,n),s=wo(i,r(t));return Ep(s,a)}});var Th=Gi({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=Bi(e,"image","cropAndResize"),o=Bi(t,"boxes","cropAndResize","float32"),l=Bi(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Q(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),Q(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),Q(1===l.rank&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),Q(2===a.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`),Q(a[0]>=1&&a[1]>=1,()=>`cropSize must be atleast [1,1], but was ${a}`),Q("bilinear"===r||"nearest"===r,()=>`method must be bilinear or nearest, but was ${r}`);let d={image:s,boxes:o,boxInd:l},p={method:r,extrapolationValue:i,cropSize:a};return Ei.runKernel(Ft,d,p)}});var Rh=Gi({flipLeftRight_:function(e){let t=Bi(e,"image","flipLeftRight","float32");Q(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return Ei.runKernel(tn,n,{})}});var Eh=Gi({grayscaleToRGB_:function(e){let t=Bi(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];Q(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),Q(1===a,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,xu(t,r)}});var $h=Gi({rgbToGrayscale_:function(e){let t=Bi(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];Q(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),Q(3===a,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`);let r,i=t.dtype,s=go(t,"float32"),o=Dp([.2989,.587,.114]);switch(t.rank){case 2:r=Xl("ij,j->i",s,o);break;case 3:r=Xl("ijk,k->ij",s,o);break;case 4:r=Xl("ijkl,l->ijk",s,o);break;case 5:r=Xl("ijklm,m->ijkl",s,o);break;case 6:r=Xl("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return r=yu(r,-1),go(r,i)}});var Mh=Gi({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=Bi(e,"image","rotateWithOffset","float32");Q(4===r.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let i={image:r},s={radians:t,fillValue:n,center:a};return Ei.runKernel(lr,i,s)}});function Fh(e,t,n,a,r,i){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);let s=e.shape[0];return n=Math.min(n,s),Q(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),Q(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),Q(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),Q(1===t.rank,()=>"scores must be a 1D tensor"),Q(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),Q(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:i}}var _h=Gi({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=Bi(e,"boxes","nonMaxSuppression","float32"),s=Bi(t,"scores","nonMaxSuppression","float32"),o=Fh(i,s,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return Ei.runKernel(qn,{boxes:i,scores:s},l)}});function Ph(e,t,n){let a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,i=0,s=!1;for(;a<r;){i=a+(r-a>>>1);let o=n(t,e[i]);o>0?a=i+1:(r=i,s=!o)}return s?a:-a-1}(e,t,n||Oh)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Oh(e,t){return e>t?1:e<t?-1:0}function Dh(e,t,n,a,r){return Wh(e,t,n,a,r,0)}function zh(e,t,n,a,r,i){return Wh(e,t,n,a,r,0,!1,i,!0)}function Lh(e,t,n,a,r,i){return Wh(e,t,n,a,r,i,!0)}function Wh(e,t,n,a,r,i){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8],u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(Uh);let d=i>0?-.5/i:0,p=[],h=[];for(;p.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:s}=t;if(n<r)break;let o=!1;for(let l=p.length-1;l>=s;--l){let n=Bh(e,i,p[l]);if(n>=a){o=!0;break}if(t.score=t.score*Vh(a,d,n),t.score<=r)break}t.suppressBeginIndex=p.length,o||(t.score===n?(p.push(i),h.push(t.score)):t.score>r&&Ph(u,t,Uh))}let c=p.length,f=n-c;o&&f>0&&(p.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));let m={selectedIndices:p};return s&&(m.selectedScores=h),l&&(m.validOutputs=c),m}function Bh(e,t,n){let a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),i=Math.min(a[0],a[2]),s=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),d=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),c=(o-i)*(l-s),f=(p-u)*(h-d);if(c<=0||f<=0)return 0;let m=Math.max(i,u),g=Math.max(s,d),y=Math.min(o,p),A=Math.min(l,h),x=Math.max(y-m,0)*Math.max(A-g,0);return x/(c+f-x)}function Vh(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function Uh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var Gh=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=Bi(e,"boxes","nonMaxSuppressionAsync"),s=Bi(t,"scores","nonMaxSuppressionAsync"),o=Fh(i,s,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([i.data(),s.data()]),u=l[0],d=l[1],{selectedIndices:p}=Dh(u,d,n,a,r);return i!==e&&i.dispose(),s!==t&&s.dispose(),Dp(p,"int32")};var Hh=Gi({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=Bi(e,"boxes","nonMaxSuppression"),o=Bi(t,"scores","nonMaxSuppression"),l=Fh(s,o,n,a,r,i);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;let u={boxes:s,scores:o},d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:i},p=Ei.runKernel(Kn,u,d);return{selectedIndices:p[0],selectedScores:p[1]}}});var jh=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,s=Bi(e,"boxes","nonMaxSuppressionAsync"),o=Bi(t,"scores","nonMaxSuppressionAsync"),l=Fh(s,o,n,a,r,i);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;let u=await Promise.all([s.data(),o.data()]),d=u[0],p=u[1],{selectedIndices:h,selectedScores:c}=Lh(d,p,n,a,r,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:Dp(h,"int32"),selectedScores:Dp(c)}};var qh=Gi({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=Bi(e,"boxes","nonMaxSuppression"),o=Bi(t,"scores","nonMaxSuppression"),l=Fh(s,o,n,a,r,null),u={boxes:s,scores:o},d={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:i},p=Ei.runKernel(Xn,u,d);return{selectedIndices:p[0],validOutputs:p[1]}}});var Xh=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=Bi(e,"boxes","nonMaxSuppressionAsync"),o=Bi(t,"scores","nonMaxSuppressionAsync"),l=Fh(s,o,n,a,r,null),u=l.maxOutputSize,d=l.iouThreshold,p=l.scoreThreshold,[h,c]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=zh(h,c,u,d,p,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:Dp(f,"int32"),validOutputs:uu(m,"int32")}};var Kh=Gi({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Bi(e,"images","resizeBilinear");Q(3===r.rank||4===r.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),Q(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),Q(!1===a||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,s=!1;3===r.rank&&(s=!0,i=Yo(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:a,size:t},u=Ei.runKernel(fa,o,l);return s?Yo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Zh=Gi({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=Bi(e,"images","resizeNearestNeighbor");Q(3===r.rank||4===r.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),Q(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),Q("float32"===r.dtype||"int32"===r.dtype,()=>"`images` must have `int32` or `float32` as dtype"),Q(!1===a||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,s=!1;3===r.rank&&(s=!0,i=Yo(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:a,size:t},u=Ei.runKernel(ha,o,l);return s?Yo(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var Yh=Gi({threshold_:function(e){let t,n,a,r,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,l=Bi(e,"image","threshold"),u=l.shape[0]*l.shape[1],d=wo(Dp([o]),255);if(Q(3===l.rank,()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`),Q(3===l.shape[2]||1===l.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`),Q("int32"===l.dtype||"float32"===l.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`),Q("otsu"===i||"binary"===i,()=>`Method must be binary or otsu, but was ${i}`),3===l.shape[2]){[t,n,a]=Rp(l,[1,1,1],-1);let e=wo(t,.2989),i=wo(n,.587),s=wo(a,.114);r=xo(xo(e,i),s)}else r=e;if("otsu"===i){d=function(e,t){let n,a,r,i,s,o,l=Dp([-1]),u=Dp([0]),d=Dp([0]);for(let p=0;p<e.size-1;p++){n=al(e,0,p+1),a=al(e,p+1),s=vo(hu(n),t),o=vo(hu(a),t);let h=hu(wo(n,ap(0,n.size)));r=vo(h,hu(n));let c=yl(a.shape,n.size),f=xo(ap(0,a.size),c),m=wo(a,f);i=vo(hu(m),hu(a));let g=ju(r,i),y=ju(r,i),A=wo(s,o);d=wo(wo(A,g),y);let x=ku(d,u);u=Gl(x,d,u),l=Gl(x,Dp([p]),l)}return l}(hl(go(cp(r),"int32"),qi([]),256),u)}let p=s?$u(r,d):ku(r,d);return go(wo(p,255),"int32")}});var Jh=Gi({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5?arguments[5]:void 0,s=Bi(e,"image","transform","float32"),o=Bi(t,"transforms","transform","float32");Q(4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),Q(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),Q(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);let l={image:s,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:i};return Ei.runKernel(Qa,l,u)}});var Qh=Gi({bandPart_:function(e,t,n){let a=Bi(e,"a","bandPart");Q(a.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`);let r,i,s=a.shape,[o,l]=a.shape.slice(-2);"number"==typeof t?(Q(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),Q(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),r=Bi(t<0?o:t,"numLower","bandPart")):(Q("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),r=Gl(Eu(t,0),o,dd(t,o))),"number"==typeof n?(Q(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),Q(n<=l,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${l}).`),i=Bi(n<0?l:n,"numUpper","bandPart")):(Q("int32"===n.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),i=Gl(Eu(n,0),l,dd(n,l)));let u=Yo(ap(0,o,1,"int32"),[-1,1]),d=ap(0,l,1,"int32"),p=ju(u,d),h=Ku($u(p,r),Iu(p,Uu(i))),c=od([o,l],a.dtype);return Yo(Fp(Jp(Yo(a,[-1,o,l])).map(e=>Gl(h,e,c))),s)}});var ec=Gi({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Q(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let n=e[0].shape[0];for(let t=1;t<e.length;++t)Q(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Rp(e,e.shape[0],0).map(e=>Mp(e,[0]));Q(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],a=e;for(let r=0;r<e.length;++r)n.push(Ei.tidy(()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){let a=wo(hu(wo(n[t],e)),n[t]);e=ju(e,a)}return vo(e,fu(e,"euclidean"))}));return t?Fp(n,0):n}});function tc(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Ei.tidy(()=>{Q(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],a=e.shape[1],r=bu(n),i=yo(e),s=zp([[1]],[1,1]),o=yo(s),l=n>=a?a:n;for(let e=0;e<l;++e){let t=i,l=o,u=r;[o,i,r]=Ei.tidy(()=>{let t=al(i,[e,e],[n-e,1]),l=fu(t),u=al(i,[e,e],[1,1]),d=Gl(ku(u,0),zp([[-1]]),zp([[1]])),p=ju(u,wo(d,l)),h=vo(t,p);o=1===h.shape[0]?yo(s):el([s,al(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);let c=Uu(vo(tl(d,p),l)),f=al(i,[e,0],[n-e,a]),m=wo(c,o),g=rh(o);if(0===e)i=ju(f,tl(m,tl(g,f)));else{let t=ju(f,tl(m,tl(g,f)));i=el([al(i,[0,0],[e,a]),t],0)}let y=rh(m),A=al(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=ju(A,tl(tl(A,o),y));else{let t=ju(A,tl(tl(A,o),y));r=el([al(r,[0,0],[n,e]),t],1)}return[o,i,r]}),is([t,l,u])}return!t&&n>a&&(r=al(r,[0,0],[n,a]),i=al(i,[0,0],[a,a])),[r,i]})}var nc,ac=Gi({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Q(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return tc(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),a=Jp(Yo(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];return a.forEach(e=>{let[n,a]=tc(e,t);r.push(n),i.push(a)}),[Yo(Fp(r,0),e.shape),Yo(Fp(i,0),e.shape)]}}});!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(nc||(nc={}));var rc=Gi({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:nc.SUM_BY_NONZERO_WEIGHTS,a=Bi(e,"losses","computeWeightedLoss"),r=null;null!=t&&(r=Bi(t,"weights","computeWeightedLoss"));let i=null==r?a:wo(a,r);if(n===nc.NONE)return i;if(n===nc.SUM)return hu(i);if(n===nc.MEAN){if(null==r)return sd(i);{let e=a.size/r.size,t=vo(hu(i),hu(r));return e>1?vo(t,uu(e)):t}}if(n===nc.SUM_BY_NONZERO_WEIGHTS){if(null==r)return vo(hu(i),uu(a.size));{let e=wo(r,ld(a.shape)),t=go(hu(gd(e,uu(0))),"float32");return vo(hu(i),t)}}throw Error(`Unknown reduction: ${n}`)}});var ic=Gi({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:nc.SUM_BY_NONZERO_WEIGHTS,r=Bi(e,"labels","absoluteDifference"),i=Bi(t,"predictions","absoluteDifference"),s=null;null!=n&&(s=Bi(n,"weights","absoluteDifference")),ee(r.shape,i.shape,"Error in absoluteDifference: ");let o=ko(ju(r,i));return rc(o,s,a)}});var sc=Gi({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:nc.SUM_BY_NONZERO_WEIGHTS,i=Bi(e,"labels","cosineDistance"),s=Bi(t,"predictions","cosineDistance"),o=null;null!=a&&(o=Bi(a,"weights","cosineDistance")),ee(i.shape,s.shape,"Error in cosineDistance: ");let l=uu(1),u=ju(l,hu(wo(i,s),n,!0));return rc(u,o,r)}});var oc=Gi({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:nc.SUM_BY_NONZERO_WEIGHTS,r=Bi(e,"labels","hingeLoss"),i=Bi(t,"predictions","hingeLoss"),s=null;null!=n&&(s=Bi(n,"weights","hingeLoss")),ee(r.shape,i.shape,"Error in hingeLoss: ");let o=uu(1);r=ju(wo(uu(2),r),o);let l=sp(ju(o,wo(r,i)));return rc(l,s,a)}});var lc=Gi({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:nc.SUM_BY_NONZERO_WEIGHTS,i=Bi(e,"labels","huberLoss"),s=Bi(t,"predictions","huberLoss"),o=null;null!=n&&(o=Bi(n,"weights","huberLoss")),ee(i.shape,s.shape,"Error in huberLoss: ");let l=uu(a),u=ko(ju(s,i)),d=dd(u,l),p=ju(u,d),h=xo(wo(uu(.5),pu(d)),wo(l,p));return rc(h,o,r)}});var uc=Gi({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:nc.SUM_BY_NONZERO_WEIGHTS,i=Bi(e,"labels","logLoss"),s=Bi(t,"predictions","logLoss"),o=null;null!=n&&(o=Bi(n,"weights","logLoss")),ee(i.shape,s.shape,"Error in logLoss: ");let l=uu(1),u=uu(a),d=Uu(wo(i,_u(xo(s,u)))),p=wo(ju(l,i),_u(xo(ju(l,s),u))),h=ju(d,p);return rc(h,o,r)}});var dc=Gi({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:nc.SUM_BY_NONZERO_WEIGHTS,r=Bi(e,"labels","meanSquaredError"),i=Bi(t,"predictions","meanSquaredError"),s=null;null!=n&&(s=Bi(n,"weights","meanSquaredError")),ee(r.shape,i.shape,"Error in meanSquaredError: ");let o=$p(r,i);return rc(o,s,a)}});var pc=Gi({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:nc.SUM_BY_NONZERO_WEIGHTS,i=Bi(e,"multiClassLabels","sigmoidCrossEntropy"),s=Bi(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=Bi(n,"weights","sigmoidCrossEntropy")),ee(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),a>0){let e=uu(a),t=uu(1),n=uu(.5);i=xo(wo(i,ju(t,e)),wo(n,e))}let l=function(e,t){let n=Bi(e,"labels","sigmoidCrossEntropyWithLogits"),a=Bi(t,"logits","sigmoidCrossEntropyWithLogits");ee(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=sp(a),i=wo(a,n),s=Pu(gu(Uu(ko(a))));return xo(ju(r,i),s)}(i,s);return rc(l,o,r)}});var hc=Gi({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:nc.SUM_BY_NONZERO_WEIGHTS,i=Bi(e,"onehotLabels","softmaxCrossEntropy"),s=Bi(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=Bi(n,"weights","softmaxCrossEntropy")),ee(i.shape,s.shape,"Error in softmaxCrossEntropy: "),a>0){let e=uu(a),t=uu(1),n=uu(i.shape[1]);i=xo(wo(i,ju(t,e)),vo(e,n))}let l=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Bu((e,t,a)=>{let r=Xu(t,[n],!0),i=ju(go(t,"float32"),r);a([e,i]);let s=Uu(wo(i,e));return{value:hu(s,[n]),gradFunc:(e,t)=>{let[a,r]=t,i=tu(e.shape,[n]);return[wo(Yo(e,i),ju(go(a,"float32"),gu(r))),wo(Yo(e,i),ju(gu(r),go(a,"float32")))]}}})(e,t)}(i,s);return rc(l,o,r)}});var cc=Gi({sparseFillEmptyRows_:function(e,t,n,a){let r=Bi(e,"indices","sparseFillEmptyRows","int32"),i=Bi(t,"values","sparseFillEmptyRows"),s=Bi(n,"denseShape","sparseFillEmptyRows","int32"),o=Bi(a,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==s.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:r,values:i,denseShape:s,defaultValue:o},u=Ei.runKernel(Oa,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var fc=Gi({sparseReshape_:function(e,t,n){let a=Bi(e,"inputIndices","sparseReshape","int32"),r=Bi(t,"inputShape","sparseReshape","int32"),i=Bi(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s={inputIndices:a,inputShape:r,newShape:i},o=Ei.runKernel(Da,s);return{outputIndices:o[0],outputShape:o[1]}}});var mc=Gi({sparseSegmentMean_:function(e,t,n){let a=Bi(e,"data","sparseSegmentMean"),r=Bi(t,"indices","sparseSegmentMean","int32"),i=Bi(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);let s={data:a,indices:r,segmentIds:i};return Ei.runKernel(za,s)}});var gc=Gi({sparseSegmentSum_:function(e,t,n){let a=Bi(e,"data","sparseSegmentSum"),r=Bi(t,"indices","sparseSegmentSum","int32"),i=Bi(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);let s={data:a,indices:r,segmentIds:i};return Ei.runKernel(La,s)}});var yc=Gi({stringNGrams_:function(e,t,n,a,r,i,s,o){let l=Bi(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=Bi(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let d={separator:n,nGramWidths:a,leftPad:r,rightPad:i,padWidth:s,preserveShortSequences:o},p={data:l,dataSplits:u},h=Ei.runKernel(Ha,p,d);return{nGrams:h[0],nGramsSplits:h[1]}}});var Ac=Gi({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],a=Bi(e,"input","stringSplit","string"),r=Bi(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let i={skipEmpty:n},s={input:a,delimiter:r},o=Ei.runKernel(ja,s,i);return{indices:o[0],values:o[1],shape:o[2]}}});var xc=Gi({stringToHashBucketFast_:function(e,t){let n=Bi(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return Ei.runKernel(qa,r,a)}});var bc=Gi({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=Bi(e,"input","staticRegexReplace","string"),i={pattern:t,rewrite:n,replaceGlobal:a};return Ei.runKernel(Ua,{x:r},i)}}),vc={fft:Np,ifft:Cp,rfft:Ep,irfft:Tp},wc={hammingWindow:Ih,hannWindow:Sh,frame:Nh,stft:Ch},kc={flipLeftRight:Rh,grayscaleToRGB:Eh,resizeNearestNeighbor:Zh,resizeBilinear:Kh,rgbToGrayscale:$h,rotateWithOffset:Mh,cropAndResize:Th,nonMaxSuppression:_h,nonMaxSuppressionAsync:Gh,nonMaxSuppressionWithScore:Hh,nonMaxSuppressionWithScoreAsync:jh,nonMaxSuppressionPadded:qh,nonMaxSuppressionPaddedAsync:Xh,threshold:Yh,transform:Jh},Ic={bandPart:Qh,gramSchmidt:ec,qr:ac},Sc={absoluteDifference:ic,computeWeightedLoss:rc,cosineDistance:sc,hingeLoss:oc,huberLoss:lc,logLoss:uc,meanSquaredError:dc,sigmoidCrossEntropy:pc,softmaxCrossEntropy:hc},Nc={sparseFillEmptyRows:cc,sparseReshape:fc,sparseSegmentMean:mc,sparseSegmentSum:gc},Cc={stringNGrams:yc,stringSplit:Ac,stringToHashBucketFast:xc,staticRegexReplace:bc},Tc={};b(Tc,{Serializable:()=>$c,SerializationMap:()=>Mc,getRegisteredName:()=>_c,registerClass:()=>Fc});var Rc=new Map,Ec=new Map,$c=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Mc=class e{constructor(){this.classNameMap={}}static getMap(){return null==e.instance&&(e.instance=new e),e.instance}static register(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function Fc(e,t,n){Q(null!=e.className,()=>"Class being registered does not have the static className property defined."),Q("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),Q(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),"undefined"==typeof t&&(t="Custom"),"undefined"==typeof n&&(n=e.className);let a=t+">"+n;return Mc.register(e),Rc.set(a,e),Ec.set(e,a),e}function _c(e){return Ec.has(e)?Ec.get(e):e.className}var Pc=class extends $c{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0,{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:r[e.name]}));this.applyGradients(e)}else this.applyGradients(r);return is(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Wu(e,t)}dispose(){null!=this.iterations_&&is(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:uu(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Pc,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Oc=class extends Pc{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Ei.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=Ei.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:rs(()=>Hl(a).variable(r))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:rs(()=>Hl(a).variable(r))});let i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;let s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;rs(()=>{let e=xo(wo(s,this.rho),wo(pu(i),1-this.rho)),t=wo(vo(du(xo(o,this.epsilon)),du(xo(s,this.epsilon))),i),n=xo(wo(o,this.rho),wo(pu(t),1-this.rho));s.assign(e),o.assign(n);let r=xo(wo(t,-this.learningRate),a);a.assign(r)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(is(this.accumulatedGrads.map(e=>e.variable)),is(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},Dc=class extends Pc{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=Ei.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:rs(()=>yl(a.shape,this.initialAccumulatorValue).variable(!1))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let i=this.accumulatedGrads[n].variable;rs(()=>{let e=xo(i,pu(r));i.assign(e);let t=xo(wo(vo(r,du(xo(e,Ei.backend.epsilon()))),-this.learningRate),a);a.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&is(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},zc=class extends Pc{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],rs(()=>{this.accBeta1=uu(t).variable(),this.accBeta2=uu(n).variable()}),null==a&&(this.epsilon=Ei.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);rs(()=>{let n=ju(1,this.accBeta1),a=ju(1,this.accBeta2);t.forEach((t,r)=>{let i=Ei.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:rs(()=>Hl(i).variable(s))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:rs(()=>Hl(i).variable(s))});let o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,d=xo(wo(l,this.beta1),wo(o,1-this.beta1)),p=xo(wo(u,this.beta2),wo(pu(o),1-this.beta2)),h=vo(d,n),c=vo(p,a);l.assign(d),u.assign(p);let f=xo(wo(vo(h,xo(du(c),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(wo(this.accBeta1,this.beta1)),this.accBeta2.assign(wo(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&is(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&is(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),rs(()=>{this.accBeta1.assign(lu(this.beta1,this.iterations_+1)),this.accBeta2.assign(lu(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},Lc=class extends Pc{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],rs(()=>{this.iteration=uu(0).variable(),this.accBeta1=uu(t).variable()}),null==a&&(this.epsilon=Ei.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);rs(()=>{let n=ju(1,this.accBeta1),a=vo(-this.learningRate,xo(wo(this.iteration,this.decay),1));t.forEach((t,r)=>{let i=Ei.registeredVariables[t],s=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Hl(i).variable(s)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Hl(i).variable(s)});let o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;let l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,d=xo(wo(l,this.beta1),wo(o,1-this.beta1)),p=wo(u,this.beta2),h=ko(o),c=id(p,h);l.assign(d),u.assign(c);let f=xo(wo(vo(a,n),vo(d,xo(c,this.epsilon))),i);i.assign(f)}),this.iteration.assign(xo(this.iteration,1)),this.accBeta1.assign(wo(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&is(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&is(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Wc=class extends Pc{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let r=Ei.registeredVariables[t];rs(()=>{let e=xo(wo(this.c,a),r);r.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ss(uu(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},Bc=class extends Wc{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=uu(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=Ei.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:rs(()=>Hl(a).variable(!1))});let r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&rs(()=>{let e,t=xo(wo(this.m,r),i);e=this.useNesterov?xo(wo(this.c,xo(i,wo(t,this.m))),a):xo(wo(this.c,t),a),r.assign(t),a.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&is(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(false)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},Vc=class extends Pc{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=Ei.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{let a=Ei.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:rs(()=>Hl(a).variable(r))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:rs(()=>Hl(a).variable(r))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:rs(()=>Hl(a).variable(r))});let i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;let s=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;rs(()=>{let e=xo(wo(s,this.decay),wo(pu(i),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,r=xo(wo(t,this.decay),wo(i,1-this.decay)),l=vo(wo(i,this.learningRate),du(ju(e,xo(pu(r),this.epsilon)))),u=xo(wo(o,this.momentum),l);s.assign(e),t.assign(r),o.assign(u);let d=ju(a,u);a.assign(d)}else{let e=xo(wo(s,this.decay),wo(pu(i),1-this.decay)),t=xo(wo(o,this.momentum),vo(wo(i,this.learningRate),du(xo(e,this.epsilon))));s.assign(e),o.assign(t);let n=ju(a,t);a.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&is(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&is(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&is(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},Uc=[Oc,Dc,zc,Lc,Bc,Vc,Wc];var Gc={};b(Gc,{CompositeArrayBuffer:()=>Ki,browserFiles:()=>Xc,browserHTTPRequest:()=>af,concatenateArrayBuffers:()=>Cs,copyModel:()=>po,decodeWeights:()=>As,decodeWeightsStream:()=>ks,encodeWeights:()=>ys,fromMemory:()=>lf,fromMemorySync:()=>uf,getLoadHandlers:()=>zs,getModelArtifactsForJSON:()=>$s,getModelArtifactsForJSONSync:()=>Es,getModelArtifactsInfoForJSON:()=>Ms,getSaveHandlers:()=>Ds,getWeightSpecs:()=>Fs,http:()=>nf,isHTTPScheme:()=>ef,listModels:()=>lo,loadWeights:()=>Yc,moveModel:()=>ho,registerLoadRouter:()=>Os,registerSaveRouter:()=>Ps,removeModel:()=>uo,weightsLoaderFactory:()=>Jc,withSaveHandler:()=>df,withSaveHandlerSync:()=>pf});function Hc(e){return new Promise(e=>setTimeout(e)).then(e)}var jc=class e{constructor(t){if(!Ve().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),(null==t||0===t.length)&&(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=Ki.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=Rs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Hc(()=>r.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Hc(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Ms(e)}}}};jc.URL_SCHEME="downloads://";var qc=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=n=>{let a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});let i=$s(a,e=>this.loadWeights(e));e(i)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let i of e)t.push(...i.weights),n.push(...i.paths);let a=this.checkManifestAndWeightFiles(e),r=n.map(e=>this.loadWeightsFile(e,a[e]));return Promise.all(r).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((n,a)=>{let r=new FileReader;r.onload=e=>{let t=e.target.result;n(t)},r.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(e=>Ts(e.name)),a={};for(let r of e)r.paths.forEach(e=>{let r=Ts(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(r)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}};function Xc(e){return new qc(e)}function Kc(e,t,n,a){var r;Q(null!=(r=e)&&Array.isArray(r)&&r.length>0,()=>"promises must be a none empty array"),function(e,t){Q(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),Q(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),Q(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,a=null==a?1:a);let i=0;return Promise.all(e.map(r=>(r.then(r=>{let s=n+ ++i/e.length*(a-n);return t(s),r}),r)))}async function Zc(e,t){null==t&&(t={});let n=null==t.fetchFunc?Ve().platform.fetch:t.fetchFunc,a=e.map(e=>n(e,t.requestInit,{isBinary:!0})),r=(null==t.onProgress?await Promise.all(a):await Kc(a,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(r):await Kc(r,t.onProgress,.5,1)}async function Yc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return Jc(e=>Zc(e,{requestInit:a}))(e,t,n)}function Jc(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0,r=t.map(()=>!1),i={},s=null!=a?a.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=Xi[l]*ne(e.shape),d=()=>{r[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach((t,n)=>{t===e.name&&(d(),s[n]=!0)}):d(),o.push(e.name),n+=u})}),!s.every(e=>e)){let e=a.filter((e,t)=>!s[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce((e,t,n)=>(t&&e.push(n),e),[]),u=[];l.forEach(e=>{t[e].paths.forEach(e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)})});let d=await e(u),p={},h=0;return l.forEach(e=>{let n=t[e].paths.length,a=new Ki(d.slice(h,h+n));i[e].forEach(e=>{let t=As(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let n in t)p[n]=t[n]}),h+=n}),p}}_s.registerSaveRouter(e=>Ve().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(jc.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new jc(e)}(e.slice(jc.URL_SCHEME.length)):null);var Qc=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Q("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Ve().platform.fetch,Q(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&Q(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=Rs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let n=Ki.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ms(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}let n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();return $s(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=Fs(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;let a,r=null==t.fetchFunc?Ve().platform.fetch:t.fetchFunc,i=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var s;i<e.length;){a||(a=(await r(e[i],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:l}=await a.read();if(!o)return void n.enqueue(l);i++,a=void 0,null===(s=t.onProgress)||void 0===s||s.call(t,i/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,i=[],s=[];for(let o of e)for(let e of o.paths)null!=this.weightUrlConverter?s.push(this.weightUrlConverter(e)):i.push(r+e+a);return this.weightUrlConverter&&i.push(...await Promise.all(s)),i}async loadWeights(e){let t=await this.getWeightUrls(e);return[Fs(e),await Zc(t,this.loadOptions)]}};function ef(e){return null!=e.match(Qc.URL_SCHEME_REGEX)}Qc.URL_SCHEME_REGEX=/^https?:\/\//;var tf=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>ef(e)):ef(e),n)return nf(e,t)}return null};function nf(e,t){return new Qc(e,t)}function af(e,t){return nf(e,t)}_s.registerSaveRouter(tf),_s.registerLoadRouter(tf);var rf=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},sf=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},of=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function lf(e,t,n,a){return new of(uf(...arguments))}function uf(e,t,n,a){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new rf(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rf({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rf({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function df(e){return new sf(e)}function pf(e){return new sf(e)}var hf={};b(hf,{confusionMatrix:()=>ff});var cf,ff=Gi({confusionMatrix_:function(e,t,n){let a=Bi(e,"labels","confusionMatrix"),r=Bi(t,"predictions","confusionMatrix");Q(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),Q(1===a.rank,()=>`Expected the rank of labels to be 1, but got ${a.rank}`),Q(1===r.rank,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),Q(a.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),Q(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let i=yd(go(a,"int32"),n),s=yd(go(r,"int32"),n),o=rh(i),l=tl(o,s);return go(l,"int32")}}),mf={};b(mf,{draw:()=>wf,fromPixels:()=>kf,fromPixelsAsync:()=>xf,toPixels:()=>vf});var gf=!1;function yf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,i=!1,s=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)s=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=gr(or,Ei.backendName)){let n={pixels:e},a={numChannels:t};return Ei.runKernel(or,n,a)}let l,u,[d,p]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(s)l=e.getContext("2d").getImageData(0,0,d,p).data;else if(a||n)l=e.data;else if(i||r||o){if(null==cf)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");cf=new OffscreenCanvas(1,1).getContext("2d")}else cf=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});cf.canvas.width=d,cf.canvas.height=p,cf.drawImage(e,0,0,d,p),l=cf.getImageData(0,0,d,p).data}if(4===t)u=new Int32Array(l);else{let e=d*p;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return Lp(u,[p,d,t],"int32")}function Af(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function xf(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if(Ve().getBool("WRAP_TO_IMAGEBITMAP")&&Af(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return yf(n,t)}function bf(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function vf(e,t){let n=Bi(e,"img","toPixels");if(!(e instanceof si)){let e=n;n=go(e,"int32"),e.dispose()}bf(n);let[a,r]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2],s=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*a*4);for(let u=0;u<a*r;++u){let e=[0,0,0,255];for(let a=0;a<i;a++){let t=s[u*i+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===i?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[a]=t*o}let t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){gf||null!=gr(Ut,Ei.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),gf=!0),t.width=r,t.height=a;let e=t.getContext("2d"),n=new ImageData(l,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function wf(e,t,n){let a=Bi(e,"img","draw");if(!(e instanceof si)){let e=a;a=go(e,"int32"),e.dispose()}bf(a),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==n?void 0:n.imageOptions);let r={image:a},i={canvas:t,options:n};Ei.runKernel(Ut,r,i)}var kf=Gi({fromPixels_:yf}),If={};function Sf(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===ne(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,i=r[r.length-1],s=1;for(let p=0;p<r.length-1;++p)s*=r[p];let o=e.shape,l=r.slice();l.pop();let u=1;for(let p=i;p<n;++p)u*=o[p],l.push(o[p]);let d=[...Te(e.shape).map(e=>e/u),1].slice(0,i);return[l,s,u,d]}b(If,{prepareAndValidate:()=>Sf});var Nf={};b(Nf,{assertParamsValid:()=>Rf,computeFlatOffset:()=>Vf,computeOutShape:()=>$f,getNormalizedAxes:()=>Pf,isSliceContinous:()=>Bf,maskToAxes:()=>Ef,parseSliceParams:()=>Uf,sliceInfo:()=>Gf,startForAxis:()=>Lf,startIndicesWithElidedDims:()=>Of,stopForAxis:()=>Wf,stopIndicesWithElidedDims:()=>Df,stridesForAxis:()=>zf,stridesWithElidedDims:()=>Mf});var Cf=-2,Tf=-1;function Rf(e,t,n){let a=e.shape.length;Q(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),Q(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let r=0;r<a;++r)Q(t[r]+n[r]<=e.shape[r],()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function Ef(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function $f(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Mf(e,t,n,a){let r=[...e];for(let i=r.length;i<a.length;i++)r.push(1);for(let i=0;i<n;i++)0===i?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Ff(e,t,n){return n<=e?n:n-(t-1)}function _f(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Pf(e,t,n,a,r,i,s,o,l){let u=e.length,d=new Array(u),p=new Array(u),h=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;d=Of(s,l,u,a,e),p=Df(o,l,u,r,e),h=Mf(i,l,u,e)}else for(let c=0;c<u;c++)d[c]=Lf(s,a,i,e,c,l),p[c]=Wf(o,r,i,e,c,l),h[c]=zf(i,c,l);return{begin:d,end:p,strides:h}}function Of(e,t,n,a,r){let i=[...r],s=_f(n,t);for(let o=0;o<i.length;o++)if(s.indexOf(o)>-1)i[o]=0;else{let r=Ff(t,n,o),s=a[r];e&1<<r&&(s=0),i[o]=s}return i}function Df(e,t,n,a,r){let i=[...r],s=_f(n,t);for(let o=0;o<i.length;o++)if(s.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{let r=Ff(t,n,o),s=a[r];e&1<<r&&(s=Number.MAX_SAFE_INTEGER),i[o]=s}for(let o=0;o<i.length;o++){let e=r[o];i[o]<0&&(i[o]+=e),i[o]=q(0,i[o],r[o])}return i}function zf(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function Lf(e,t,n,a,r,i){let s=t[r],o=n[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=a[r];return s<0&&(s+=l),s=q(0,s,l-1),s}function Wf(e,t,n,a,r,i){let s=t[r],o=n[r]||1;(e&1<<r||i&1<<r||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=a[r];return s<0&&(s+=l),s=o>0?q(0,s,l):q(-1,s,l-1),s}function Bf(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Vf(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Uf(e,t,n){let a,r,i=e.shape.length;return a="number"==typeof t?[t,...new Array(i-1).fill(0)]:t.length<i?t.concat(new Array(i-t.length).fill(0)):t.slice(),a.forEach(e=>{Q(-1!==e,()=>"slice() does not support negative begin indexing.")}),r=null==n?new Array(i).fill(-1):"number"==typeof n?[n,...new Array(i-1).fill(-1)]:n.length<i?n.concat(new Array(i-n.length).fill(-1)):n,r=r.map((t,n)=>t>=0?t:(Q(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,r]}function Gf(e,t,n,a,r,i,s,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=s&&0!==(s&s-1))throw new Error("Multiple ellipses in slice is not allowed.");let d=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:l};for(let A=0;A<p.dims;A++)d&&0!==(1<<A&o)&&p.numAddAxisAfterEllipsis++,1<<A&s&&(d=!0);d||(p.ellipsisMask|=1<<p.dims,p.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(Cf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(Tf),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(p,h);let c=!0,f=!0,m=!0,g=[],y=[];for(let A=0;A<e.length;++A){if(0===h.strides[A])throw Error(`strides[${A}] must be non-zero`);let t=!!(h.shrinkAxisMask&1<<A),n=e[A];if(-1===n){g.push(t?1:-1);continue}let a=[h.beginMask&1<<A,h.endMask&1<<A],r=[h.strides[A]>0?0:-1,h.strides[A]>0?n:n-1];if(t&&h.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[A];let i=!!(h.beginMask&1<<A&&h.endMask&1<<A);if(h.beginValid&&h.endValid){if(t){let e=h.begin[A]<0?n+h.begin[A]:h.begin[A];if(h.begin[A]=e,h.end[A]=h.begin[A]+1,e<0||e>=n)throw Error(`slice index ${h.begin[A]} of dimension ${A} out of bounds.`)}else h.begin[A]=Hf(h.begin[A],0,h.strides[A],n,a,r),h.end[A]=Hf(h.end[A],1,h.strides[A],n,a,r);let e=1===h.strides[A]&&0===h.begin[A]&&h.end[A]===n;c=c&&e,f=f&&(0===A&&1===h.strides[A]||e)}else c=c&&1===h.strides[A]&&i,f=f&&(0===A&&1===h.strides[A]||i);let s,o=!1;if(h.beginValid&&h.endValid?(s=h.end[A]-h.begin[A],o=!0):t?(s=1,o=!0):i&&n>=0&&(s=h.strides[A]<0?-n:n,o=!0),o){let e;e=0===s||s<0!=h.strides[A]<0?0:Math.trunc(s/h.strides[A])+(s%h.strides[A]!==0?1:0),g.push(e)}else g.push(-1)}for(let A=0;A<h.finalShapeGatherIndices.length;++A){let e=h.finalShapeGatherIndices[A];e>=0?y.push(g[e]):e===Cf&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>h.finalShapeGatherIndices[t]!==Cf),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function Hf(e,t,n,a,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{let t=e<0?a+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}var jf="4.22.0",qf=class{static sgd(e){return new Wc(e)}static momentum(e,t){return new Bc(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new Vc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new zc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Oc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Lc(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Dc(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}},Xf=qf,Kf="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Zf(){return new Promise(e=>Kf(()=>e()))}var Yf,Jf={};function Qf(e,t){let n=e[0].length;e.forEach((e,t)=>{Q(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),Q(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let a=e[0];e.forEach((e,r)=>{for(let i=0;i<n;i++)Q(i===t||e[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`)})}function em(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}function tm(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){let i=n[r],s=a[a.length-n.length+r],o=a[s];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${o}`)}else a[s]=i}return a}function nm(e){let t={FIRST_DIM_SIZE:Yf.FIRST_DIM_SIZE,VALUE_ROWIDS:Yf.VALUE_ROWIDS,ROW_LENGTHS:Yf.ROW_LENGTHS,ROW_SPLITS:Yf.ROW_SPLITS,ROW_LIMITS:Yf.ROW_LIMITS,ROW_STARTS:Yf.ROW_STARTS},n=[];for(let a of e){if(!(a in t))break;n.push(t[a])}return n}function am(e){return 0===e.length?0:e[0]===Yf.FIRST_DIM_SIZE?e.length-1:e.length}function rm(e,t){if(null==e||null==t)return;let n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){let n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}b(Jf,{ERF_A1:()=>gm,ERF_A2:()=>ym,ERF_A3:()=>Am,ERF_A4:()=>xm,ERF_A5:()=>bm,ERF_P:()=>mm,PARALLELIZE_THRESHOLD:()=>im,RowPartitionType:()=>Yf,SELU_SCALE:()=>fm,SELU_SCALEALPHA:()=>cm,applyActivation:()=>yh,assertAndGetBroadcastShape:()=>Vl,assertAxesAreInnerMostDims:()=>nu,assertParamsConsistent:()=>Qf,assignToTypedArray:()=>Nm,axesAreInnerMostDims:()=>Jl,calculateShapes:()=>jp,checkEinsumDimSizes:()=>Pm,checkPadOnDimRoundingMode:()=>Zo,combineLocations:()=>Ql,combineRaggedTensorToTensorShapes:()=>tm,complexWithEvenIndex:()=>km,complexWithOddIndex:()=>Im,computeConv2DInfo:()=>Lo,computeConv3DInfo:()=>Wo,computeDefaultPad:()=>Bo,computeDilation2DInfo:()=>Oo,computeOptimalWindowSize:()=>sm,computeOutAndReduceShapes:()=>eu,computeOutShape:()=>em,computePool2DInfo:()=>Do,computePool3DInfo:()=>zo,convertConv2DDataFormat:()=>Ko,decodeEinsumEquation:()=>Fm,eitherStridesOrDilationsAreOne:()=>qo,expandShapeToKeepDim:()=>tu,exponent:()=>Tm,exponents:()=>Cm,fromStringArrayToUint8:()=>ag,fromUint8ToStringArray:()=>ng,getAxesPermutation:()=>au,getBroadcastDims:()=>Wl,getComplexWithIndex:()=>Sm,getEinsumComputePath:()=>Om,getEinsumPermutation:()=>_m,getFusedBiasGradient:()=>gh,getFusedDyActivation:()=>mh,getImageCenter:()=>om,getInnerMostAxes:()=>iu,getPermuted:()=>um,getRaggedRank:()=>am,getReductionAxes:()=>Bl,getReshaped:()=>lm,getReshapedPermuted:()=>dm,getRowPartitionTypesHelper:()=>nm,getSliceBeginCoords:()=>pm,getSliceSize:()=>hm,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Wm,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Bm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Vm,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Hm,getSparseReshapeInputOutputMismatchErrorMessage:()=>qm,getSparseReshapeInputOutputMultipleErrorMessage:()=>jm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Um,getSparseReshapeNegativeOutputDimErrorMessage:()=>Gm,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Ym,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Xm,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Km,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Zm,getUndoAxesPermutation:()=>ru,isIdentityPermutation:()=>Dm,log:()=>cr,mergeRealAndImagArrays:()=>vm,prepareAndValidate:()=>Sf,prepareSplitSize:()=>Lm,segment_util:()=>Jm,shouldFuse:()=>Ah,slice_util:()=>Nf,splitRealAndImagArrays:()=>wm,stridesOrDilationsArePositive:()=>Xo,tupleValuesAreOne:()=>jo,upcastType:()=>yi,validateDefaultValueShape:()=>rm,validateInput:()=>Hp,validateUpdateShape:()=>Gp,warn:()=>hr}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Yf||(Yf={}));var im=30;function sm(e){return e<=im?e:Ce(e,Math.floor(Math.sqrt(e)))}function om(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function lm(e,t,n){let a=[];if(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function um(e,t){let n=[];if(!(arguments.length>2&&void 0!==arguments[2])||arguments[2]){n.push(t);for(let a=t+1;a<e;++a)a<=2*t?(n.push(a),n.push(a-(t+1))):n.push(a)}else{let a=[],r=[];for(let n=1;n<e;++n)n>=2*t+1||n%2===1?r.push(n):a.push(n);n.push(...a),n.push(0),n.push(...r)}return n}function dm(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?a?r.push(t[i-1]*e[i]):r.push(e[i]/t[i-1]):r.push(e[i]);return r}function pm(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function hm(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var cm=1.7580993408473768,fm=1.0507009873554805,mm=.3275911,gm=.254829592,ym=-.284496736,Am=1.421413741,xm=-1.453152027,bm=1.061405429;function vm(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function wm(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function km(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Im(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Sm(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Nm(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Cm(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),a[r]=Math.sin(i)}return{real:n,imag:a}}function Tm(e,t,n){let a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}var Rm="->",Em=/->/g,$m=",",Mm="...";function Fm(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(Em,"").length)/Rm.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Rm}").`);let[a,r]=e.split(Rm);Q(-1===a.indexOf(Mm),()=>`The ellipsis notation ("${Mm}") is not supported yet.`);let i=a.split($m),s=i.length;if(t!==s)throw new Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let p=0;p<r.length;++p){let e=r[p];if(!i.some(t=>-1!==t.indexOf(e)))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let p=0;p<a.length;++p){let e=a[p];-1===o.indexOf(e)&&e!==$m&&o.push(e)}let l=new Array(i.length);for(let p=0;p<s;++p){if(new Set(i[p].split("")).size!==i[p].length)throw new Error(`Found duplicate axes in input component ${i[p]}. Support for duplicate axes in input is not implemented yet.`);l[p]=[];for(let e=0;e<i[p].length;++e)l[p].push(o.indexOf(i[p][e]))}let u=o.length,d=[];for(let p=r.length;p<u;++p)d.push(p);return{allDims:o,summedDims:d,idDims:l}}function _m(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:a}}function Pm(e,t,n){let a=new Array(e);for(let r=0;r<n.length;++r){let e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:Q(a[t[r][n]]===e[n],()=>`Expected dimension ${a[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`)}}function Om(e,t){let n=e,a=[],r=0;0===e.length&&n.push(-1),r=e.length+1;for(let s=0;s<r;++s)a.push([]);let i=[];for(let s=0;s<n.length;++s){let e=zm(t,n[s]);for(let t of e)-1===i.indexOf(t)&&(a[s].push(t),i.push(t))}return{path:n,steps:a}}function Dm(e){return e.every((e,t)=>e===t)}function zm(e,t){let n=[];for(let a=0;a<e.length;++a)(0===e[a].length||-1!==e[a].indexOf(t)||-1===t)&&n.push(a);return n}function Lm(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"==typeof t)Q(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),a=new Array(t).fill(e.shape[n]/t);else{Q(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");let r=t.indexOf(-1);if(-1!==r){let a=t.reduce((e,t)=>t>0?e+t:e);t[r]=e.shape[n]-a}Q(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}function Wm(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Bm(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Vm(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Um(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Gm(e,t){return`size ${e} must be non-negative, not ${t}`}function Hm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function jm(e,t){return`Input to reshape is a SparseTensor with ${ne(e)}\n  dense values, but the requested shape requires a multiple of ${ne(t)}. inputShape=${e} outputShape= ${t}`}function qm(e,t){return`Input to reshape is a tensor with ${ne(e)} dense values, but the requested shape has ${ne(t)}. inputShape=${e} outputShape=${t}`}function Xm(){return"segment ids must be >= 0"}function Km(){return"segment ids are not increasing"}function Zm(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Ym(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Jm={};function Qm(e,t){let n,a=!1;for(e<=im?(n=e,a=!0):n=Ce(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=Ce(e,n+1);return n}function eg(e,t,n){let a=[],r=e.length;for(let i=0;i<r;i++)i!==t?a.push(e[i]):a.push(n);return a}function tg(e,t,n,a){let r=t.shape.length,i=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>i)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${i}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let p=0;p<a;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let s=e.shape[n],o=[],l=1,u=1,d=1;for(let p=0;p<a;++p)o.push(e.shape[p]),l*=e.shape[p];for(let p=a;p<n;p++)o.push(e.shape[p]),u*=e.shape[p];for(let p=a;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<i;p++)o.push(e.shape[p]),d*=e.shape[p];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:s,outputShape:o}}function ng(e){try{return e.map(e=>jr(e))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function ag(e){return e.map(e=>Hr(e))}b(Jm,{collectGatherOpShapeInfo:()=>tg,computeOutShape:()=>eg,segOpComputeOptimalWindowSize:()=>Qm});var rg,ig,sg={};b(sg,{nonMaxSuppressionV3Impl:()=>Dh,nonMaxSuppressionV4Impl:()=>zh,nonMaxSuppressionV5Impl:()=>Lh,whereImpl:()=>th}),function(){for(let e of Uc)Fc(e)}(),Ve().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(rg||(rg={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(ig||(ig={}));var og={};function lg(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};og[e]=n}function ug(e){return og[e]}function dg(e){delete og[e]}function pg(e,t,n,a,r){let i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){let e=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===i.type)return hg(t.inputNames[o],n,a,r);if("tensors"===i.type){let i=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter((e,t)=>{var n;return"NoOp"!==(null===(n=i[t])||void 0===n?void 0:n.op)}).map(e=>hg(e,n,a,r))}let l=hg(t.inputNames[o],n,a,r),u=l.dataSync();return"number"===i.type?u[0]:Sr.toNestedArray(l.shape,u)}let s=t.attrParams[e];return s&&s.value}function hg(e,t,n,a){let[r,i]=gg(e,n);if(null!=a){let e=a.getHashTableHandleByName(r);if(null!=e)return e}let s=n.currentContextIds.find(e=>!!t[mg(r,e)]);return void 0!==s?t[mg(r,s)][i]:void 0}function cg(e,t,n){return t[mg(e,n.currentContextId)]}function fg(e,t){let[n,a,r]=gg(e,t);return[mg(n,t&&t.currentContextId),a,r]}function mg(e,t){return t?`${e}-${t}`:e}function gg(e,t){if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let n=t.parseNodeNameCache.get(e);if(null!=n)return n}let a,r=e.split(":");if(1===r.length)a=[e,0,void 0];else{let e=r[0],t=3===r.length?r[1]:void 0;a=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,a),a}function yg(e,t,n){let a=pg("pad",e,t,n);if("explicit"===a){a=pg("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function Ag(e){return e.kept?e:yo(e)}var xg={};b(xg,{json:()=>bg});var bg=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vg={};b(vg,{json:()=>wg});var wg=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],kg={};b(kg,{json:()=>Ig});var Ig=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Sg={};b(Sg,{json:()=>Ng});var Ng=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Cg={};b(Cg,{json:()=>Tg});var Tg=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Rg={};b(Rg,{json:()=>Eg});var Eg=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$g={};b($g,{json:()=>Mg});var Mg=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Fg={};b(Fg,{json:()=>_g});var _g=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Pg={};b(Pg,{json:()=>Og});var Og=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Dg={};b(Dg,{json:()=>zg});var zg=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Lg={};b(Lg,{json:()=>Wg});var Wg=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Bg={};b(Bg,{json:()=>Vg});var Vg=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Ug={};b(Ug,{json:()=>Gg});var Gg=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Hg={};b(Hg,{json:()=>jg});var jg=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],qg={};b(qg,{json:()=>Xg});var Xg=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Kg={};b(Kg,{json:()=>Zg});var Zg=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Yg={};b(Yg,{json:()=>Jg});var Jg=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Qg={};b(Qg,{json:()=>ey});var ey=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ty={};b(ty,{json:()=>ny});var ny=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],ay=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[xg,vg,kg,Sg,Cg,Rg,$g,Fg,Pg,Dg,Lg,Bg,Ug,Hg,qg,Kg,Yg,Qg,ty].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.node,a=[],r=[],i=[],s=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):(null==t.input||0===t.input.length)&&i.push(e[t.name]),e),{}),o=[],l=[],u={},d={};null!=t&&(u=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let p=Object.keys(s);p.forEach(e=>{let t=s[e];t.inputNames.forEach((e,n)=>{let[a,,r]=fg(e),i=s[a];if(null!=i.outputs){let e=i.outputs.indexOf(r);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(d).length?p.forEach(e=>{let t=s[e];0===t.children.length&&l.push(t)}):Object.keys(d).forEach(e=>{let[t]=fg(e),n=s[t];null!=n&&(n.signatureKey=d[e],l.push(n))}),Object.keys(u).length>0?Object.keys(u).forEach(e=>{let[t]=fg(e),n=s[t];n&&(n.signatureKey=u[e],o.push(n))}):o=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:s,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:h};return i.length>0&&(c.initNodes=i),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=ug(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{let a,r=n.type;switch(n.type){case"string":a=iy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=iy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=my(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=my(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=oy(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=oy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=fy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=sy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=sy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=yy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=yy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=cy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=cy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=gy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=dy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=dy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=py(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=py(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=uy(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=uy(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){let t=e.nodeDef,n=[],a={};null!=t&&(a=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));let r=[],i=[];e.signature.inputArg.forEach(e=>{let[t]=fg(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ly(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}),Object.keys(a).forEach(e=>{let t=a[e];t.inputNames.forEach((e,n)=>{let[r,,i]=fg(e),s=a[r];if(null!=s.outputs){let e=s.outputs.indexOf(i);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})});let s=e.ret;e.signature.outputArg.forEach(e=>{let[t,n]=fg(s[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,i.push(r))});let o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:i,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function ry(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=Ve().global;if("undefined"!=typeof t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function iy(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=e[t];return null!=r?ry(r.s,a):n}function sy(e,t,n){let a=e[t];return a?a.b:n}function oy(e,t,n){let a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"==typeof r?r:parseInt(r,10)}function ly(e){switch("string"==typeof e&&(e=rg[e]),e){case rg.DT_FLOAT:case rg.DT_HALF:return"float32";case rg.DT_INT32:case rg.DT_INT64:case rg.DT_INT8:case rg.DT_UINT8:return"int32";case rg.DT_BOOL:return"bool";case rg.DT_DOUBLE:return"float32";case rg.DT_STRING:return"string";case rg.DT_COMPLEX64:case rg.DT_COMPLEX128:return"complex64";default:return null}}function uy(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function dy(e,t,n){let a=e[t];return a&&a.type?ly(a.type):n}function py(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map(e=>ly(e)):n}function hy(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function cy(e,t,n){let a=e[t];return a&&a.shape?hy(a.shape):n}function fy(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function my(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=e[t];return r&&r.list&&r.list.s?r.list.s.map(e=>ry(e,a)):n}function gy(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map(e=>hy(e)):n}function yy(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var Ay=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return hg(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return hg(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return oy(this.node.rawAttrs,e,t);if(null!=n.s)return iy(this.node.rawAttrs,e,t);if(null!=n.b)return sy(this.node.rawAttrs,e,t);if(null!=n.shape)return cy(this.node.rawAttrs,e,t);if(null!=n.type)return dy(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fy(this.node.rawAttrs,e,t);if(null!=n.list.s)return my(this.node.rawAttrs,e,t);if(null!=n.list.shape)return gy(this.node.rawAttrs,e,t);if(null!=n.list.b)return yy(this.node.rawAttrs,e,t);if(null!=n.list.type)return py(this.node.rawAttrs,e,t)}return t}},xy={};b(xy,{OP_SCOPE_SUFFIX:()=>Ui,abs:()=>ko,acos:()=>Io,acosh:()=>So,add:()=>xo,addN:()=>No,all:()=>Co,any:()=>To,argMax:()=>Ro,argMin:()=>Eo,asin:()=>$o,asinh:()=>Mo,atan:()=>Fo,atan2:()=>_o,atanh:()=>Po,avgPool:()=>Jo,avgPool3d:()=>Qo,basicLSTMCell:()=>il,batchNorm:()=>ll,batchNorm2d:()=>ul,batchNorm3d:()=>dl,batchNorm4d:()=>pl,batchToSpaceND:()=>sl,bincount:()=>hl,bitwiseAnd:()=>cl,booleanMaskAsync:()=>ah,broadcastArgs:()=>fl,broadcastTo:()=>ml,buffer:()=>mo,cast:()=>go,ceil:()=>gl,clipByValue:()=>Al,clone:()=>yo,complex:()=>Hi,concat:()=>el,concat1d:()=>xl,concat2d:()=>bl,concat3d:()=>vl,concat4d:()=>wl,conv1d:()=>Il,conv2d:()=>kl,conv2dTranspose:()=>Nl,conv3d:()=>Cl,conv3dTranspose:()=>Rl,cos:()=>El,cosh:()=>$l,cosineWindow:()=>ph,cumprod:()=>Ml,cumsum:()=>Fl,denseBincount:()=>_l,depthToSpace:()=>Pl,depthwiseConv2d:()=>Ol,diag:()=>Dl,dilation2d:()=>zl,div:()=>vo,divNoNan:()=>jl,dot:()=>ql,dropout:()=>uh,einsum:()=>Xl,elu:()=>Kl,enclosingPowerOfTwo:()=>dh,ensureShape:()=>Zl,equal:()=>Ul,erf:()=>Yl,euclideanNorm:()=>mu,exp:()=>gu,expandDims:()=>yu,expm1:()=>Au,eye:()=>bu,fft:()=>Np,fill:()=>yl,floor:()=>vu,floorDiv:()=>bo,fused:()=>ch,gather:()=>wu,gatherND:()=>lh,greater:()=>ku,greaterEqual:()=>Iu,ifft:()=>Cp,imag:()=>Su,image:()=>kc,inTopKAsync:()=>hh,irfft:()=>Tp,isFinite:()=>Nu,isInf:()=>Cu,isNaN:()=>Tu,leakyRelu:()=>Ru,less:()=>Eu,lessEqual:()=>$u,linalg:()=>Ic,linspace:()=>Mu,localResponseNormalization:()=>Fu,log:()=>_u,log1p:()=>Pu,logSigmoid:()=>Hu,logSoftmax:()=>qu,logSumExp:()=>Xu,logicalAnd:()=>Ku,logicalNot:()=>Zu,logicalOr:()=>Yu,logicalXor:()=>Ju,losses:()=>Sc,lowerBound:()=>td,matMul:()=>tl,max:()=>su,maxPool:()=>nd,maxPool3d:()=>ad,maxPoolWithArgmax:()=>rd,maximum:()=>id,mean:()=>sd,meshgrid:()=>ud,min:()=>ou,minimum:()=>dd,mirrorPad:()=>pd,mod:()=>hd,moments:()=>cd,movingAverage:()=>ih,mul:()=>wo,multiRNNCell:()=>fd,multinomial:()=>md,neg:()=>Uu,norm:()=>fu,notEqual:()=>gd,oneHot:()=>yd,ones:()=>ld,onesLike:()=>Ad,op:()=>Gi,outerProduct:()=>xd,pad:()=>bd,pad1d:()=>vd,pad2d:()=>wd,pad3d:()=>kd,pad4d:()=>Id,pool:()=>Nd,pow:()=>lu,prelu:()=>Cd,print:()=>Ao,prod:()=>Td,raggedGather:()=>Rd,raggedRange:()=>Ed,raggedTensorToTensor:()=>$d,rand:()=>Md,randomGamma:()=>Jd,randomNormal:()=>Qd,randomStandardNormal:()=>ep,randomUniform:()=>tp,randomUniformInt:()=>np,range:()=>ap,real:()=>rp,reciprocal:()=>ip,relu:()=>sp,relu6:()=>op,reshape:()=>Yo,reverse:()=>lp,reverse1d:()=>up,reverse2d:()=>dp,reverse3d:()=>pp,reverse4d:()=>hp,rfft:()=>Ep,round:()=>cp,rsqrt:()=>fp,scalar:()=>uu,scatterND:()=>sh,searchSorted:()=>ed,selu:()=>mp,separableConv2d:()=>gp,setdiff1dAsync:()=>yp,sigmoid:()=>nl,sign:()=>Ap,signal:()=>wc,sin:()=>xp,sinh:()=>bp,slice:()=>al,slice1d:()=>vp,slice2d:()=>wp,slice3d:()=>kp,slice4d:()=>Ip,softmax:()=>Sp,softplus:()=>Gu,spaceToBatchND:()=>Sd,sparse:()=>Nc,sparseToDense:()=>oh,spectral:()=>vc,split:()=>Rp,sqrt:()=>du,square:()=>pu,squaredDifference:()=>$p,squeeze:()=>Mp,stack:()=>Fp,step:()=>_p,stridedSlice:()=>Pp,string:()=>Cc,sub:()=>ju,sum:()=>hu,tan:()=>Op,tanh:()=>rl,tensor:()=>qi,tensor1d:()=>Dp,tensor2d:()=>zp,tensor3d:()=>Lp,tensor4d:()=>Wp,tensor5d:()=>Bp,tensor6d:()=>Vp,tensorScatterUpdate:()=>qp,tile:()=>xu,topk:()=>Xp,transpose:()=>rh,truncatedNormal:()=>Kp,unique:()=>Zp,unsortedSegmentSum:()=>Yp,unstack:()=>Jp,upperBound:()=>Qp,variable:()=>eh,where:()=>Gl,whereAsync:()=>nh,zeros:()=>od,zerosLike:()=>Hl});function by(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!=typeof e&&"number"!=typeof t){Sr.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){let r=e[a],i=t[a];Sr.assert(r<0||i<0||r===i,()=>n+` Shapes ${e} and ${t} must match`)}}}function vy(e){return!("number"==typeof e||e.some(e=>e<0))}function wy(e,t,n){let a=ky(e,n),r=!vy(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach(e=>{a=ky(e.shape,a)}),!vy(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function ky(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let a=0;a<e.length;++a){let r=e[a],i=t[a];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:i}return n}var Iy=class{constructor(e,t,n,a,r,i,s){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=uu(0),ss(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),by(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ss(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return qi([],[0].concat(this.elementShape));let n=this.readMany(e);return by(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Fp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return qi([],[0].concat(this.elementShape));let t=[];for(let a=0;a<this.size();a++)t.push(a);let n=this.readMany(t);return by(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),el(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Jp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=0===n?0:t.size/n,i=[];rs(()=>{t=Yo(t,[1,n,r]);for(let n=0;n<e.length;++n){let s=[0,0===n?0:a[n-1],0],o=[1,e[n],r];i[n]=Yo(al(t,s,o),this.elementShape)}return i});let s=[];for(let o=0;o<e.length;o++)s[o]=o;this.writeMany(s,i)}},Sy=class e{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);by(t,e.shape,"TensorList shape mismatch: "),ss(e)}),this.idTensor=uu(0),this.maxNumElements=a,ss(this.idTensor)}copy(){return new e([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(null==e||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);by(e,this.elementShape,"TensorList shape mismatch: ");let a=wy(this.elementShape,this.tensors,e);return rs(()=>{let e=this.tensors.map(e=>Yo(e,a));return Fp(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=wy(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,by(a.shape,e,"TensorList shape mismatch: "),Yo(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(by(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ss(e),this.tensors.push(e)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let n=new e([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=t;for(let e=0;e<Math.min(this.tensors.length,t);++e)n.tensors[e]=this.tensors[e];return n}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);by(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=wy(this.elementShape,this.tensors,t);return Yo(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);by(this.elementShape,t.shape,"TensorList shape mismatch: "),ss(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);by(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=wy(this.elementShape,this.tensors,n);return 0===e.length?qi([],[0].concat(a)):rs(()=>{let t=e.map(e=>Yo(this.tensors[e],a));return Fp(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);by(this.elementShape,t,"TensorList shape mismatch: ");let n=wy(this.elementShape,this.tensors,t);return 0===this.size()?qi([],[0].concat(n)):rs(()=>{let e=this.tensors.map(e=>Yo(e,n));return el(e,0)})}};var Ny=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=pg("thenBranch",e,t,n),r=pg("elseBranch",e,t,n),i=pg("cond",e,t,n),s=pg("args",e,t,n);return(await i.data())[0]?n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=pg("body",e,t,n),r=pg("cond",e,t,n),i=pg("args",e,t,n),s=await n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap),o=i.map(e=>e.id),l=await s[0].data();s.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()});let u=i;for(;l[0];){let e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map(e=>e.id);e.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()});let i=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await i[0].data(),i.forEach(e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()})}return u}case"LoopCond":return[Ag(pg("pred",e,t,n))];case"Switch":{let a=pg("pred",e,t,n),r=pg("data",e,t,n);return r.kept||(r=Ag(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find(e=>void 0!==hg(e,t,n));if(a){return[Ag(hg(a,t,n))]}return}case"Enter":{let a=pg("frameName",e,t,n),r=pg("tensor",e,t,n);return n.enterFrame(a),[Ag(r)]}case"Exit":{let a=pg("tensor",e,t,n);return n.exitFrame(),[Ag(a)]}case"NextIteration":{let a=pg("tensor",e,t,n);return n.nextIteration(),[Ag(a)]}case"TensorArrayV3":{let a=pg("size",e,t,n),r=pg("dtype",e,t,n),i=pg("elementShape",e,t,n),s=pg("dynamicSize",e,t,n),o=pg("clearAfterRead",e,t,n),l=pg("identicalElementShapes",e,t,n),u=pg("name",e,t,n),d=new Iy(u,r,a,i,l,s,o);return n.addTensorArray(d),[d.idTensor,uu(1)]}case"TensorArrayWriteV3":{let a=pg("tensorArrayId",e,t,n),r=pg("index",e,t,n),i=pg("tensor",e,t,n),s=n.getTensorArray(a.id);return s.write(r,i),[s.idTensor]}case"TensorArrayReadV3":{let a=pg("tensorArrayId",e,t,n),r=pg("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=pg("tensorArrayId",e,t,n),r=pg("indices",e,t,n),i=pg("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,i)]}case"TensorArrayScatterV3":{let a=pg("tensorArrayId",e,t,n),r=pg("indices",e,t,n),i=pg("tensor",e,t,n),s=n.getTensorArray(a.id);return s.scatter(r,i),[s.idTensor]}case"TensorArrayConcatV3":{let a=pg("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),i=pg("dtype",e,t,n);return[r.concat(i)]}case"TensorArraySplitV3":{let a=pg("tensorArrayId",e,t,n),r=pg("tensor",e,t,n),i=pg("lengths",e,t,n),s=n.getTensorArray(a.id);return s.split(i,r),[s.idTensor]}case"TensorArraySizeV3":{let a=pg("tensorArrayId",e,t,n);return[uu(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{let a=pg("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=pg("tensorListId",e,t,n),r=pg("index",e,t,n),i=pg("tensor",e,t,n),s=n.getTensorList(a.id);return s.setItem(r,i),[s.idTensor]}case"TensorListGetItem":{let a=pg("tensorListId",e,t,n),r=pg("index",e,t,n),i=pg("elementShape",e,t,n),s=pg("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let a=pg("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let i=new Sy([],n,e.dtype,a),s=Jp(e,0);return t.forEach((e,t)=>{i.setItem(e,s[t])}),i}(pg("tensor",e,t,n),a,pg("elementShape",e,t,n),pg("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a,r=pg("elementShape",e,t,n),i=pg("elementDType",e,t,n);a="TensorListReserve"===e.op?"numElements":"maxNumElements";let s=pg(a,e,t,n),o=function(e,t,n,a){return new Sy([],e,t,a)}(r,i,0,"TensorListReserve"===e.op?-1:s);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=pg("tensorListId",e,t,n),r=pg("indices",e,t,n),i=pg("elementShape",e,t,n),s=pg("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,s,i)]}case"TensorListStack":{let a=pg("tensorListId",e,t,n),r=pg("elementShape",e,t,n),i=pg("elementDType",e,t,n),s=pg("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,i,s)]}case"TensorListFromTensor":{let a=function(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);by(e.shape.slice(1),t,"TensorList shape mismatch: ");let r=Jp(e);return new Sy(r,t,a)}(pg("tensor",e,t,n),pg("elementShape",e,t,n),pg("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let a=pg("tensorListId",e,t,n),r=n.getTensorList(a.id),i=pg("dtype",e,t,n),s=pg("elementShape",e,t,n);return[r.concat(i,s)]}case"TensorListPushBack":{let a=pg("tensorListId",e,t,n),r=pg("tensor",e,t,n),i=n.getTensorList(a.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{let a=pg("tensorListId",e,t,n),r=pg("elementShape",e,t,n),i=pg("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,i)]}case"TensorListSplit":{let a=pg("tensor",e,t,n),r=pg("elementShape",e,t,n),i=function(e,t,n){let a=0,r=t.map(e=>(a+=e,a));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);let i=ky(e.shape.slice(1),n),s=0===a?0:e.size/a,o=rs(()=>{let n=[];e=Yo(e,[1,a,s]);for(let a=0;a<t.length;++a){let o=[0,0===a?0:r[a-1],0],l=[1,t[a],s];n[a]=Yo(al(e,o,l),i)}return e.dispose(),n}),l=new Sy([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(a,pg("lengths",e,t,n),r);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let a=pg("tensorListId",e,t,n);return[uu(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{let a=pg("tensorListId",e,t,n),r=pg("size",e,t,n),i=n.getTensorList(a.id).resize(r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Cy(e,t,n){let[a,r]=pg("fusedOps",e,t,n),i="biasadd"===a,s=!i,o="prelu"===r,l="fusedbatchnorm"===a,u=pg("numArgs",e,t,n);if(i){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let d=pg("strides",e,t,n),p=yg(e,t,n),h=pg("dataFormat",e,t,n).toUpperCase(),c=pg("dilations",e,t,n),[f,m]=pg("args",e,t,n);return s&&(m=f,f=void 0),{stride:d,pad:p,dataFormat:h,dilations:c,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:pg("leakyreluAlpha",e,t,n)}}function Ty(e,t,n){return{boxes:pg("boxes",e,t,n),scores:pg("scores",e,t,n),maxOutputSize:pg("maxOutputSize",e,t,n),iouThreshold:pg("iouThreshold",e,t,n),scoreThreshold:pg("scoreThreshold",e,t,n),softNmsSigma:pg("softNmsSigma",e,t,n)}}var Ry=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=uu(0),this.tensorMap=new Map,ss(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return uu(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),rs(()=>{let e=Jp(t),a=n.length,r=e.length;Sr.assert(a===r,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`);for(let t=0;t<a;t++){let a=n[t],r=e[t];ss(r),this.tensorMap.set(a,r)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return rs(()=>{let e=[];for(let a=0;a<n.length;a++){let r=n[a],i=this.findWithDefault(r,t);e.push(i)}return Fp(e)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}};function Ey(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:rs,i=((e,t,n)=>{switch(e.category){case"arithmetic":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(pg("a",e,t,n),pg("b",e,t,n))];case"AddN":return[a.addN(pg("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(pg("a",e,t,n),pg("b",e,t,n))];case"Mul":return[a.mul(pg("a",e,t,n),pg("b",e,t,n))];case"RealDiv":case"Div":return[a.div(pg("a",e,t,n),pg("b",e,t,n))];case"DivNoNan":return[a.divNoNan(pg("a",e,t,n),pg("b",e,t,n))];case"FloorDiv":return[a.floorDiv(pg("a",e,t,n),pg("b",e,t,n))];case"Sub":return[a.sub(pg("a",e,t,n),pg("b",e,t,n))];case"Minimum":return[a.minimum(pg("a",e,t,n),pg("b",e,t,n))];case"Maximum":return[a.maximum(pg("a",e,t,n),pg("b",e,t,n))];case"Pow":return[a.pow(pg("a",e,t,n),pg("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(pg("a",e,t,n),pg("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"basic_math":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(pg("x",e,t,n))];case"Acos":return[a.acos(pg("x",e,t,n))];case"Acosh":return[a.acosh(pg("x",e,t,n))];case"Asin":return[a.asin(pg("x",e,t,n))];case"Asinh":return[a.asinh(pg("x",e,t,n))];case"Atan":return[a.atan(pg("x",e,t,n))];case"Atan2":return[a.atan2(pg("x",e,t,n),pg("y",e,t,n))];case"Atanh":return[a.atanh(pg("x",e,t,n))];case"Ceil":return[a.ceil(pg("x",e,t,n))];case"Complex":return[a.complex(pg("real",e,t,n),pg("imag",e,t,n))];case"Cos":return[a.cos(pg("x",e,t,n))];case"Cosh":return[a.cosh(pg("x",e,t,n))];case"Elu":return[a.elu(pg("x",e,t,n))];case"Erf":return[a.erf(pg("x",e,t,n))];case"Exp":return[a.exp(pg("x",e,t,n))];case"Expm1":return[a.expm1(pg("x",e,t,n))];case"Floor":return[a.floor(pg("x",e,t,n))];case"Log":return[a.log(pg("x",e,t,n))];case"Log1p":return[a.log1p(pg("x",e,t,n))];case"Imag":return[a.imag(pg("x",e,t,n))];case"Neg":return[a.neg(pg("x",e,t,n))];case"Reciprocal":return[a.reciprocal(pg("x",e,t,n))];case"Real":return[a.real(pg("x",e,t,n))];case"Relu":return[a.relu(pg("x",e,t,n))];case"Round":return[a.round(pg("x",e,t,n))];case"Selu":return[a.selu(pg("x",e,t,n))];case"Sigmoid":return[a.sigmoid(pg("x",e,t,n))];case"Sin":return[a.sin(pg("x",e,t,n))];case"Sign":return[a.sign(pg("x",e,t,n))];case"Sinh":return[a.sinh(pg("x",e,t,n))];case"Softplus":return[a.softplus(pg("x",e,t,n))];case"Sqrt":return[a.sqrt(pg("x",e,t,n))];case"Square":return[a.square(pg("x",e,t,n))];case"Tanh":return[a.tanh(pg("x",e,t,n))];case"Tan":return[a.tan(pg("x",e,t,n))];case"ClipByValue":return[a.clipByValue(pg("x",e,t,n),pg("clipValueMin",e,t,n),pg("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(pg("x",e,t,n))];case"Rsqrt":return[a.rsqrt(hg(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(pg("x",e,t,n),pg("alpha",e,t,n))];case"Prelu":return[a.prelu(pg("x",e,t,n),pg("alpha",e,t,n))];case"IsNan":return[a.isNaN(hg(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(hg(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(hg(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"control":return Ny(e,t,n);case"convolution":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Conv1D":{let r=pg("stride",e,t,n),i=pg("pad",e,t,n),s=pg("dataFormat",e,t,n).toUpperCase(),o=pg("dilation",e,t,n);return[a.conv1d(pg("x",e,t,n),pg("filter",e,t,n),r,i,s,o)]}case"Conv2D":{let r=pg("strides",e,t,n),i=yg(e,t,n),s=pg("dataFormat",e,t,n).toUpperCase(),o=pg("dilations",e,t,n);return[a.conv2d(pg("x",e,t,n),pg("filter",e,t,n),[r[1],r[2]],i,s,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:i,dataFormat:s,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:p}=Cy(e,t,n);return[a.fused.conv2d({x:pg("x",e,t,n),filter:pg("filter",e,t,n),strides:[r[1],r[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:i,dataFormat:s,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:p}=Cy(e,t,n);return[a.fused.depthwiseConv2d({x:pg("x",e,t,n),filter:pg("filter",e,t,n),strides:[r[1],r[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=pg("outputShape",e,t,n),i=pg("strides",e,t,n),s=yg(e,t,n);return[a.conv2dTranspose(pg("x",e,t,n),pg("filter",e,t,n),r,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=pg("strides",e,t,n),i=yg(e,t,n),s=pg("dilations",e,t,n),o=pg("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(pg("input",e,t,n),pg("filter",e,t,n),[r[1],r[2]],i,o,[s[1],s[2]])]}case"Conv3D":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("dataFormat",e,t,n).toUpperCase(),o=pg("dilations",e,t,n);return[a.conv3d(pg("x",e,t,n),pg("filter",e,t,n),[r[1],r[2],r[3]],i,s,[o[1],o[2],o[3]])]}case"AvgPool":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("kernelSize",e,t,n);return[a.avgPool(pg("x",e,t,n),[s[1],s[2]],[r[1],r[2]],i)]}case"MaxPool":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("kernelSize",e,t,n);return[a.maxPool(pg("x",e,t,n),[s[1],s[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("kernelSize",e,t,n),o=pg("includeBatchInIndex",e,t,n),{result:l,indexes:u}=a.maxPoolWithArgmax(pg("x",e,t,n),[s[1],s[2]],[r[1],r[2]],i,o);return[l,u]}case"AvgPool3D":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("kernelSize",e,t,n);return[a.avgPool3d(pg("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("kernelSize",e,t,n);return[a.maxPool3d(pg("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{let r=pg("strides",e,t,n),i=pg("pad",e,t,n),s=pg("dilations",e,t,n),o=r[1],l=r[2],u=s[1],d=s[2];return[a.dilation2d(pg("x",e,t,n),pg("filter",e,t,n),[o,l],i,[u,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"creation":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Fill":{let r=pg("shape",e,t,n),i=pg("dtype",e,t,n),s=pg("value",e,t,n);return[a.fill(r,s,i)]}case"LinSpace":{let r=pg("start",e,t,n),i=pg("stop",e,t,n),s=pg("num",e,t,n);return[a.linspace(r,i,s)]}case"Multinomial":{let r=pg("logits",e,t,n),i=pg("numSamples",e,t,n),s=pg("seed",e,t,n);return[a.multinomial(r,i,s)]}case"OneHot":{let r=pg("indices",e,t,n),i=pg("depth",e,t,n),s=pg("onValue",e,t,n),o=pg("offValue",e,t,n),l=pg("dtype",e,t,n);return[a.oneHot(r,i,s,o,l)]}case"Ones":return[a.ones(pg("shape",e,t,n),pg("dtype",e,t,n))];case"OnesLike":return[a.onesLike(pg("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(pg("shape",e,t,n),pg("dtype",e,t,n),pg("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(pg("shape",e,t,n),pg("minval",e,t,n),pg("maxval",e,t,n),pg("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(pg("shape",e,t,n),pg("minval",e,t,n),pg("maxval",e,t,n),pg("seed",e,t,n))];case"Range":{let r=pg("start",e,t,n),i=pg("stop",e,t,n),s=pg("step",e,t,n);return[a.range(r,i,s,pg("dtype",e,t,n))]}case"TruncatedNormal":{let r=pg("shape",e,t,n),i=pg("mean",e,t,n),s=pg("stdDev",e,t,n),o=pg("seed",e,t,n);return[a.truncatedNormal(r,i,s,pg("dtype",e,t,n),o)]}case"Zeros":return[a.zeros(pg("shape",e,t,n),pg("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(pg("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"dynamic":return async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:xy;switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=Ty(e,t,n),d=await r.image.nonMaxSuppressionWithScoreAsync(a,i,s,o,l,u);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=Ty(e,t,n),u=pg("padToMaxOutputSize",e,t,n),d=await r.image.nonMaxSuppressionPaddedAsync(a,i,s,o,l,u);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=Ty(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,i,s,o,l)]}case"Where":{let a=r.cast(pg("condition",e,t,n),"bool"),i=[await r.whereAsync(a)];return a.dispose(),i}case"ListDiff":return r.setdiff1dAsync(pg("x",e,t,n),pg("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n);case"evaluation":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"LowerBound":{let r=pg("sortedSequence",e,t,n),i=pg("values",e,t,n);return[a.lowerBound(r,i)]}case"TopKV2":{let r=pg("x",e,t,n),i=pg("k",e,t,n),s=pg("sorted",e,t,n),o=a.topk(r,i,s);return[o.values,o.indices]}case"UpperBound":{let r=pg("sortedSequence",e,t,n),i=pg("values",e,t,n);return[a.upperBound(r,i)]}case"Unique":{let r=pg("x",e,t,n),i=a.unique(r);return[i.values,i.indices]}case"UniqueV2":{let r=pg("x",e,t,n),i=pg("axis",e,t,n),s=a.unique(r,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"image":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"ResizeBilinear":{let r=pg("images",e,t,n),i=pg("size",e,t,n),s=pg("alignCorners",e,t,n),o=pg("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[i[0],i[1]],s,o)]}case"ResizeNearestNeighbor":{let r=pg("images",e,t,n),i=pg("size",e,t,n),s=pg("alignCorners",e,t,n),o=pg("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[i[0],i[1]],s,o)]}case"CropAndResize":{let r=pg("image",e,t,n),i=pg("boxes",e,t,n),s=pg("boxInd",e,t,n),o=pg("cropSize",e,t,n),l=pg("method",e,t,n),u=pg("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,i,s,o,l,u)]}case"ImageProjectiveTransformV3":{let r=pg("images",e,t,n),i=pg("transforms",e,t,n),s=pg("outputShape",e,t,n),o=pg("fillValue",e,t,n),l=pg("interpolation",e,t,n),u=pg("fillMode",e,t,n);return[a.image.transform(r,i,l.toLowerCase(),u.toLowerCase(),o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"graph":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=pg("default",e,t,n);return[hg(e.name,t,n)||r];case"Placeholder":return[hg(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Ag(pg("x",e,t,n))];case"IdentityN":return pg("x",e,t,n).map(e=>Ag(e));case"Shape":return[a.tensor1d(pg("x",e,t,n).shape,"int32")];case"ShapeN":return pg("x",e,t,n).map(e=>a.tensor1d(e.shape));case"Size":return[a.scalar(pg("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(pg("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":let i=pg("x",e,t,n),s=pg("data",e,t,n),o=pg("message",e,t,n),l=pg("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"logical":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Equal":return[a.equal(pg("a",e,t,n),pg("b",e,t,n))];case"NotEqual":return[a.notEqual(pg("a",e,t,n),pg("b",e,t,n))];case"Greater":return[a.greater(pg("a",e,t,n),pg("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(pg("a",e,t,n),pg("b",e,t,n))];case"Less":return[a.less(pg("a",e,t,n),pg("b",e,t,n))];case"LessEqual":return[a.lessEqual(pg("a",e,t,n),pg("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(pg("a",e,t,n),pg("b",e,t,n))];case"LogicalNot":return[a.logicalNot(pg("a",e,t,n))];case"LogicalOr":return[a.logicalOr(pg("a",e,t,n),pg("b",e,t,n))];case"Select":case"SelectV2":return[a.where(pg("condition",e,t,n),pg("a",e,t,n),pg("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(pg("a",e,t,n),pg("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"matrices":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(pg("a",e,t,n),pg("b",e,t,n),pg("transposeA",e,t,n),pg("transposeB",e,t,n))];case"Einsum":return[a.einsum(pg("equation",e,t,n),...pg("tensors",e,t,n))];case"Transpose":return[a.transpose(pg("x",e,t,n),pg("perm",e,t,n))];case"_FusedMatMul":let[r,i]=pg("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===i,l=pg("numArgs",e,t,n),u=pg("leakyreluAlpha",e,t,n);if(s){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,p]=pg("args",e,t,n);return[a.fused.matMul({a:pg("a",e,t,n),b:pg("b",e,t,n),transposeA:pg("transposeA",e,t,n),transposeB:pg("transposeB",e,t,n),bias:d,activation:i,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[a.linalg.bandPart(pg("a",e,t,n),pg("numLower",e,t,n),pg("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"normalization":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(pg("x",e,t,n),pg("axis",e,t,n),pg("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(pg("x",e,t,n),pg("mean",e,t,n),pg("variance",e,t,n),pg("offset",e,t,n),pg("scale",e,t,n),pg("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(pg("x",e,t,n),pg("radius",e,t,n),pg("bias",e,t,n),pg("alpha",e,t,n),pg("beta",e,t,n))];case"Softmax":return[a.softmax(pg("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(pg("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"ragged":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"RaggedGather":{let{outputNestedSplits:r,outputDenseValues:i}=a.raggedGather(pg("paramsNestedSplits",e,t,n),pg("paramsDenseValues",e,t,n),pg("indices",e,t,n),pg("outputRaggedRank",e,t,n));return r.concat(i)}case"RaggedRange":{let{rtNestedSplits:r,rtDenseValues:i}=a.raggedRange(pg("starts",e,t,n),pg("limits",e,t,n),pg("splits",e,t,n));return[r,i]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(pg("shape",e,t,n),pg("values",e,t,n),pg("defaultValue",e,t,n),pg("rowPartitionTensors",e,t,n),pg("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"reduction":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Max":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.max(pg("x",e,t,n),r,i)]}case"Mean":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.mean(pg("x",e,t,n),r,i)]}case"Min":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.min(pg("x",e,t,n),r,i)]}case"Sum":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.sum(pg("x",e,t,n),r,i)]}case"All":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.all(pg("x",e,t,n),r,i)]}case"Any":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.any(pg("x",e,t,n),r,i)]}case"ArgMax":{let r=pg("axis",e,t,n);return[a.argMax(pg("x",e,t,n),r)]}case"ArgMin":{let r=pg("axis",e,t,n);return[a.argMin(pg("x",e,t,n),r)]}case"Prod":{let r=pg("axis",e,t,n),i=pg("keepDims",e,t,n);return[a.prod(pg("x",e,t,n),r,i)]}case"Cumprod":{let r=pg("axis",e,t,n),i=pg("exclusive",e,t,n),s=pg("reverse",e,t,n);return[a.cumprod(pg("x",e,t,n),r,i,s)]}case"Cumsum":{let r=pg("axis",e,t,n),i=pg("exclusive",e,t,n),s=pg("reverse",e,t,n);return[a.cumsum(pg("x",e,t,n),r,i,s)]}case"Bincount":let r=pg("x",e,t,n),i=pg("weights",e,t,n),s=pg("size",e,t,n);return[a.bincount(r,i,s)];case"DenseBincount":{let r=pg("x",e,t,n),i=pg("weights",e,t,n),s=pg("size",e,t,n),o=pg("binaryOutput",e,t,n);return[a.denseBincount(r,i,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"slice_join":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"ConcatV2":case"Concat":{let r=pg("n",e,t,n),i=pg("axis",e,t,n),s=pg("tensors",e,t,n);return s=s.slice(0,r),[a.concat(s,i)]}case"Gather":{let r=pg("x",e,t,n),i=pg("indices",e,t,n);return[a.gather(r,a.cast(i,"int32"),0)]}case"GatherV2":{let r=pg("axis",e,t,n),i=pg("batchDims",e,t,n),s=pg("x",e,t,n),o=pg("indices",e,t,n);return[a.gather(s,a.cast(o,"int32"),r,i)]}case"Reverse":{let r=pg("dims",e,t,n),i=[];for(let e=0;e<r.length;e++)r[e]&&i.push(e);let s=pg("x",e,t,n);return[a.reverse(s,i)]}case"ReverseV2":{let r=pg("axis",e,t,n),i=pg("x",e,t,n);return[a.reverse(i,r)]}case"Slice":{let r=pg("begin",e,t,n),i=pg("size",e,t,n);return[a.slice(pg("x",e,t,n),r,i)]}case"StridedSlice":{let r=pg("begin",e,t,n),i=pg("end",e,t,n),s=pg("strides",e,t,n),o=pg("beginMask",e,t,n),l=pg("endMask",e,t,n),u=pg("ellipsisMask",e,t,n),d=pg("newAxisMask",e,t,n),p=pg("shrinkAxisMask",e,t,n),h=pg("x",e,t,n);return[a.stridedSlice(h,r,i,s,o,l,u,d,p)]}case"Pack":return rs(()=>{let r=pg("axis",e,t,n),i=pg("tensors",e,t,n),s=i[0].shape,o=a.squeeze(i[0]).shape,l=i.map(e=>{let t=Sr.arraysEqual(e.shape,s);if(!t&&!Sr.arraysEqual(a.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,s)});return[a.stack(l,r)]});case"Unpack":{let r=pg("axis",e,t,n),i=pg("tensor",e,t,n);return a.unstack(i,r)}case"Tile":{let r=pg("reps",e,t,n);return[a.tile(pg("x",e,t,n),r)]}case"Split":case"SplitV":{let r=pg("axis",e,t,n),i=pg("numOrSizeSplits",e,t,n),s=pg("x",e,t,n);return a.split(s,i,r)}case"ScatterNd":{let r=pg("indices",e,t,n),i=pg("values",e,t,n),s=pg("shape",e,t,n);return[a.scatterND(r,i,s)]}case"GatherNd":{let r=pg("x",e,t,n),i=pg("indices",e,t,n);return[a.gatherND(r,i)]}case"SparseToDense":{let r=pg("sparseIndices",e,t,n),i=pg("outputShape",e,t,n),s=pg("sparseValues",e,t,n),o=pg("defaultValue",e,t,n);return[a.sparseToDense(r,s,i,s.dtype===o.dtype?o:a.cast(o,s.dtype))]}case"TensorScatterUpdate":{let r=pg("indices",e,t,n),i=pg("values",e,t,n),s=pg("tensor",e,t,n);return[a.tensorScatterUpdate(s,r,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"sparse":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:i,emptyRowIndicator:s,reverseIndexMap:o}=a.sparse.sparseFillEmptyRows(pg("indices",e,t,n),pg("values",e,t,n),pg("denseShape",e,t,n),pg("defaultValue",e,t,n));return[r,i,s,o]}case"SparseReshape":{let{outputIndices:r,outputShape:i}=a.sparse.sparseReshape(pg("inputIndices",e,t,n),pg("inputShape",e,t,n),pg("newShape",e,t,n));return[r,i]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(pg("data",e,t,n),pg("indices",e,t,n),pg("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(pg("data",e,t,n),pg("indices",e,t,n),pg("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"spectral":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"FFT":return[a.fft(pg("x",e,t,n))];case"IFFT":return[a.ifft(pg("x",e,t,n))];case"RFFT":return[a.rfft(pg("x",e,t,n))];case"IRFFT":return[a.irfft(pg("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"string":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(pg("input",e,t,n),pg("pattern",e,t,n),pg("rewrite",e,t,n),pg("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:r,nGramsSplits:i}=a.string.stringNGrams(pg("data",e,t,n),pg("dataSplits",e,t,n),pg("separator",e,t,n),pg("nGramWidths",e,t,n),pg("leftPad",e,t,n),pg("rightPad",e,t,n),pg("padWidth",e,t,n),pg("preserveShortSequences",e,t,n));return[r,i]}case"StringSplit":{let{indices:r,values:i,shape:s}=a.string.stringSplit(pg("input",e,t,n),pg("delimiter",e,t,n),pg("skipEmpty",e,t,n));return[r,i,s]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(pg("input",e,t,n),pg("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"transformation":return r(()=>function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:xy;switch(e.op){case"Cast":return[a.cast(pg("x",e,t,n),pg("dtype",e,t,n))];case"ExpandDims":{let r=pg("axis",e,t,n);return[a.expandDims(pg("x",e,t,n),r)]}case"Squeeze":{let r=pg("axis",e,t,n);return[a.squeeze(pg("x",e,t,n),r)]}case"Reshape":return[a.reshape(pg("x",e,t,n),pg("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(pg("x",e,t,n),pg("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(pg("x",e,t,n),pg("padding",e,t,n),pg("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(pg("x",e,t,n),pg("padding",e,t,n),pg("constantValue",e,t,n))];case"SpaceToBatchND":{let r=pg("blockShape",e,t,n),i=pg("paddings",e,t,n);return[a.spaceToBatchND(pg("x",e,t,n),r,i)]}case"BatchToSpaceND":{let r=pg("blockShape",e,t,n),i=pg("crops",e,t,n);return[a.batchToSpaceND(pg("x",e,t,n),r,i)]}case"DepthToSpace":{let r=pg("blockSize",e,t,n),i=pg("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(pg("x",e,t,n),r,i)]}case"BroadcastTo":return[a.broadcastTo(pg("x",e,t,n),pg("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(pg("s0",e,t,n),pg("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}(e,t,n));case"hash_table":return(async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{let r=pg("keyDType",e,t,n),i=pg("valueDType",e,t,n),s=new Ry(r,i);return a.addHashTable(e.name,s),[s.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let r=pg("tableHandle",e,t,n,a),i=pg("keys",e,t,n),s=pg("values",e,t,n);return[await a.getHashTableById(r.id).import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let r=pg("tableHandle",e,t,n,a),i=pg("keys",e,t,n),s=pg("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=pg("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,a);case"custom":let i=ug(e.op);if(i&&i.customExecutor)return i.customExecutor(new Ay(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Sr.isPromise(i)?i.then(e=>[].concat(e)):[].concat(i)}var $y=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function My(e,t,n,a){let r=new Set,i=[],s=null,o=null,l=new Set,u=new Set(Object.keys(e).map(e=>gg(e)[0]));a=a||[];let d=new Set(a.map(e=>gg(e.name)[0])),p=[...t];for(;p.length>0;){let e=p.pop();if((zy(e)||Ly(e)||Wy(e))&&null==s&&(s=e,o=s.children.map(e=>e.name).filter(e=>r.has(e))),r.add(e.name),null==n[e.name]&&!u.has(e.name)&&!d.has(e.name)){if(0===e.inputs.length){i.push(e.name);continue}e.inputs.forEach(e=>{l.has(e.name)||(l.add(e.name),p.push(e))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:i,dynamicNode:s,syncInputs:o}}function Fy(e,t){let{usedNodes:n,inputs:a}=t,r=Object.keys(a).map(e=>gg(e)[0]).map(t=>e.nodes[t]),i=e.initNodes||[],s=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let l=o([...r,...e.weights,...i]).filter(s),u=o([...l,...Object.values(e.nodes)]).filter(s),d=new Map(u.map(e=>[e.name,e])),p={};for(let m of u){p[m.name]=p[m.name]||0;for(let e of m.children)s(e)||(p[e.name]=Number.POSITIVE_INFINITY),p[e.name]=(p[e.name]||0)+1}let h=Object.entries(p).filter(e=>{let[,t]=e;return 0===t}).map(e=>{let[t]=e;return t}),c=[...h];for(;h.length>0;){let e=h.pop(),t=d.get(e);for(let n of t.children.filter(s))0===--p[n.name]&&(c.push(n.name),h.push(n.name))}let f=function(e,t){let n=new Map(e.map(e=>[e.name,e])),a=t.map(e=>e.name),r=new Set(a);for(;a.length>0;){let e=a.pop(),t=n.get(e);for(let i of t.children)!n.has(i.name)||r.has(i.name)||(r.add(i.name),a.push(i.name))}return e.filter(e=>r.has(e.name))}(c.map(e=>d.get(e)),l);return function(e,t){let n=new Map(e.map((e,t)=>[e.name,t])),a=new Set(t.map(e=>e.name)),r=e=>a.has("string"==typeof e?e:e.name),i=new Set(e.map(e=>e.name)),s=e=>i.has("string"==typeof e?e:e.name);for(let o of e){for(let e of o.children.filter(s)){if(!n.has(e.name))throw new _y(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new _y(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!r(o))for(let e of o.inputs){if(!n.has(e.name))throw new _y(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new _y(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}var _y=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};var Py=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Oy=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Dy=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function zy(e){return Py.has(e.op)}function Ly(e){return Oy.has(e.op)}function Wy(e){return Dy.has(e.op)}var By=class e{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(t,n){this.graph=t,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new e(t.functions[n],this)})}getCompilationKey(e,t){let n=e.map(e=>e.name).sort(),a=t.map(e=>e.name).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){let n=My(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){let n=t.map(e=>e.name),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}let s=Fy(this.graph,n),o=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),n=Number.MAX_SAFE_INTEGER,a=e.map((e,t)=>zy(e)?n:t),r=e=>{let n=a[t.get(e.name)];return null==n?-1:n},i=e.map((e,t)=>e.children.map(r).reduce((e,t)=>Math.max(e,t),a[t])),s=new Map;for(let o=0;o<e.length;++o){let t=i[o];if(t===n)continue;let a=e[o],r=e[t];s.has(r.name)||s.set(r.name,[]),s.get(r.name).push(a)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return ss(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]}))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map(e=>this.graph.nodes[gg(e)[0]]),r=t.map(e=>gg(e)[0]),i=new Set(r),s=r.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);let o=this.getCompilationKey(a,s),l=this.compiledMap.get(o);null==l&&(l=this.compile(e,s),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=Ve().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let u={},d={};return rs(()=>{let n=new $y(this.weightMap,u,d,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[r,i]=gg(t,n),s=[];s[i]=e[t],a[r]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(s))});let r=this.getFrozenTensorIds(a),{orderedNodes:s,nodeLiveUntilMap:o}=l;for(let e of s){if(a[e.name])continue;let t=Ey(e,a,n,this._resourceManager);if(Sr.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,i,o.get(e.name))}return null==this.parent&&n.dispose(r),t.map(e=>hg(e,a,n))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,i,s){if(!zy(t)&&!i.has(e)){for(let a of n[e])null!=a&&(s[a.id]=(s[a.id]||0)+t.children.length);for(let e of t.inputs){if(zy(e))continue;let t=cg(e.name,n,a);if(null!=t)for(let e of t){if(!e||e.kept||r.has(e.id))continue;let t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,i){function s(e){return zy(e)||r.has(e.name)}if(!zy(e)&&null!=i)for(let o of i){if(s(o))continue;let e=cg(o.name,t,n);for(let t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=Ve().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}let i=new $y(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let s=await this.executeWithControlFlow(e,i,t,n),o=t.map(e=>hg(e,s,i)),l=o.map(e=>e.id),u=Object.keys(e).map(t=>e[t].id),d=new Set([...l,...u,...this.weightIds]);return Object.values(s).forEach(e=>{e.forEach(e=>{e&&!e.isDisposed&&!d.has(e.id)&&e.dispose()})}),null==this.parent&&i.dispose(d),o}async executeFunctionAsync(e,t,n){let a=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),i=r.map(e=>this.graph.nodes[gg(e)[0]]),s=n.map(e=>gg(e)[0]),o=new Set(s),l=s.map(e=>this.graph.nodes[e]);0===l.length&&(l=this._outputs);let{usedNodes:u,missingInputs:d,dynamicNode:p,syncInputs:h}=My(e,l,this.weightMap,this._initNodes),c=[...i,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[n,a]=gg(t),r=[];r[a]=e[t],f[n]=r});let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(i,c,t,f,y,g,o,m,u);await Promise.all(e)}null==p&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let A=l.filter(e=>!zy(e)&&!hg(e.name,f,t)).map(e=>e.name);if(A.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${r}]. Consider providing the following inputs: [${d}]. ${e}`)}return f}processStack(e,t,n,a,r,i,s,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&pg("isConstant",e.node,a,n)&&([d]=fg(e.node.name,n)),null==a[e.node.name]){let p=Ey(e.node,a,n,this._resourceManager);d||([d]=fg(e.node.name,n));let h=n.currentContext;Sr.isPromise(p)?u.push(p.then(u=>(a[d]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(u)),n.currentContext=h,this.checkTensorForDisposal(d,e.node,a,n,i,s,o),this.processChildNodes(e.node,t,n,a,r,l),u))):(a[d]=p,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(p)),this.checkTensorForDisposal(d,e.node,a,n,i,s,o),this.processChildNodes(e.node,t,n,a,r,l))}else this.processChildNodes(e.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,i){e.children.forEach(e=>{let[s]=fg(e.name,n);r[s]||!i.has(e.name)||("Merge"===e.op?e.inputNames.some(e=>!!hg(e,a,n))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!hg(e,a,n))&&(r[s]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[a]=gg(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t);Sr.assert(t,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&Sr.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let a={};for(let r in e){let i=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=i?a[i.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=gg(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,n;let a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=gg(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}},Vy=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},Uy="?tfjs-format=file",Gy="model.json",Hy=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Gc;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Vy}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return Sr.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");let t=await ks(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let n=this.artifacts.modelTopology,a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new By(ay.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=ay.Instance.transformGraph(e.modelInitializer);this.initializer=new By(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof si?[e]:e).forEach((e,n)=>t[this.structuredOutputKeys[n]]=e),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof si)&&!Array.isArray(e)){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((t,n)=>{var r,i,s;let o=null===(s=null===(i=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===i?void 0:i[n])||void 0===s?void 0:s.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[a++],t},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){let r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&is(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function jy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Gc;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=function(e){return e.endsWith("/")||(e+="/"),`${e}${Gy}${Uy}`}(e));let a=new Hy(e,t,n);return await a.load(),a}function qy(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let r=Gc.getWeightSpecs(n.weightsManifest),i=Gc.getModelArtifactsForJSONSync(n,r,a);t=Gc.fromMemorySync(i)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=Gc.fromMemorySync(e)}let n=new Hy(t);return n.load(),n}var Xy="4.22.0";function Ky(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Sr.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Zy=sg.whereImpl,Yy=class e extends U{nextDataId(){return e.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new V(this,ts())}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ve().get("IS_NODE")&&Jf.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Sr.isString(n[0])){let r=n.map(e=>Sr.encodeString(e));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Jf.mergeRealAndImagArrays(e,t)}return Sr.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Sr.decodeString(e));return mo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return mo(e.shape,e.dtype,t)}makeOutput(e,t,n){return ts().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=Sr.now();return e(),{kernelMs:Sr.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Ky([e],"where");let t=this.readSync(e.dataId);return Zy(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};Yy.nextDataId=0;var Jy={};function Qy(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}b(Jy,{addImpl:()=>fA,bincountImpl:()=>AA,bincountReduceImpl:()=>xA,bitwiseAndImpl:()=>bA,castImpl:()=>uA,ceilImpl:()=>NA,concatImpl:()=>RA,equalImpl:()=>EA,expImpl:()=>FA,expm1Impl:()=>OA,floorDivImpl:()=>VA,floorImpl:()=>LA,gatherNdImpl:()=>HA,gatherV2Impl:()=>jA,greaterEqualImpl:()=>ZA,greaterImpl:()=>qA,lessEqualImpl:()=>nx,lessImpl:()=>QA,linSpaceImpl:()=>ix,logImpl:()=>sx,maxImpl:()=>lx,maximumImpl:()=>ux,minimumImpl:()=>hx,multiplyImpl:()=>mx,negImpl:()=>xx,notEqualImpl:()=>vx,prodImpl:()=>Cx,raggedGatherImpl:()=>Mx,raggedRangeImpl:()=>_x,raggedTensorToTensorImpl:()=>Lx,rangeImpl:()=>Wx,rsqrtImpl:()=>Bx,scatterImpl:()=>Gx,sigmoidImpl:()=>Hx,simpleAbsImpl:()=>Qy,sliceImpl:()=>Xx,sparseFillEmptyRowsImpl:()=>Yx,sparseReshapeImpl:()=>Jx,sparseSegmentReductionImpl:()=>Qx,sqrtImpl:()=>eb,squaredDifferenceImpl:()=>ab,staticRegexReplaceImpl:()=>sb,stridedSliceImpl:()=>ub,stringNGramsImpl:()=>pb,stringSplitImpl:()=>cb,stringToHashBucketFastImpl:()=>fb,subImpl:()=>mb,tileImpl:()=>xb,topKImpl:()=>wb,transposeImpl:()=>Ix,uniqueImpl:()=>kb});var eA={kernelName:"Abs",backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend;Ky(t,"abs");let a=new Float32Array(Sr.sizeFromShape(t.shape));return a=Qy(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}};function tA(e){return(t,n,a,r,i)=>{let s=Jf.assertAndGetBroadcastShape(t,n),o=s.length,l=Sr.computeStrides(s),u=Sr.sizeFromShape(s),d=Sr.getTypedArrayFromDType(i,u),p=t.length,h=n.length,c=Sr.computeStrides(t),f=Sr.computeStrides(n),m=Jf.getBroadcastDims(t,s),g=Jf.getBroadcastDims(n,s);if(m.length+g.length===0)for(let y=0;y<d.length;++y)d[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<d.length;++y){let t=Sr.indexToLoc(y,o,l),n=t.slice(-p);m.forEach(e=>n[e]=0);let i=Sr.locToIndex(n,p,c),s=t.slice(-h);g.forEach(e=>s[e]=0);let u=Sr.locToIndex(s,h,f);d[y]=e(a[i],r[u])}return[d,s]}}function nA(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",s)},o}var aA={kernelName:bt,backendName:"cpu",kernelFunc:nA};function rA(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return nA({inputs:{real:rA(e,t,"float32"),imag:rA(e,t,"float32")},backend:e})}let a=Sr.makeZerosTypedArray(Sr.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function iA(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var sA={kernelName:dn,backendName:"cpu",kernelFunc:iA};function oA(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}var lA={kernelName:la,backendName:"cpu",kernelFunc:oA};function uA(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){let a=Sr.toTypedArray([0],n),[r,i]=tA((e,t)=>e!==t?1:0)(t,[],e,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function dA(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:i}=a;if("complex64"===i){if("complex64"===r.dtype)return iA({inputs:{x:r},backend:n});let e=rA(n,r.shape,r.dtype),t=dA({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=nA({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){let e=oA({inputs:{input:r},backend:n}),t=dA({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!Sr.hasEncodingLoss(r.dtype,i)){let e=iA({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}let s=n.data.get(r.dataId).values,[o,l,u]=uA(s,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}var pA={kernelName:yt,backendName:"cpu",kernelFunc:dA};function hA(e,t,n,a){return null==n?n=>{let{inputs:r,backend:i}=n,{a:s,b:o}=r,l=i;Ky([s,o],e);let u=l.data.get(s.dataId).values,d=l.data.get(o.dataId).values,p="string"===s.dtype?Jf.fromUint8ToStringArray(u):u,h="string"===s.dtype?Jf.fromUint8ToStringArray(d):d,c=a||s.dtype,[f,m]=t(s.shape,o.shape,p,h,c);return l.makeTensorInfo(m,c,f)}:e=>{let{inputs:r,backend:i}=e,{a:s,b:o}=r,l=i;if("complex64"===s.dtype||"complex64"===o.dtype){let e=dA({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,i=l.data.get(a.dataId).values,u=l.data.get(r.dataId).values,d=dA({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(d.dataId),h=p.complexTensorInfos.real,c=p.complexTensorInfos.imag,f=l.data.get(h.dataId).values,m=l.data.get(c.dataId).values,[g,y,A]=n(s.shape,o.shape,i,u,f,m),x=l.makeTensorInfo(A,"float32",g),b=l.makeTensorInfo(A,"float32",y),v=nA({inputs:{real:x,imag:b},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(d),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(b),v}{let e=l.data.get(s.dataId).values,n=l.data.get(o.dataId).values,r=a||s.dtype,[i,u]=t(s.shape,o.shape,e,n,r);return l.makeTensorInfo(u,r,i)}}}function cA(e){return(t,n,a,r,i,s)=>{let o=Jf.assertAndGetBroadcastShape(t,n),l=Sr.sizeFromShape(o),u=o.length,d=Sr.computeStrides(o),p=Sr.getTypedArrayFromDType("float32",l),h=Sr.getTypedArrayFromDType("float32",l),c=Jf.getBroadcastDims(t,o),f=Jf.getBroadcastDims(n,o),m=Jf.mergeRealAndImagArrays(a,r),g=Jf.mergeRealAndImagArrays(i,s),y=t.length,A=Sr.computeStrides(t),x=n.length,b=Sr.computeStrides(n);if(c.length+f.length===0)for(let v=0;v<p.length;v++){let t=v%m.length,n=v%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);p[v]=a.real,h[v]=a.imag}else for(let v=0;v<p.length;v++){let t=Sr.indexToLoc(v,u,d),n=t.slice(-y);c.forEach(e=>n[e]=0);let a=Sr.locToIndex(n,y,A),r=t.slice(-x);f.forEach(e=>r[e]=0);let i=Sr.locToIndex(r,x,b),s=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);p[v]=s.real,h[v]=s.imag}return[p,h,o]}}var fA=tA((e,t)=>e+t),mA=cA((e,t,n,a)=>({real:e+n,imag:t+a})),gA=hA("Add",fA,mA),yA={kernelName:"Add",backendName:"cpu",kernelFunc:gA};function AA(e,t,n,a,r){let i=Sr.sizeFromShape(a),s=Sr.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(s[n]+=i>0?t[o]:1)}return s}function xA(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=e.shape[0],i=e.shape[1],s=mo([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){let i=e.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(a?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,r),o,i):s.set(s.get(o,i)+1,o,i))}return s}var bA=tA((e,t)=>e&t),vA=hA(ft,bA),wA={kernelName:ft,backendName:"cpu",kernelFunc:vA};function kA(e){return(t,n,a)=>{let r=Sr.getArrayFromDType(n,t.length);for(let i=0;i<t.length;++i)r[i]=e(t[i],a);return r}}function IA(e,t,n){return SA(e,kA(t),n)}function SA(e,t,n){return a=>{let{inputs:r,attrs:i,backend:s}=a,{x:o}=r;Ky(o,e);let l,u=s,d=u.data.get(o.dataId).values;if("string"===o.dtype){if(!Array.isArray(d))throw new Error("String tensor's value was not an instance of Array");l=Jf.fromUint8ToStringArray(d)}else l=d;let p=n||o.dtype,h=t(l,p,i);return u.makeTensorInfo(o.shape,p,h)}}var NA=kA(e=>Math.ceil(e)),CA=SA(At,NA),TA={kernelName:At,backendName:"cpu",kernelFunc:CA};function RA(e,t,n,a){let r=Sr.getArrayFromDType(n,Sr.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach(e=>{let n=Sr.sizeFromShape(e.shape);r.set(e.vals,t),t+=n})}else{let a=0;e.forEach(e=>{let i="string"===n?Jf.fromUint8ToStringArray(e.vals):e.vals,s=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=i[s++]}a+=e.shape[1]})}return r}var EA=tA((e,t)=>e===t?1:0),$A=hA(Kt,EA,null,"bool"),MA={kernelName:Kt,backendName:"cpu",kernelFunc:$A},FA=kA(e=>Math.exp(e)),_A=SA("Exp",FA,"float32"),PA={kernelName:"Exp",backendName:"cpu",kernelFunc:_A},OA=kA(e=>Math.expm1(e)),DA=SA(Jt,OA),zA={kernelName:Jt,backendName:"cpu",kernelFunc:DA},LA=kA(e=>Math.floor(e)),WA=SA(nn,LA),BA={kernelName:nn,backendName:"cpu",kernelFunc:WA},VA=tA((e,t)=>Math.floor(e/t)),UA=hA(an,VA,null,"int32"),GA={kernelName:an,backendName:"cpu",kernelFunc:UA};function HA(e,t,n,a,r,i,s,o,l){let u=mo([a,i],n);for(let d=0;d<a;d++){let n=[],a=0;for(let t=0;t<r;t++){let i=e[d*r+t];a+=i*s[t],n.push(i)}if(a<0||a>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)u.values[d*i+e]=t.get(...t.indexToLoc(a*i+e))}return u}function jA(e,t,n){let a=mo(n,e.dtype);for(let r=0;r<a.size;++r){let n=a.indexToLoc(r).slice(),i=n[0],s=n[2],o=t.locToIndex([i,s]);n[2]=t.values[o];let l=e.locToIndex(n);0<=l&&l<e.values.length&&(a.values[r]=e.values[l])}return a}var qA=tA((e,t)=>e>t?1:0),XA=hA(ln,qA,null,"bool"),KA={kernelName:ln,backendName:"cpu",kernelFunc:XA},ZA=tA((e,t)=>e>=t?1:0),YA=hA(un,ZA,null,"bool"),JA={kernelName:un,backendName:"cpu",kernelFunc:YA},QA=tA((e,t)=>e<t?1:0),ex=hA(yn,QA,null,"bool"),tx={kernelName:yn,backendName:"cpu",kernelFunc:ex},nx=tA((e,t)=>e<=t?1:0),ax=hA(An,nx,null,"bool"),rx={kernelName:An,backendName:"cpu",kernelFunc:ax};function ix(e,t,n){let a=(t-e)/(n-1),r=Sr.makeZerosTypedArray(n,"float32");r[0]=e;for(let i=1;i<r.length;i++)r[i]=r[i-1]+a;return r}var sx=kA(e=>Math.log(e)),ox={kernelName:"Log",backendName:"cpu",kernelFunc:SA("Log",sx)};function lx(e,t,n,a){let r=Sr.getTypedArrayFromDType(a,Sr.sizeFromShape(n));for(let i=0;i<r.length;++i){let n=i*t,a=e[n];for(let r=0;r<t;++r){let t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[i]=a}return r}var ux=tA((e,t)=>Math.max(e,t)),dx=hA(Mn,ux),px={kernelName:Mn,backendName:"cpu",kernelFunc:dx},hx=tA((e,t)=>Math.min(e,t)),cx=hA(Wn,hx),fx={kernelName:Wn,backendName:"cpu",kernelFunc:cx},mx=tA((e,t)=>e*t),gx=cA((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n})),yx=hA(Gn,mx,gx),Ax={kernelName:Gn,backendName:"cpu",kernelFunc:yx};function xx(e,t,n){let a=Sr.createScalarValue(-1,n);return mx([],t,a,e,n)}var bx={kernelName:"Neg",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;Ky(a,"neg");let r=n.data.get(a.dataId).values,[i,s]=xx(r,a.shape,a.dtype);return n.makeTensorInfo(s,a.dtype,i)}},vx=tA((e,t)=>e!==t?1:0),wx=hA(jn,vx,null,"bool"),kx={kernelName:jn,backendName:"cpu",kernelFunc:wx};function Ix(e,t,n,a,r){let i=t.length,s=Sr.sizeFromShape(t),o=Sr.computeStrides(t),l=Sr.computeStrides(r),u=Sr.getTypedArrayFromDType(n,Sr.sizeFromShape(r));for(let d=0;d<s;++d){let t=Sr.indexToLoc(d,i,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[Sr.locToIndex(n,i,l)]=e[d]}return u}function Sx(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:i}=n;Ky(r,"transpose");let s=r.shape.length,o=new Array(s);for(let u=0;u<o.length;u++)o[u]=r.shape[i[u]];let l=Ix(a.data.get(r.dataId).values,r.shape,r.dtype,i,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var Nx={kernelName:er,backendName:"cpu",kernelFunc:Sx};function Cx(e,t,n,a){let[r,i]=Jf.computeOutAndReduceShapes(e,a),s=yi(t,"int32"),o=Sr.makeZerosTypedArray(Sr.sizeFromShape(r),s),l=Sr.sizeFromShape(i);for(let u=0;u<o.length;++u){let e=u*l,t=1;for(let a=0;a<l;++a)t*=n[e+a];o[u]=t}return{outVals:o,outShape:r,outDtype:s}}var Tx={kernelName:aa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Ky(r,"prod");let o=r.shape.length,l=Sr.parseAxisParam(i,r.shape),u=Jf.getAxesPermutation(l,o),d=l,p=r,h=[];null!=u&&(p=Sx({inputs:{x:r},backend:n,attrs:{perm:u}}),h.push(p),d=Jf.getInnerMostAxes(d.length,o));let c=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=Cx(p.shape,p.dtype,c,d),y=m;return s&&(y=Jf.expandShapeToKeepDim(m,l)),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}};function Rx(e,t,n,a){let r=[],i=0,s=t.length-1+n.length,o=new Array(s).fill(null).map(()=>[0]);!function(e,t){for(let n=0;n<e.length;++n){let a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let a=e[u],s=e[u]+1;for(let e=0;e<n.length;++e){let r=n[e],i=e+t.length-1;if(i>=0){let e=o[i],t=e[e.length-1]-r[a];for(let n=a;n<s;++n)o[i].push(r[n+1]+t)}a=r[a],s=r[s]}s!==a&&(r.push([a,s]),i+=s-a)}return{outSplits:o,valueSlices:r,numValues:i}}function Ex(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function $x(e,t,n,a,r){let i=t.slice();i[0]=r;let s=Sr.getArrayFromDType(n,Sr.sizeFromShape(i)),o=e.length;return function(e,t,n,a,r,i){let s=Ex(t,2)[1],o=Ex(i,2)[1],l=0;for(let u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<a;++n)r[l*o+n]=e[t*s+n];++l}}(e,t,a,0===o?0:o/t[0],s,i),[s,i]}function Mx(e,t,n,a,r,i,s,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach((e,a)=>{if(e<0||e>=n){let r=Sr.indexToLoc(a,t.length,Sr.computeStrides(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}})}(i,s,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");let l=a[0],{outSplits:u,valueSlices:d,numValues:p}=Rx(i,s,e,l),h=function(e){let t=[];for(let n=0;n<e.length;++n){let a=e[n].length,r=Sr.getArrayFromDType("int32",a);t.push(r),e[n].forEach((e,t)=>r[t]=e)}return t}(u),c=$x(n,a,r,d,p);return[h,c[0],c[1]]}var Fx=2147483647;function _x(e,t,n,a,r,i,s){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(s.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===r.length,u=0===s.length,d=[];o||d.push(t[0]),l||d.push(r[0]),u||d.push(s[0]);for(let g=1;g<d.length;++g)if(d[g]!==d[g-1])throw new Error("starts, limits, and deltas must have the same shape");let p=0===d.length?1:d[0],h=Sr.getArrayFromDType("int32",p+1);h[0]=0;for(let g=0;g<p;++g){let t,n=o?e[0]:e[g],r=l?a[0]:a[g],s=u?i[0]:i[g];if(0===s)throw new Error("Requires delta != 0");if(s>0&&r<n||s<0&&r>n)t=0;else if(t=Math.ceil(Math.abs((r-n)/s)),t>Fx)throw new Error(`Requires ((limit - start) / delta) <= ${Fx}`);h[g+1]=h[g]+t}let c=h[p],f=Sr.getArrayFromDType(n,c),m=0;for(let g=0;g<p;++g){let t=h[g+1]-h[g],n=o?e[0]:e[g],a=u?i[0]:i[g];for(let e=0;e<t;++e)f[m++]=n,n+=a}return[h,f]}var Px=Jf.RowPartitionType,Ox=class e{constructor(e,t,n,a,r,i,s,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Jf.getRowPartitionTypesHelper(u),this.raggedRank=Jf.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Px.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Px.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(t){let n=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Px.VALUE_ROWIDS:return e.getMaxWidthValueRowID(n);case Px.ROW_SPLITS:return e.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${Px[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){let t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let i=1;i<t;++i){let t=e[i];t!==a&&(a=t,r=Math.max(i-n,r),n=i)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return zx(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;Jf.validateDefaultValueShape(n,t);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Jf.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let i=1;i<=this.raggedRank;++i)r[i]<0&&(r[i]=this.getMaxWidth(i));return r}calculateFirstParentOutputIndex(e,t,n){let a=Math.min(e,n),r=[],i=0;for(let s=0;s<a;++s,i+=t)r.push(i);for(let s=a;s<e;++s)r.push(-1);return Sr.assert(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,n,a){let r=e.length,i=[];for(let s=0;s<r-1;++s){let r=e[s+1]-e[s],o=Math.min(a,r),l=t[s];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<r-o;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,a){let r=e.length,i=[];if(0===r)return[];let s=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<r;++u){let r=e[u];if(r===o)l>=0&&(++s,s<a?l+=n:l=-1);else{if(s=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,a){let r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Px.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case Px.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error(`Unsupported partition type: ${Px[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Px.FIRST_DIM_SIZE:return e[0];case Px.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Px.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Px[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let i=n.length-2;i>=0;--i)n[i]=n[i+1]*t[i+1];let a=zx(t,!1),r=Sr.getArrayFromDType(this.valuesDType,Sr.sizeFromShape(a));if(n[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,n[e],t[e]);this.setOutput(this.raggedRank,i,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;let r=this.values,i=n,s=a.slice();s=s.slice(e+1);let o=Sr.sizeFromShape(s),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;rs(()=>{let t=Yo(u,e);u=ml(t,s).dataSync()})}let d=0,p=0,h=0;for(let c=0;c<=l;++c){let e=c<l?t[c]:-1;if(e!==h){if(p<h){let e=r.subarray(d*o);Dx(i.subarray(p*o),e,(h-p)*o)}if(c>=l){let t=n.length;e=Math.floor(t/o)}if(e>h)if(1===this.defaultValue.length)i.subarray(h*o,e*o).fill(this.defaultValue[0]),h=e;else for(;e>h;){Dx(i.slice(h*o),u,o),++h}e<0?(d=c+1,p=h):(d=c,p=h,h=p+1)}else++h}}};function Dx(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function zx(e,t){let n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function Lx(e,t,n,a,r,i,s,o,l,u){return new Ox(e,t,n,a,r,i,s,o,l,u).compute()}function Wx(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return Sr.makeZerosTypedArray(0,a);let r=Math.abs(Math.ceil((t-e)/n)),i=Sr.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),i[0]=e;for(let s=1;s<i.length;s++)i[s]=i[s-1]+n;return i}var Bx=kA(e=>1/Math.sqrt(e)),Vx=SA(xa,Bx),Ux={kernelName:xa,backendName:"cpu",kernelFunc:Vx};function Gx(e,t,n,a,r,i,s,o,l,u){let d=[a/r,r],p=e.values,h=t.values;if(0===a)return mo(n,t.dtype);let c=l instanceof ai?l:mo(d,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let f=0;f<i;f++){let e=[],i=0;for(let t=0;t<s;t++){let n=p[f*s+t];e.push(n),i+=n*o[t]}if(i<0||i>=a/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)u?c.values[i*r+n]+=h[f*r+n]:c.values[i*r+n]=0===t.rank?h[0]:h[f*r+n]}return c}var Hx=kA(e=>1/(1+Math.exp(-e))),jx=IA(Ra,e=>1/(1+Math.exp(-e))),qx={kernelName:Ra,backendName:"cpu",kernelFunc:jx};function Xx(e,t,n,a,r){let i=Nf.isSliceContinous(a,t,n),s=Sr.sizeFromShape(n),o=Sr.computeStrides(a);if(i){let n=Nf.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+s):e.subarray(n,n+s)}let l=mo(a,r,"string"===r?Jf.fromUint8ToStringArray(e):e),u=mo(n,r);for(let d=0;d<u.size;++d){let e=u.indexToLoc(d),n=e.map((e,n)=>e+t[n]);u.set(l.get(...n),...e)}return"string"===r?Jf.fromStringArrayToUint8(u.values):u.values}function Kx(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a;Ky(r,"slice");let[o,l]=Nf.parseSliceParams(r,i,s);Nf.assertParamsValid(r,o,l);let u=Xx(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var Zx={kernelName:Sa,backendName:"cpu",kernelFunc:Kx};function Yx(e,t,n,a,r,i,s){let o=t[0],l=i[0],u=new Array(l),d=new Array(o),p=t[1];if(0===l){if(0!==o)throw new Error(Jf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[Sr.getArrayFromDType(n,0),[0,p],Sr.getArrayFromDType(r,0),u,d]}let h=!0,c=0,f=new Array(l).fill(0);for(let g=0;g<o;++g){let t=e[g*p];if(t<0)throw new Error(Jf.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=l)throw new Error(Jf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,l));++f[t],h=h&&t>=c,c=t}let m=!0;for(let g=0;g<l;++g){let e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){let t=e,n=a;for(let e=0;e<o;++e)d[e]=e;return[t,[o,p],n,u,d]}{let t=f[l-1],i=Sr.getArrayFromDType(n,t*p),h=Sr.getArrayFromDType(r,t),c=new Array(l).fill(0);for(let n=0;n<o;++n){let t=e[n*p],r=c[t],s=(0===t?0:f[t-1])+r;c[t]++;for(let a=0;a<p;++a)i[s*p+a]=e[n*p+a];h[s]=a[n],d[n]=s}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;h[t]=s}return[i,[t,p],h,u,d]}}function Jx(e,t,n,a,r){let i=Sr.sizeFromShape(a),s=t[0],o=r.length,l=[],u=1,d=-1;for(let m=0;m<o;++m){let e=r[m];if(-1===e){if(-1!==d)throw new Error(Jf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(e<0)throw new Error(Jf.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==d){if(u<=0)throw new Error(Jf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(i/u);if(u*e!==i)throw new Error(Jf.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[d]=e}if(Sr.sizeFromShape(l)!==i)throw new Error(Jf.getSparseReshapeInputOutputMismatchErrorMessage(a,l));let p=a.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=Sr.getArrayFromDType(n,s*o);for(let m=0;m<s;++m){let t=0;for(let n=0;n<p;++n)t+=e[m*p+n]*h[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/c[e]),t%=c[e]}return[f,[s,o],l]}function Qx(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,o=a.length,l=[t[0],e.length/t[0]],u=l[1],d=o>0?r[o-1]+1:0;if(d<0)throw new Error(Jf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=t.slice();p[0]=d;let h=p.reduce((e,t)=>e*t,1),c=Sr.getArrayFromDType(n,h);if(0===o)return d>0&&c.fill(s),[c,p];if(d<=0)throw new Error(Jf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let t=0;if(m<o){if(t=r[m],y===t){++m;continue}if(y>=t)throw new Error(Jf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw new Error(Jf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(s,g*u,y*u);for(let n=f;n<m;++n){let t=a[n];if(t<0||t>=l[0])throw new Error(Jf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],l[0]));for(let n=0;n<u;n++)c[y*u+n]+=e[t*u+n]}if(i)for(let e=0;e<u;e++)c[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&c.fill(s,g*u,d*u),[c,p]}var eb=kA(e=>Math.sqrt(e)),tb=IA($a,e=>Math.sqrt(e)),nb={kernelName:$a,backendName:"cpu",kernelFunc:tb},ab=tA((e,t)=>{let n=e-t;return n*n}),rb=hA(Ba,ab),ib={kernelName:Ba,backendName:"cpu",kernelFunc:rb},sb=kA((e,t)=>{let{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)}),ob=SA(Ua,sb),lb={kernelName:Ua,backendName:"cpu",kernelFunc:ob};function ub(e,t,n,a){let r=mo(e,t.dtype);for(let i=0;i<r.size;i++){let e=r.indexToLoc(i),s=new Array(e.length);for(let t=0;t<s.length;t++)s[t]=e[t]*n[t]+a[t];r.set(t.get(...s),...e)}return r}var db=class{constructor(e,t,n,a,r,i){this.separator=Sr.encodeString(e),this.nGramWidths=t,this.leftPad=Sr.encodeString(n),this.rightPad=Sr.encodeString(a),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,i){for(let s=0;s<r;++s){let o=this.getPadWidth(i),l=Math.max(0,o-s),u=Math.max(0,o-(r-(s+1))),d=i-(l+u),p=t+(l>0?0:s-o),h=0;h+=l*this.leftPad.length;for(let t=0;t<d;++t)h+=e[p+t].length;h+=u*this.rightPad.length,h+=(l+u+d-1)*this.separator.length,n[a+s]=new Uint8Array(h);let c=n[a+s],f=0,m=e=>e.forEach(e=>c[f++]=e);for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<d-1;++t)m(e[p+t]),m(this.separator);if(d>0){m(e[p+d-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let r=a-1,i=Sr.getArrayFromDType("int32",a);if(0===n||0===a){let e=new Array(n);for(let t=0;t<=r;++t)i[t]=0;return[e,i]}i[0]=0;for(let o=1;o<=r;++o){let e=t[o]-t[o-1],n=0;this.nGramWidths.forEach(t=>{n+=this.getNumNGrams(e,t)}),this.preserveShort&&e>0&&0===n&&(n=1),i[o]=i[o-1]+n}let s=new Array(i[r]);for(let o=0;o<r;++o){let n=t[o],a=i[o];if(this.nGramWidths.forEach(r=>{let i=t[o+1]-t[o],l=this.getNumNGrams(i,r);this.createNGrams(e,n,s,a,l,r),a+=l}),this.preserveShort&&a===i[o]){let r=t[o+1]-t[o];if(0===r)continue;let i=r+2*this.padWidth;this.createNGrams(e,n,s,a,1,i)}}return[s,i]}};function pb(e,t,n,a,r,i,s,o){return new db(n,a,r,i,s,o).compute(e,t)}function hb(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){let r=t[0],i=e.indexOf(r);for(;-1!==i;){let t=e.subarray(0,i);(!n||0!==t.length)&&a.push(t),i=(e=e.subarray(i+1)).indexOf(r)}return void((!n||0!==e.length)&&a.push(e))}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){let t=e.subarray(r,i);(!n||0!==t.length)&&a.push(t),r=i+1}}function cb(e,t,n){let a=e.length,r=[],i=0,s=0,o=new Array(a);for(let h=0;h<a;++h){let a=r.length;hb(e[h],t,n,r);let l=r.length-a;o[h]=l,i+=l,s=Math.max(s,l)}let l=Sr.getArrayFromDType("int32",2*i),u=new Array(i),d=[a,s],p=0;for(let h=0;h<a;++h)for(let e=0;e<o[h];++e)l[2*p]=h,l[2*p+1]=e,u[p]=r[p],++p;return[l,u,d]}function fb(e,t){let n=Sr.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=Sr.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}var mb=tA((e,t)=>e-t),gb=cA((e,t,n,a)=>({real:e-n,imag:t-a})),yb=hA("Sub",mb,gb),Ab={kernelName:"Sub",backendName:"cpu",kernelFunc:yb};function xb(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let a=mo(n,e.dtype);for(let r=0;r<a.values.length;++r){let t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];let i=e.locToIndex(n);a.values[r]=e.values[i]}return a}var bb=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function vb(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){let r=a-n+1,i=t-n+1,s=Math.log(r),o=.5*Math.exp(2*s/3),l=.5*Math.sqrt(s*o*(r-o)/r)*Math.sign(i-r/2);vb(e,t,Math.max(n,Math.floor(t-i*o/r+l)),Math.min(a,Math.floor(t+(r-i)*o/r+l)))}let r=e[t],i=n,s=a;for(Sr.swap(e,n,t),bb(e[a],r)>0&&Sr.swap(e,n,a);i<s;){for(Sr.swap(e,i,s),i++,s--;bb(e[i],r)<0;)i+=1;for(;bb(e[s],r)>0;)s-=1}0===bb(e[n],r)?Sr.swap(e,n,s):(s+=1,Sr.swap(e,s,a)),s<=t&&(n=s+1),t<=s&&(a=s-1)}}function wb(e,t,n,a,r){let i=t[t.length-1],[s,o]=[e.length/i,i],l=Sr.getTypedArrayFromDType(n,s*a),u=Sr.getTypedArrayFromDType("int32",s*a);for(let p=0;p<s;p++){let t=p*o,n=e.subarray(t,t+o),i=new Array(n.length);n.forEach((e,t)=>i[t]={value:e,index:t}),a<i.length&&(vb(i,a),i=i.slice(0,a)),r&&i.sort(bb);let s=p*a,d=l.subarray(s,s+a),h=u.subarray(s,s+a);for(let e=0;e<a;e++)d[e]=i[e].value,h[e]=i[e].index}let d=t.slice();return d[d.length-1]=a,[mo(d,n,l),mo(d,"int32",u)]}function kb(e,t,n,a){let r=Sr.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let f=0;f<r;f++)i[0]*=n[f];i[1]=n[r];for(let f=r+1;f<n.length;f++)i[2]*=n[f];let s=new Map,o=new Int32Array(n[r]),l=new ai(i,a,e),u=[],d=1===i[0]&&1===i[2];for(let f=0;f<n[r];f++){let t;if(d)t=e[f].toString();else{let e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,f,n));t=e.join(",")}let n=s.get(t);if(null!=n)o[f]=n;else{let e=s.size;s.set(t,e),o[f]=e,u.push(f)}}let p=i.slice();p[1]=s.size;let h=new ai(p,a);u.forEach((e,t)=>{for(let n=0;n<i[0];n++)for(let a=0;a<i[2];a++)h.set(l.get(n,e,a),n,t,a)});let c=n.slice();return c[r]=p[1],{outputValues:h.values,outputShape:c,indices:o}}var Ib="4.22.0";fs("cpu",()=>new Yy,1);var Sb=IA("Elu",e=>e>=0?e:Math.exp(e)-1),Nb={kernelName:"Elu",backendName:"cpu",kernelFunc:Sb};function Cb(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a;Ky([r],"leakyRelu");let s=Sr.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=Sr.getTypedArrayFromDType("float32",s);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}var Tb={kernelName:gn,backendName:"cpu",kernelFunc:Cb},Rb=tA((e,t)=>e<0?t*e:e);function Eb(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Ky([a,r],"prelu");let i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,[o,l]=Rb(a.shape,r.shape,i,s,"float32");return n.makeTensorInfo(l,"float32",o)}var $b={kernelName:na,backendName:"cpu",kernelFunc:Eb},Mb=IA(da,e=>Math.max(0,e)),Fb={kernelName:da,backendName:"cpu",kernelFunc:Mb},_b=IA(ga,e=>Math.min(Math.max(0,e),6)),Pb={kernelName:ga,backendName:"cpu",kernelFunc:_b};function Ob(e,t,n,a,r){if("linear"===n)return iA({inputs:{x:t},backend:e});if("relu"===n)return Mb({inputs:{x:t},backend:e});if("elu"===n)return Sb({inputs:{x:t},backend:e});if("relu6"===n)return _b({inputs:{x:t},backend:e});if("prelu"===n)return Eb({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Cb({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return jx({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Db(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:i}=a,s=Sr.sizeFromShape(r.shape),o=Sr.inferFromImplicitShape(i,s),l=Sr.sizeFromShape(o);Sr.assert(s===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var zb={kernelName:pa,backendName:"cpu",kernelFunc:Db};function Lb(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;Ky([r,i],"matMul");let l=r.shape.length,u=i.shape.length,d=s?r.shape[l-2]:r.shape[l-1],p=o?i.shape[u-1]:i.shape[u-2],h=s?r.shape[l-1]:r.shape[l-2],c=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Sr.sizeFromShape(f),y=Sr.sizeFromShape(m),A=Ll.assertAndGetBroadcastShape(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([h,c]);Sr.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`);let x=o?[y,c,p]:[y,p,c],b=Db({inputs:{x:r},backend:n,attrs:{shape:s?[g,d,h]:[g,h,d]}}),v=Db({inputs:{x:i},backend:n,attrs:{shape:x}}),w=s?b.shape[1]:b.shape[2],k=s?b.shape[2]:b.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),N=n.data.get(b.dataId).values,C=n.data.get(v.dataId).values,T=Sr.computeStrides(b.shape),R=Sr.computeStrides(v.shape),[E,$,M]=s?[T[0],1,T[1]]:[T[0],T[1],1],[F,_,P]=o?[1,R[1],R[0]]:[R[1],1,R[0]],O=k*I,D=mo([S,k,I],b.dtype),z=D.values,L=n.blockSize;for(let W=0;W<S;W++){let e=W%g,t=W%y;for(let n=0;n<k;n+=L){let a=Math.min(n+L,k);for(let r=0;r<I;r+=L){let i=Math.min(r+L,I);for(let s=0;s<w;s+=L){let o=Math.min(s+L,w);for(let l=n;l<a;l++)for(let n=r;n<i;n++){let a=0;for(let r=s;r<o;r++){a+=N[e*E+l*$+r*M]*C[r*F+n*_+t*P]}z[W*O+(l*I+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(A,D.dtype,D.values)}var Wb={kernelName:pt,backendName:"cpu",kernelFunc:Lb};var Bb={kernelName:ur,backendName:"cpu",kernelFunc:function(e){let t,n,a,{inputs:r,backend:i,attrs:s}=e,{a:o,b:l,bias:u,preluActivationWeights:d}=r,{transposeA:p,transposeB:h,activation:c,leakyreluAlpha:f}=s,m=[];t=Lb({inputs:{a:o,b:l},attrs:{transposeA:p,transposeB:h},backend:i}),u&&(n=gA({inputs:{a:t,b:u},backend:i}),m.push(t),t=n),c&&(a=Ob(i,t,c,d,f),m.push(t),t=a);for(let g of m)i.disposeIntermediateTensorInfo(g);return t}},Vb=IA(Xe,e=>Math.acos(e)),Ub={kernelName:Xe,backendName:"cpu",kernelFunc:Vb},Gb=IA(Ke,e=>Math.acosh(e)),Hb={kernelName:Ke,backendName:"cpu",kernelFunc:Gb};var jb={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,a=t;Ky(t,"addN");let r=a.map(e=>n.data.get(e.dataId).values),i=mo(a[0].shape,a[0].dtype),s=i.values;for(let o=0;o<a.length;o++){let e=r[o];for(let t=0;t<s.length;t++)s[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var qb={kernelName:"All",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Ky(r,"all");let o=Sr.parseAxisParam(i,r.shape),l=o,u=Jf.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=Sx({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Jf.getInnerMostAxes(l.length,r.shape.length)),Jf.assertAxesAreInnerMostDims("all",l,d.shape.length);let[p,h]=Jf.computeOutAndReduceShapes(d.shape,l),c=Sr.sizeFromShape(h),f=Sr.makeZerosTypedArray(Sr.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let a=m[e+n];t=t&&a}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(p,d.dtype,f);if(s){let e=Db({inputs:{x:g},backend:n,attrs:{shape:Jf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var Xb={kernelName:"Any",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Ky(r,"any");let o=Sr.parseAxisParam(i,r.shape),l=o,u=Jf.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=Sx({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Jf.getInnerMostAxes(l.length,r.shape.length)),Jf.assertAxesAreInnerMostDims("any",l,d.shape.length);let[p,h]=Jf.computeOutAndReduceShapes(d.shape,l),c=Sr.sizeFromShape(h),f=Sr.makeZerosTypedArray(Sr.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let a=m[e+n];t=t||a}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(p,d.dtype,f);if(s){let e=Db({inputs:{x:g},backend:n,attrs:{shape:Jf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var Kb={kernelName:et,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a;Ky(r,"argMax");let s=Sr.parseAxisParam(i,r.shape),o=Jf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=Sx({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Jf.getInnerMostAxes(s.length,l.shape.length)),s=[s[0]],Jf.assertAxesAreInnerMostDims("argMax",s,l.shape.length);let[d,p]=Jf.computeOutAndReduceShapes(l.shape,s),h=Sr.sizeFromShape(d),c=Sr.makeZerosTypedArray(h,"int32"),f=Sr.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let a=0;a<f;++a){let r=m[e+a];r>t&&(t=r,n=a)}c[g]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",c)}};var Zb={kernelName:tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a;Ky(r,"argMin");let s=Sr.parseAxisParam(i,r.shape),o=Jf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=Sx({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Jf.getInnerMostAxes(s.length,l.shape.length)),s=[s[0]],Jf.assertAxesAreInnerMostDims("argMin",s,l.shape.length);let[d,p]=Jf.computeOutAndReduceShapes(l.shape,s),h=Sr.sizeFromShape(d),c=Sr.makeZerosTypedArray(h,"int32"),f=Sr.sizeFromShape(p),m=n.data.get(l.dataId).values;for(let g=0;g<c.length;++g){let e=g*f,t=m[e],n=0;for(let a=0;a<f;++a){let r=m[e+a];r<t&&(t=r,n=a)}c[g]=n}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d,"int32",c)}},Yb=IA(nt,e=>Math.asin(e)),Jb={kernelName:nt,backendName:"cpu",kernelFunc:Yb},Qb=IA(at,e=>Math.asinh(e)),ev={kernelName:at,backendName:"cpu",kernelFunc:Qb},tv=IA(rt,e=>Math.atan(e)),nv={kernelName:rt,backendName:"cpu",kernelFunc:tv},av=tA((e,t)=>Math.atan2(e,t)),rv=hA(st,av),iv={kernelName:st,backendName:"cpu",kernelFunc:rv},sv=IA(it,e=>Math.atanh(e)),ov={kernelName:it,backendName:"cpu",kernelFunc:sv};function lv(e,t,n,a,r,i){let s=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,c=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=mo(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],A=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let b=0;b<r.batchSize;++b){let t=b*y,n=b*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){let b=y*s-h,v=Math.max(0,b),w=Math.min(r.inHeight,d+b),k=t+y*A;for(let t=0;t<r.outWidth;++t){let s=t*o-c,d=Math.max(0,s),h=Math.min(r.inWidth,p+s),y=f,A=0,b=0;for(let t=v;t<w;t+=l){let r=n+t*a[1];for(let t=d;t<h;t+=u){let n=e[r+t*a[2]+m];"max"===i&&n>y?y=n:"avg"===i&&(A+=n,b++)}if(isNaN(y))break}g[k+t*x+m]="avg"===i?A/b:y}}}return m}function uv(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=mo(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterHeight,h=a.effectiveFilterWidth,c=a.padInfo.top,f=a.padInfo.left,m=mo(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){let n=t*o-c,y=n;for(;y<0;)y+=u;let A=Math.min(a.inHeight,p+n);for(let o=0;o<a.outWidth;++o){let p=o*l-f,c=p;for(;c<0;)c+=d;let x=Math.min(a.inWidth,h+p),b=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<A;t+=u){let s=t-n;for(let n=c;n<x;n+=d){let o=n-p,l=m.get(g,t,n,e);l>b&&(b=l,v=r?i?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:s*h+o)}}s.set(v,g,t,o,e)}}return s}function dv(e,t,n,a,r,i){let s=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,d=r.dilationHeight,p=r.dilationWidth,h=r.effectiveFilterDepth,c=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,A="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=mo(r.outShape,n),b=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let S=0;S<r.batchSize;++S){let t=S*v,n=S*a[0];for(let x=0;x<r.inChannels;++x)for(let v=0;v<r.outDepth;++v){let S=v*s-m,N=S;for(;N<0;)N+=u;let C=Math.min(r.inDepth,h+S),T=t+v*w;for(let t=0;t<r.outHeight;++t){let s=t*o-g,h=s;for(;h<0;)h+=d;let m=Math.min(r.inHeight,c+s),v=T+t*k;for(let t=0;t<r.outWidth;++t){let s=t*l-y,o=s;for(;o<0;)o+=p;let c=Math.min(r.inWidth,f+s),g=v+t*I,w=A,k=0,S=0;for(let t=N;t<C;t+=u){let r=n+t*a[1];for(let t=h;t<m;t+=d){let n=r+t*a[2];for(let t=o;t<c;t+=p){let r=e[n+t*a[3]+x];if("max"===i&&r>w?w=r:"avg"===i&&(k+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}b[g+x]="avg"===i?k/Math.max(S,1):w}}}}return x}var pv={kernelName:ot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Ky(r,"avgPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let u,d=Jf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&Sr.arraysEqual(d.inShape,d.outShape))u=iA({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=Sr.computeStrides(r.shape),a=lv(e,r.shape,r.dtype,t,d,"avg");u=n.makeTensorInfo(d.outShape,r.dtype,a.values)}return u}};var hv={kernelName:ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a;Ky(r,"avgPool3d");let d=Jf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=dv(n.data.get(r.dataId).values,r.shape,r.dtype,Sr.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}};var cv={kernelName:dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a;Ky([r,i],"avgPool3DGrad");let d=Jf.computePool3DInfo(i.shape,s,o,1,l,u),p=d.strideDepth,h=d.strideHeight,c=d.strideWidth,f=d.filterDepth,m=d.filterHeight,g=d.filterWidth,y=d.dilationDepth,A=d.dilationHeight,x=d.dilationWidth,b=d.effectiveFilterDepth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=b-1-d.padInfo.front,I=w-1-d.padInfo.left,S=v-1-d.padInfo.top,N=mo(i.shape,"float32"),C=1/(f*m*g),T=n.bufferSync(r);for(let R=0;R<d.batchSize;++R)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){let r=t-k,i=n-S,s=a-I,o=0;for(let t=0;t<b;t+=y){let n=(r+t)/p;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=A){let a=(i+t)/h;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let t=0;t<w;t+=x){let r=(s+t)/c;r<0||r>=d.outWidth||Math.floor(r)!==r||(o+=T.get(R,n,a,r,e))}}}N.set(o*C,R,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};var fv={kernelName:lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i;Ky([r,i],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=Jf.computePool2DInfo(s.shape,o,l,1,u),p=d.strideHeight,h=d.strideWidth,c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,A=d.effectiveFilterWidth,x=A-1-d.padInfo.left,b=y-1-d.padInfo.top,v=mo(s.shape,"float32"),w=1/(c*f),k=n.data.get(r.dataId).values,I=mo(r.shape,"float32",k);for(let S=0;S<d.batchSize;++S)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){let a=t-b,r=n-x,i=0;for(let t=0;t<y;t+=m){let n=(a+t)/p;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let t=0;t<A;t+=g){let a=(r+t)/h;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=I.get(S,n,a,e))}}v.set(i*w,S,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var mv={kernelName:rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:i,offset:s,mean:o,variance:l}=t;Sr.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Sr.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Sr.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ky([r,o,l,i,s],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);let d=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,h=n.data.get(l.dataId).values,c=i?n.data.get(i.dataId).values:new Float32Array([1]),f=s?n.data.get(s.dataId).values:new Float32Array([0]),m=new Float32Array(d.length),g=f.length,y=c.length,A=h.length,x=p.length,b=0,v=0,w=0,k=0;for(let I=0;I<d.length;++I)m[I]=f[b++]+(d[I]-p[v++])*c[w++]/Math.sqrt(h[k++]+u),b>=g&&(b=0),v>=x&&(v=0),w>=y&&(w=0),k>=A&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};var gv={kernelName:ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;Ky([r],"batchToSpaceND");let o=i.reduce((e,t)=>e*t),l=Jf.getReshaped(r.shape,i,o),u=Jf.getPermuted(l.length,i.length),d=Jf.getReshapedPermuted(r.shape,i,o),p=Jf.getSliceBeginCoords(s,i.length),h=Jf.getSliceSize(d,s,i.length),c=Db({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Sx({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Db({inputs:{x:f},backend:n,attrs:{shape:d}}),g=Kx({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var yv={kernelName:ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=AA(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,o)}};var Av={kernelName:gt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.data.get(a.dataId).values,s=n.data.get(r.dataId).values,o=Jf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},xv=IA(xt,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),bv={kernelName:xt,backendName:"cpu",kernelFunc:xv},vv={kernelName:vt,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(Sr.sizeFromShape(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,s=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values;for(let u=0;u<o.length;u++){let e=o[u],t=l[u];a[u]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function wv(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}var kv={kernelName:hn,backendName:"cpu",kernelFunc:wv};function Iv(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=Sr.parseAxisParam(r,t[0].shape)[0],s=t.map(e=>e.shape);Jf.assertParamsConsistent(s,i);let o=Jf.computeOutShape(t.map(e=>e.shape),i);if(0===Sr.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Sr.sizeFromShape(e.shape)>0);if(1===l.length)return iA({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map(e=>oA({inputs:{input:e},backend:n})),t=l.map(e=>wv({inputs:{input:e},backend:n})),a=Iv({inputs:e,backend:n,attrs:{axis:i}}),r=Iv({inputs:t,backend:n,attrs:{axis:i}}),s=nA({inputs:{real:a,imag:r},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),s}let u=l.map(e=>{let t=[-1,Sr.sizeFromShape(e.shape.slice(i))];return Db({inputs:{x:e},backend:n,attrs:{shape:t}})}),d=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));o=Jf.computeOutShape(u.map(e=>e.shape),1);let p=1===u[0].shape[0],h=RA(d,o,t[0].dtype,p),c=Jf.computeOutShape(l.map(e=>e.shape),i),f=n.makeTensorInfo(c,t[0].dtype,h);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}var Sv={kernelName:wt,backendName:"cpu",kernelFunc:Iv};function Nv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a;Ky([r,i],"conv2d");let p=Jf.convertConv2DDataFormat(l),h=Jf.computeConv2DInfo(r.shape,i.shape,s,u,o,d,!1,p),c=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,A=h.padInfo.top,x="channelsLast"===h.dataFormat,b=new ai(h.outShape,r.dtype),v=Sr.computeStrides(r.shape),w=Sr.computeStrides(i.shape),k=v[0],I=x?v[1]:v[2],S=x?v[2]:1,N=x?1:v[1],C=b.strides[0],T=x?b.strides[1]:b.strides[2],R=x?b.strides[2]:1,E=x?1:b.strides[1],$=n.data.get(r.dataId).values,M=n.data.get(i.dataId).values,F=b.values;for(let _=0;_<h.batchSize;++_){let e=_*k,t=_*C;for(let n=0;n<h.outHeight;++n){let a=t+n*T,r=n*h.strideHeight-A;for(let t=0;t<c;++t){let n=r+t*m;if(n<0||n>=h.inHeight)continue;let i=t*w[0],s=e+n*I;for(let e=0;e<h.outWidth;++e){let t=a+e*R,n=e*h.strideWidth-y;for(let e=0;e<f;++e){let a=n+e*g;if(a<0||a>=h.inWidth)continue;let r=s+a*S,o=i+e*w[1];for(let e=0;e<h.inChannels;++e){let n=$[r+e*N];for(let e=0;e<h.outChannels;++e)F[t+e*E]+=n*M[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,F)}var Cv={kernelName:kt,backendName:"cpu",kernelFunc:Nv};var Tv={kernelName:It,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a;Ky([r,i],"conv2dBackpropFilter");let p=Jf.convertConv2DDataFormat(l),h=Jf.computeConv2DInfo(r.shape,d,s,1,o,u,!1,p),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,A=new ai(h.filterShape,"float32"),x=h.padInfo.left,b=h.padInfo.top,v=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,k=new ai(r.shape,r.dtype,v),I=new ai(i.shape,i.dtype,w);for(let S=0;S<m;++S){let e=Math.max(0,Math.ceil((b-S)/c)),t=Math.min(h.outHeight,(h.inHeight+b-S)/c);for(let n=0;n<g;++n){let a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(h.outWidth,(h.inWidth+x-n)/f);for(let i=0;i<h.inChannels;++i)for(let s=0;s<h.outChannels;++s){let o=0;for(let l=0;l<h.batchSize;++l)for(let u=e;u<t;++u){let e=S+u*c-b;for(let t=a;t<r;++t){let a=n+t*f-x;o+=y?k.get(l,e,a,i)*I.get(l,u,t,s):k.get(l,i,e,a)*I.get(l,s,u,t)}}A.set(o,S,n,i,s)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};var Rv={kernelName:St,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=a;Ky([r,i],"conv2dBackpropInput");let p=Sr.computeStrides(i.shape),h=Sr.computeStrides(r.shape),c=Jf.convertConv2DDataFormat(u),f=Jf.computeConv2DInfo(s,i.shape,o,1,l,d,!1,c),m=new ai(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,A=n.data.get(i.dataId).values,[x,b,v]=p,{batchSize:w,filterHeight:k,filterWidth:I,inChannels:S,inHeight:N,inWidth:C,outChannels:T,outHeight:R,outWidth:E,strideHeight:$,strideWidth:M}=f;c=f.dataFormat;let F=k-1-f.padInfo.top,_=I-1-f.padInfo.left,P="channelsLast"===c,O=m.strides[0],D=P?m.strides[1]:m.strides[2],z=P?m.strides[2]:1,L=P?1:m.strides[1],W=h[0],B=P?h[1]:h[2],V=P?h[2]:1,U=P?1:h[1];for(let G=0;G<w;++G)for(let e=0;e<S;++e)for(let t=0;t<N;++t){let n=t-F,a=Math.max(0,Math.ceil(n/$)),r=Math.min(R,(k+n)/$);for(let i=0;i<C;++i){let s=i-_,o=Math.max(0,Math.ceil(s/M)),l=Math.min(E,(I+s)/M),u=0;for(let t=a;t<r;++t){let a=t*$-n;for(let n=o;n<l;++n){let r=W*G+B*t+V*n,i=x*(k-1-a)+b*(I-1-(n*M-s))+v*e;for(let e=0;e<T;++e){u+=y[r+U*e]*A[i+e]}}}g[O*G+D*t+z*i+L*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var Ev={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;Ky([r,i],"conv3d");let u=Jf.computeConv3DInfo(r.shape,i.shape,s,l,o),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,x=g.top,b=new ai(u.outShape,r.dtype),v=n.data.get(r.dataId).values,w=n.data.get(i.dataId).values,k=b.values,I=Sr.computeStrides(r.shape),S=Sr.computeStrides(i.shape);for(let N=0;N<u.batchSize;++N){let e=N*I[0],t=N*b.strides[0];for(let n=0;n<u.outDepth;++n){let a=t+n*b.strides[1],r=n*u.strideDepth-y;for(let t=0;t<d;++t){let n=r+t*c;if(n<0||n>=u.inDepth)continue;let i=t*S[0],s=e+n*I[1];for(let e=0;e<u.outHeight;++e){let t=a+e*b.strides[2],n=e*u.strideHeight-x;for(let e=0;e<p;++e){let a=n+e*f;if(a<0||a>=u.inHeight)continue;let r=i+e*S[1],o=s+a*I[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,a=e*u.strideWidth-A;for(let e=0;e<h;++e){let t=a+e*m;if(t<0||t>=u.inWidth)continue;let i=r+e*S[2],s=o+t*u.inChannels,l=i;for(let e=0;e<u.inChannels;++e){let t=v[s+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var $v={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a;Ky([r,i],"conv3dBackpropFilterV2");let u=Sr.computeStrides(r.shape),d=Sr.computeStrides(i.shape),p=Jf.computeConv3DInfo(r.shape,l,s,1,o),h=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,A=new ai(p.filterShape,"float32"),x=A.values,[b,v,w,k]=A.strides,I=n.data.get(i.dataId).values,[S,N,C,T]=d,R=n.data.get(r.dataId).values,[E,$,M,F]=u,_=p.padInfo.front,P=p.padInfo.left,O=p.padInfo.top;for(let D=0;D<m;++D){let e=Math.max(0,Math.ceil((_-D)/h)),t=Math.min(p.outDepth,(p.inDepth+_-D)/h),n=D*b;for(let a=0;a<g;++a){let r=Math.max(0,Math.ceil((O-a)/c)),i=Math.min(p.outHeight,(p.inHeight+O-a)/c),s=a*v+n;for(let n=0;n<y;++n){let o=Math.max(0,Math.ceil((P-n)/f)),l=Math.min(p.outWidth,(p.inWidth+P-n)/f),u=n*w+s;for(let s=0;s<p.inChannels;++s){let d=s*k+u;for(let u=0;u<p.outChannels;++u){let m=0;for(let d=0;d<p.batchSize;++d){let p=d*E,g=d*S;for(let d=e;d<t;++d){let e=(D+d*h-_)*$+p,t=d*N+g;for(let d=r;d<i;++d){let r=(a+d*c-O)*M+e,i=d*C+t;for(let e=o;e<l;++e){let t=e*T+i;m+=R[(n+e*f-P)*F+r+s]*I[t+u]}}}}x[d+u]=m}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};var Mv={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a;Ky([r],"conv3dBackpropInputV2");let u=Sr.computeStrides(r.shape),d=Sr.computeStrides(i.shape),p=Jf.computeConv3DInfo(l,i.shape,o,1,s),h=new ai(p.inShape,"float32"),c=h.values,[f,m,g,y]=h.strides,A=n.data.get(r.dataId).values,[x,b,v,w]=u,k=n.data.get(i.dataId).values,[I,S,N,C]=d,{batchSize:T,filterDepth:R,filterHeight:E,filterWidth:$,inChannels:M,inDepth:F,inHeight:_,inWidth:P,outChannels:O,outDepth:D,outHeight:z,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:V}=p,U=R-1-p.padInfo.front,G=E-1-p.padInfo.top,H=$-1-p.padInfo.left;for(let j=0;j<T;++j)for(let e=0;e<M;++e)for(let t=0;t<F;++t){let n=t-U,a=Math.max(0,Math.ceil(n/W)),r=Math.min(D,(R+n)/W);for(let i=0;i<_;++i){let s=i-G,o=Math.max(0,Math.ceil(s/B)),l=Math.min(z,(E+s)/B);for(let u=0;u<P;++u){let d=u-H,p=Math.max(0,Math.ceil(d/V)),h=Math.min(L,($+d)/V),T=0;for(let t=a;t<r;++t){let a=t*W-n;for(let n=o;n<l;++n){let r=n*B-s;for(let i=p;i<h;++i){let s=x*j+b*t+v*n+w*i,o=I*(R-1-a)+S*(E-1-r)+N*($-1-(i*V-d))+C*e;for(let e=0;e<O;++e){T+=A[s+e]*k[o+e]}}}}c[f*j+m*t+g*i+y*u+e]=T}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Fv=IA("Cos",e=>Math.cos(e)),_v={kernelName:"Cos",backendName:"cpu",kernelFunc:Fv},Pv=IA(Et,e=>Math.cosh(e)),Ov={kernelName:Et,backendName:"cpu",kernelFunc:Pv};var Dv={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[d,p,h,c]=r.shape,f=i.shape[0],[m,g]=o,y=mo([f,m,g,c],"float32"),A=n.data.get(i.dataId).values,x=n.data.get(s.dataId).values,b=n.data.get(r.dataId).values,v=Sr.computeStrides(r.shape),w=Sr.computeStrides(y.shape);for(let k=0;k<f;k++){let e=4*k,t=A[e],n=A[e+1],a=A[e+2],r=A[e+3],i=x[k];if(i>=d)continue;let s=m>1?(a-t)*(p-1)/(m-1):0,o=g>1?(r-n)*(h-1)/(g-1):0;for(let d=0;d<m;d++){let e=m>1?t*(p-1)+d*s:.5*(t+a)*(p-1);if(e<0||e>p-1)for(let t=0;t<g;t++)for(let e=0;e<c;e++){let n=e+t*w[2]+d*w[1]+k*w[0];y.values[n]=u}else if("bilinear"===l){let t=Math.floor(e),a=Math.ceil(e),s=e-t;for(let e=0;e<g;e++){let l=g>1?n*(h-1)+e*o:.5*(n+r)*(h-1);if(l<0||l>h-1){for(let t=0;t<c;t++){let n=t+e*w[2]+d*w[1]+k*w[0];y.values[n]=u}continue}let p=Math.floor(l),f=Math.ceil(l),m=l-p;for(let n=0;n<c;n++){let r=n+p*v[2]+t*v[1]+i*v[0],o=b[r];r=n+f*v[2]+t*v[1]+i*v[0];let l=b[r];r=n+p*v[2]+a*v[1]+i*v[0];let u=b[r];r=n+f*v[2]+a*v[1]+i*v[0];let h=o+(l-o)*m,c=u+(b[r]-u)*m;r=n+e*w[2]+d*w[1]+k*w[0],y.values[r]=h+(c-h)*s}}}else for(let t=0;t<g;++t){let a=g>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(a<0||a>h-1){for(let e=0;e<c;e++){let n=e+t*w[2]+d*w[1]+k*w[0];y.values[n]=u}continue}let s=Math.round(a),l=Math.round(e);for(let e=0;e<c;e++){let n=e+s*v[2]+l*v[1]+i*v[0],a=e+t*w[2]+d*w[1]+k*w[0];y.values[a]=b[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var zv={kernelName:$t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;Ky(r,"cumprod");let l=Jf.getAxesPermutation([i],r.shape.length),u=r;null!=l&&(u=Sx({inputs:{x:r},backend:n,attrs:{perm:l}}));let d=Jf.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=yi(u.dtype,"int32"),h=Sr.makeOnesTypedArray(Sr.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)h[t]=s?1:c[t];else{let n=m(y,e-1);h[t]=s?c[n]*h[n]:c[t]*h[n]}}let g=n.makeTensorInfo(u.shape,p,h);if(null!=l){let e=Sx({inputs:{x:g},backend:n,attrs:{perm:Jf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var Lv={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;Ky(r,"cumsum");let l=Jf.getAxesPermutation([i],r.shape.length),u=r;null!=l&&(u=Sx({inputs:{x:r},backend:n,attrs:{perm:l}}));let d=Jf.getInnerMostAxes(1,r.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);let p=yi(u.dtype,"int32"),h=Sr.makeZerosTypedArray(Sr.sizeFromShape(u.shape),p),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<c.length;y+=f)for(let e=0;e<f;e++){let t=m(y,e);if(0===e)h[t]=s?0:c[t];else{let n=m(y,e-1);h[t]=s?c[n]+h[n]:c[t]+h[n]}}let g=n.makeTensorInfo(u.shape,p,h);if(null!=l){let e=Sx({inputs:{x:g},backend:n,attrs:{perm:Jf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var Wv={kernelName:_t,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a;if(1===r.shape.length){let e=AA(n.data.get(r.dataId).values,n.data.get(i.dataId).values,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,e)}if(2===r.shape.length){let e=xA(n.bufferSync(r),n.bufferSync(i),s,o);return n.makeTensorInfo(e.shape,i.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};var Bv={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a;Sr.assert("NHWC"===s,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${s}`);let o=r.shape[0],l=r.shape[1],u=r.shape[2],d=r.shape[3],p=l*i,h=u*i,c=d/(i*i),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*h*c),g=0;for(let y=0;y<o;++y)for(let e=0;e<p;++e){let t=Math.floor(e/i),n=e%i;for(let e=0;e<h;++e){let a=Math.floor(e/i),r=(n*i+e%i)*c;for(let e=0;e<c;++e){let n=e+r+d*(a+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,p,h,c],r.dtype,m)}};function Vv(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l,dimRoundingMode:u}=a;Ky([r,i],"depthwiseConv2DNative");let d=Sr.computeStrides(r.shape),p=Sr.computeStrides(i.shape),h=l;null==h&&(h=[1,1]),Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${h}'`);let c=Jf.computeConv2DInfo(r.shape,i.shape,s,h,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=c,x=A.left,b=A.top,v=c.outChannels/c.inChannels,w=new ai(c.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(i.dataId).values,S=w.values;for(let N=0;N<c.batchSize;++N){let e=N*d[0],t=N*w.strides[0];for(let n=0;n<c.outHeight;++n){let a=t+n*w.strides[1],r=n*c.strideHeight-b;for(let t=0;t<f;++t){let n=r+t*g;if(n<0||n>=c.inHeight)continue;let i=t*p[0],s=e+n*d[1];for(let e=0;e<c.outWidth;++e){let t=a+e*w.strides[2],n=e*c.strideWidth-x;for(let e=0;e<m;++e){let a=n+e*y;if(a<0||a>=c.inWidth)continue;let r=i+e*p[1],o=s+a*c.inChannels,l=t,u=r;for(let e=0;e<c.inChannels;++e){let t=k[o+e];for(let e=0;e<v;++e)S[l+e]+=t*I[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var Uv={kernelName:Ot,backendName:"cpu",kernelFunc:Vv};var Gv={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a;Ky([r,i],"depthwiseConv2dNativeBackpropFilter");let p=Jf.computeConv2DInfo(r.shape,d,s,o,l,u,!0),{strideHeight:h,strideWidth:c,filterHeight:f,filterWidth:m}=p,g=new ai(p.filterShape,"float32"),y=p.padInfo.left,A=p.padInfo.top,x=p.outChannels/p.inChannels,b=n.data.get(r.dataId).values,v=new ai(r.shape,r.dtype,b),w=n.data.get(i.dataId).values,k=new ai(i.shape,i.dtype,w);for(let I=0;I<f;++I){let e=Math.max(0,Math.ceil((A-I)/h)),t=Math.min(p.outHeight,(p.inHeight+A-I)/h);for(let n=0;n<m;++n){let a=Math.max(0,Math.ceil((y-n)/c)),r=Math.min(p.outWidth,(p.inWidth+y-n)/c);for(let i=0;i<p.outChannels;++i){let s=Math.trunc(i/x),o=i%x,l=0;for(let u=0;u<p.batchSize;++u)for(let o=e;o<t;++o){let e=I+o*h-A;for(let t=a;t<r;++t){let a=n+t*c-y;l+=v.get(u,e,a,s)*k.get(u,o,t,i)}}g.set(l,I,n,s,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var Hv={kernelName:zt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a;Ky([r,i],"depthwiseConv2DNativeBackpropInput");let p=Sr.computeStrides(r.shape),h=Sr.computeStrides(i.shape),c=Jf.computeConv2DInfo(d,i.shape,s,o,l,u,!0),f=new ai(c.inShape,"float32"),m=f.values,[g,y,A]=f.strides,x=n.data.get(r.dataId).values,[b,v,w]=p,k=n.data.get(i.dataId).values,[I,S,N]=h,{batchSize:C,filterHeight:T,filterWidth:R,inChannels:E,inHeight:$,inWidth:M,outChannels:F,outHeight:_,outWidth:P,strideHeight:O,strideWidth:D}=c,z=T-1-c.padInfo.top,L=R-1-c.padInfo.left,W=F/E;for(let B=0;B<C;++B)for(let e=0;e<E;++e)for(let t=0;t<$;++t){let n=t-z,a=Math.max(0,Math.ceil(n/O)),r=Math.min(_,(T+n)/O);for(let i=0;i<M;++i){let s=i-L,o=Math.max(0,Math.ceil(s/D)),l=Math.min(P,(R+s)/D),u=0;for(let t=a;t<r;++t){let a=t*O-n;for(let n=o;n<l;++n){let r=b*B+v*t+w*n,i=I*(T-1-a)+S*(R-1-(n*D-s))+N*e;for(let t=0;t<W;++t){u+=x[r+(e*W+t)]*k[i+t]}}}m[g*B+y*t+A*i+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var jv={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=Sr.sizeFromShape(a.shape),i=n.data.get(a.dataId).values,s=mo([r,r],a.dtype),o=s.values;for(let u=0;u<i.length;u++)o[u*r+u]=i[u];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,s.dtype,s.values)}},qv={kernelName:Wt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=n,d=u.data.get(r.dataId).values,p=r.shape.length,h=u.data.get(i.dataId).values,c=i.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:A,outWidth:x,padInfo:b,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:C}=Jf.computeDilation2DInfo(r.shape,i.shape,s,o,"NHWC",l),T=Sr.sizeFromShape(C),R=C.length,E=Sr.getArrayFromDType(r.dtype,T);for(let $=0;$<f;++$)for(let e=0;e<A;++e){let t=e*v-b.top;for(let n=0;n<x;++n){let a=n*w-b.left;for(let s=0;s<y;++s){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){let n=t+e*S;if(n>=0&&n<m)for(let t=0;t<I;++t){let l=a+t*N;if(l>=0&&l<g){let a=Sr.locToIndex([$,n,l,s],p,Sr.computeStrides(r.shape)),u=Sr.locToIndex([e,t,s],c,Sr.computeStrides(i.shape)),f=d[a]+h[u];f>o&&(o=f)}}}E[Sr.locToIndex([$,e,n,s],R,Sr.computeStrides(C))]=o}}}return{dataId:u.write(Sr.toTypedArray(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},Xv={kernelName:Vt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a,d=n,p=Sr.toNestedArray(r.shape,d.data.get(r.dataId).values),h=Sr.toNestedArray(i.shape,d.data.get(i.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Jf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u);Sr.assert(s.rank===N.length,()=>`Error in ${Vt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let C=Sr.toNestedArray(N,d.data.get(s.dataId).values),T=Sr.makeZerosNestedTypedArray(i.shape,i.dtype);for(let R=0;R<c;++R)for(let e=0;e<y;++e){let t=e*b-x.top;for(let n=0;n<A;++n){let a=n*v-x.left;for(let r=0;r<g;++r){let i=Number.MIN_SAFE_INTEGER,s=0,o=0;for(let e=0;e<w;++e){let n=t+e*I;if(n>=0&&n<f)for(let t=0;t<k;++t){let l=a+t*S;if(l>=0&&l<m){let a=p[R][n][l][r]+h[e][t][r];a>i&&(i=a,s=e,o=t)}}}T[s][o][r]+=C[R][e][n][r]}}}return{dataId:d.write(Sr.toTypedArray(T,r.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},Kv={kernelName:Bt,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a,d=n,p=Sr.toNestedArray(r.shape,d.data.get(r.dataId).values),h=Sr.toNestedArray(i.shape,d.data.get(i.dataId).values),{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=Jf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u);Sr.assert(s.rank===N.length,()=>`Error in ${Bt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let C=Sr.toNestedArray(N,d.data.get(s.dataId).values),T=Sr.makeZerosNestedTypedArray(r.shape,r.dtype);for(let R=0;R<c;++R)for(let e=0;e<y;++e){let t=e*b-x.top;for(let n=0;n<A;++n){let a=n*v-x.left;for(let r=0;r<g;++r){let i=Number.MIN_SAFE_INTEGER,s=t<0?0:t,o=a<0?0:a;for(let e=0;e<w;++e){let n=t+e*I;if(n>=0&&n<f)for(let t=0;t<k;++t){let l=a+t*S;if(l>=0&&l<m){let a=p[R][n][l][r]+h[e][t][r];a>i&&(i=a,s=n,o=l)}}}T[R][s][o][r]+=C[R][e][n][r]}}}return{dataId:d.write(Sr.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var Zv={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:i,options:s}=a,{contextOptions:o,imageOptions:l}=s||{},u=(null==l?void 0:l.alpha)||1,d=(null==o?void 0:o.contextType)||"2d";if("2d"!==d)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let p=i.getContext(d,(null==o?void 0:o.contextAttributes)||{});if(null==p)throw new Error(`Could not get the context with ${d} type.`);let[h,c]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(c*h*4);for(let x=0;x<h*c;++x){let e=[0,0,0,255*u];for(let n=0;n<f;n++){let t=m[x*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===r.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}let t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}i.width=c,i.height=h;let A=new ImageData(y,c,h);return p.putImageData(A,0,0),r}};function Yv(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r;Ky(i,"sum"),t="bool"===i.dtype?dA({inputs:{x:i},backend:a,attrs:{dtype:"int32"}}):iA({inputs:{x:i},backend:a});let l=t.shape.length,u=Sr.parseAxisParam(s,t.shape),d=Jf.getAxesPermutation(u,l),p=u,h=t;null!=d&&(h=Sx({inputs:{x:t},backend:a,attrs:{perm:d}}),p=Jf.getInnerMostAxes(p.length,l)),Jf.assertAxesAreInnerMostDims("sum",p,h.shape.length);let[c,f]=Jf.computeOutAndReduceShapes(h.shape,p),m=rA(a,c,Jf.upcastType(h.dtype,"int32")),g=Sr.sizeFromShape(f),y=a.data.get(m.dataId).values,A=a.data.get(h.dataId).values;for(let x=0;x<y.length;++x){let e=x*g,t=0;for(let n=0;n<g;++n)t+=A[e+n];y[x]=t}if(o){let e=m;m=Db({inputs:{x:m},backend:a,attrs:{shape:Jf.expandShapeToKeepDim(m.shape,u)}}),a.disposeIntermediateTensorInfo(e)}return a.disposeIntermediateTensorInfo(t),null!=d&&a.disposeIntermediateTensorInfo(h),m}var Jv={kernelName:"Sum",backendName:"cpu",kernelFunc:Yv};var Qv={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,i=t,{allDims:s,summedDims:o,idDims:l}=Jf.decodeEinsumEquation(r,i.length);Jf.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:d}=Jf.getEinsumComputePath(o,l),p=d.length,h=null,c=s.length,f=[];for(let m=0;m<p;++m){for(let e of d[m]){let t,{permutationIndices:a,expandDims:r}=Jf.getEinsumPermutation(c,l[e]);Jf.isIdentityPermutation(a)?t=i[e]:(t=Sx({inputs:{x:i[e]},backend:n,attrs:{perm:a}}),f.push(t));let s=t.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Sr.arraysEqual(t.shape,s)||(t=Db({inputs:{x:t},backend:n,attrs:{shape:s}}),f.push(t)),null===h?h=t:(h=yx({inputs:{a:t,b:h},backend:n}),f.push(h))}m<p-1&&(u[m]>=0&&(h=Yv({inputs:{x:h},backend:n,attrs:{axis:u[m]-(s.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}};var ew={kernelName:qt,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;Ky([a,r],"eluGrad");let i=new Float32Array(Sr.sizeFromShape(r.shape)),s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let l=0;l<s.length;++l){let e=s[l];i[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(r.shape,"float32",i)}},tw=Jf.ERF_P,nw=Jf.ERF_A1,aw=Jf.ERF_A2,rw=Jf.ERF_A3,iw=Jf.ERF_A4,sw=Jf.ERF_A5,ow=IA("Erf",e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+tw*n);return t*(1-((((sw*a+iw)*a+rw)*a+aw)*a+nw)*a*Math.exp(-n*n))}),lw={kernelName:"Erf",backendName:"cpu",kernelFunc:ow};function uw(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:i}=a,s=r.shape.length,o=r.shape.slice(),l=i;return i<0&&(Sr.assert(-(s+1)<=i,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+i+1),o.splice(l,0,1),Db({inputs:{x:r},backend:n,attrs:{shape:o}})}var dw={kernelName:Yt,backendName:"cpu",kernelFunc:uw},pw=tA((e,t)=>e/t),hw=hA(Gt,pw),cw={kernelName:Gt,backendName:"cpu",kernelFunc:hw};function fw(e,t,n){let a=e.shape,r=a[0],i=a[1],s=n.data.get(e.dataId),o=s.complexTensorInfos.real,l=s.complexTensorInfos.imag,u=[r,i],d=Sr.sizeFromShape(u),p=Sr.getTypedArrayFromDType("float32",d),h=Sr.getTypedArrayFromDType("float32",d);for(let g=0;g<r;g++){let e=Kx({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,i]}}),a=Kx({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,i]}}),r=nA({inputs:{real:e,imag:a},backend:n}),{real:s,imag:u}=mw(r,t,n),d=Jf.mergeRealAndImagArrays(s,u);for(let t=0;t<i;t++){let e=Jf.getComplexWithIndex(d,t);p[g*i+t]=e.real,h[g*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}let c=n.makeTensorInfo(u,"float32",p),f=n.makeTensorInfo(u,"float32",h),m=nA({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function mw(e,t,n){let a=Sr.sizeFromShape(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,s=n.data.get(r.complexTensorInfos.imag.dataId).values;if(function(e){return 0===(e&e-1)}(a)){let r=gw(i,s,a,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",Sr.createScalarValue(a,"float32")),s=iA({inputs:{x:i},backend:n}),l=cw.kernelFunc({inputs:{a:e,b:i},backend:n}),u=cw.kernelFunc({inputs:{a:t,b:s},backend:n}),d=n.data.get(l.dataId).values,p=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:d,imag:p}}return r}{let e=function(e,t,n){let a=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,s=0;for(let a=0;a<t;a++){let o=Jf.exponent(r*a,t,n),l=Jf.getComplexWithIndex(e,a);i+=l.real*o.real-l.imag*o.imag,s+=l.real*o.imag+l.imag*o.real}n&&(i/=t,s/=t),Jf.assignToTypedArray(a,i,s,r)}return a}(Jf.mergeRealAndImagArrays(i,s),a,t);return Jf.splitRealAndImagArrays(e)}}function gw(e,t,n,a,r){if(1===n)return{real:e,imag:t};let i=Jf.mergeRealAndImagArrays(e,t),s=n/2,o=Jf.complexWithEvenIndex(i),l=o.real,u=o.imag,d=[l.length],p=r.makeTensorInfo(d,"float32",l),h=r.makeTensorInfo(d,"float32",u),c=nA({inputs:{real:p,imag:h},backend:r}),f=Jf.complexWithOddIndex(i),m=f.real,g=f.imag,y=[m.length],A=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),b=nA({inputs:{real:A,imag:x},backend:r}),v=gw(l,u,s,a,r),w=v.real,k=v.imag,I=[w.length],S=r.makeTensorInfo(I,"float32",w),N=r.makeTensorInfo(I,"float32",k),C=nA({inputs:{real:S,imag:N},backend:r}),T=gw(m,g,s,a,r),R=T.real,E=T.imag,$=[R.length],M=r.makeTensorInfo($,"float32",R),F=r.makeTensorInfo($,"float32",E),_=nA({inputs:{real:M,imag:F},backend:r}),P=Jf.exponents(n,a),O=[P.real.length],D=r.makeTensorInfo(O,"float32",P.real),z=r.makeTensorInfo(O,"float32",P.imag),L=nA({inputs:{real:D,imag:z},backend:r}),W=yx({inputs:{a:L,b:_},backend:r}),B=gA({inputs:{a:C,b:W},backend:r}),V=yb({inputs:{a:C,b:W},backend:r}),U=oA({inputs:{input:B},backend:r}),G=oA({inputs:{input:V},backend:r}),H=wv({inputs:{input:B},backend:r}),j=wv({inputs:{input:V},backend:r}),q=Iv({inputs:[U,G],backend:r,attrs:{axis:0}}),X=Iv({inputs:[H,j],backend:r,attrs:{axis:0}}),K=r.data.get(q.dataId).values,Z=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:K,imag:Z}}var yw={kernelName:"FFT",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=Sr.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],s=Db({inputs:{x:a},backend:n,attrs:{shape:[r/i,i]}}),o=fw(s,!1,n),l=Db({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),l}};function Aw(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:i}=n,s=i||Sr.inferDtype(r),o=Sr.getArrayFromDType(s,Sr.sizeFromShape(a));return function(e,t){e.fill(t)}(o,r),t.makeTensorInfo(a,s,o)}var xw={kernelName:en,backendName:"cpu",kernelFunc:Aw};var bw={kernelName:tn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{image:r}=t,i=a,s=Sr.getTypedArrayFromDType(r.dtype,Sr.sizeFromShape(r.shape)),[o,l,u,d]=r.shape,p=i.data.get(r.dataId).values;for(let h=0;h<o;h++){let e=h*u*l*d;for(let t=0;t<l;t++){let n=t*(u*d);for(let t=0;t<u;t++){let a=t*d;for(let r=0;r<d;r++){let i=Math.round(u-t-1),o=e+n+a+r,l=p[o];if(i>=0&&i<u){l=p[e+n+i*d+r]}s[o]=l}}}}return{dataId:i.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var vw={kernelName:dr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=Nv({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});if(s){let e=m;if("NCHW"===d&&1===s.shape.length&&1!==s.shape[0]){let e=Db({inputs:{x:s},backend:n,attrs:{shape:[s.shape[0],1,1]}});m=gA({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=gA({inputs:{a:m,b:s},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===d&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=Db({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Ob(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=Ob(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}};var ww={kernelName:pr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=Vv({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h}});if(s){let e=m;m=gA({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=Ob(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var kw={kernelName:on,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=Sr.sizeFromShape(a.shape),s=r.shape,o=s[s.length-1],[l,u,d,p]=Jf.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);let h=HA(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,d,p,a.shape,i);return n.makeTensorInfo(l,a.dtype,h.values)}};var Iw={kernelName:sn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a;Ky([r,i],"gatherV2");let l=Sr.parseAxisParam(s,r.shape)[0],u=n.data.get(i.dataId).values,d=r.shape[l];for(let x=0;x<u.length;++x){let e=u[x];Sr.assert(e<=d-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`)}let p=o;null==o&&(p=0);let h=Sr.sizeFromShape(i.shape),c=Jf.segment_util.collectGatherOpShapeInfo(r,i,l,p),f=Db({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Db({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=n.bufferSync(m),A=jA(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,A.dtype,A.values)}};var Sw={kernelName:pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t,r=Sr.sizeFromShape(a.shape),i=a.shape[a.shape.length-1],s=Db({inputs:{x:a},backend:n,attrs:{shape:[r/i,i]}}),o=fw(s,!0,n),l=Db({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),l}},Nw=IA(cn,e=>Number.isFinite(e)?1:0,"bool"),Cw={kernelName:cn,backendName:"cpu",kernelFunc:Nw},Tw=IA(fn,e=>Math.abs(e)===1/0?1:0,"bool"),Rw={kernelName:fn,backendName:"cpu",kernelFunc:Tw},Ew=IA(mn,e=>Number.isNaN(e)?1:0,"bool"),$w={kernelName:mn,backendName:"cpu",kernelFunc:Ew};var Mw={kernelName:xn,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=ix(a,r,i);return t.makeTensorInfo([s.length],"float32",s)}},Fw=IA(vn,e=>Math.log1p(e)),_w={kernelName:vn,backendName:"cpu",kernelFunc:Fw},Pw=tA((e,t)=>e&&t),Ow=hA(wn,Pw,null,"bool"),Dw={kernelName:wn,backendName:"cpu",kernelFunc:Ow},zw=IA(kn,e=>e?0:1,"bool"),Lw={kernelName:kn,backendName:"cpu",kernelFunc:zw},Ww=tA((e,t)=>e||t),Bw=hA(In,Ww,null,"bool"),Vw={kernelName:In,backendName:"cpu",kernelFunc:Bw};var Uw={kernelName:"LRN",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a;Ky(r,"LRN");let u=r.shape[3],d=u-1,p=n.data.get(r.dataId).values,h=Sr.sizeFromShape(r.shape),c=new Float32Array(h);function f(e){let t=e%u,n=e-t+Math.max(0,t-i),a=e-t+Math.min(t+i,d),r=0;for(;n<=a;n++){let e=p[n];r+=e*e}return r}for(let m=0;m<h;m++){let e=f(m),t=p[m]*Math.pow(s+o*e,-l);c[m]=t}return n.makeTensorInfo(r.shape,r.dtype,c)}};var Gw={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a;Ky(s,"LRNGrad");let p=Sr.sizeFromShape(s.shape),h=s.shape[3],c=n.data.get(s.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(i.dataId).values,g=new Float32Array(p),y=p;for(let A=0;A<y;A++){let e=A%h,t=A-e+Math.max(0,e-o),n=A-e+Math.min(h,e+o+1),a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=u*a+l;for(let r=t;r<n;r++){let e=-2*u*d*f[r]*m[A]/a;A===r&&(e+=Math.pow(a,-d)),e*=c[A],g[r]+=e}}return n.makeTensorInfo(s.shape,r.dtype,g)}};function Hw(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a,o=n,l=r.shape,u=l.length,d=Sr.parseAxisParam(i,l),p=d,h=Jf.getAxesPermutation(p,u),c=o.data.get(r.dataId).values;if(null!=h){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[h[t]];c=Ix(c,l,r.dtype,h,e),p=Jf.getInnerMostAxes(p.length,u),l=e}Ky(r,"max"),Jf.assertAxesAreInnerMostDims("max",p,u);let[f,m]=Jf.computeOutAndReduceShapes(l,p),g=lx(c,Sr.sizeFromShape(m),f,r.dtype),y=o.write(g,f,r.dtype),A=f;return s&&(A=Jf.expandShapeToKeepDim(f,d)),{dataId:y,shape:A,dtype:r.dtype}}var jw={kernelName:"Max",backendName:"cpu",kernelFunc:Hw};var qw={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Ky(r,"maxPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let u,d=Jf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===d.filterWidth&&1===d.filterHeight&&Sr.arraysEqual(d.inShape,d.outShape))u=iA({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=Sr.computeStrides(r.shape),a=lv(e,r.shape,r.dtype,t,d,"max");u=n.makeTensorInfo(d.outShape,r.dtype,a.values)}return u}};var Xw={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a;Ky(r,"maxPool3d");let d=Jf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=dv(n.data.get(r.dataId).values,r.shape,r.dtype,Sr.computeStrides(r.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}};var Kw={kernelName:On,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a;Ky([r,i],"maxPool3DGrad");let d=Jf.computePool3DInfo(i.shape,s,o,1,l,u),p=function(e,t){let n=mo(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let A=y*a-h,x=A;for(;x<0;)x+=s;let b=Math.min(t.inDepth,u+A);for(let a=0;a<t.outHeight;++a){let u=a*r-c,h=u;for(;h<0;)h+=o;let v=Math.min(t.inHeight,d+u);for(let r=0;r<t.outWidth;++r){let c=r*i-f,w=c;for(;w<0;)w+=l;let k=Math.min(t.inWidth,p+c),I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<b;t+=s){let n=t-A;for(let a=h;a<v;a+=o){let r=a-u;for(let i=w;i<k;i+=l){let s=i-c,o=e.get(m,t,a,i,g);o>=I&&(I=o,S=n*d*p+r*d+s)}}}n.set(S,m,y,a,r,g)}}}return n}(n.bufferSync(i),d),h=d.strideDepth,c=d.strideHeight,f=d.strideWidth,m=d.dilationDepth,g=d.dilationHeight,y=d.dilationWidth,A=d.effectiveFilterDepth,x=d.effectiveFilterHeight,b=d.effectiveFilterWidth,v=A-1-d.padInfo.front,w=b-1-d.padInfo.left,k=x-1-d.padInfo.top,I=mo(i.shape,"float32"),S=n.bufferSync(r);for(let N=0;N<d.batchSize;++N)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inDepth;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){let r=t-v,i=n-k,s=a-w,o=0;for(let t=0;t<A;t+=m){let n=(r+t)/h;if(!(n<0||n>=d.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){let r=(i+a)/c;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let i=0;i<b;i+=y){let l=(s+i)/f;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;let u=A*x*b-1-p.get(N,n,r,l,e)===t*x*b+a*b+i?1:0;0!==u&&(o+=S.get(N,n,r,l,e)*u)}}}I.set(o,N,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var Zw={kernelName:_n,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t,o=i;Ky([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,h=Jf.computePool2DInfo(o.shape,l,u,1,d,p),c=n.data.get(o.dataId).values,f=mo(h.outShape,o.dtype,uv(c,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,A=h.dilationWidth,x=h.effectiveFilterHeight,b=h.effectiveFilterWidth,v=b-1-h.padInfo.left,w=x-1-h.padInfo.top,k=mo(o.shape,"float32"),I=n.data.get(r.dataId).values,S=mo(r.shape,"float32",I);for(let N=0;N<h.batchSize;++N)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){let a=t-w,r=n-v,i=0;for(let t=0;t<x;t+=y){let n=(a+t)/m;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let a=0;a<b;a+=A){let s=(r+a)/g;if(s<0||s>=h.outWidth||Math.floor(s)!==s)continue;let o=x*b-1-f.get(N,n,s,e)===t*b+a?1:0;0!==o&&(i+=S.get(N,n,s,e)*o)}}k.set(i,N,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};var Yw={kernelName:Dn,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,includeBatchInIndex:l}=n,u=a;Ky(r,"MaxPoolWithArgmax");let d=u.data.get(r.dataId).values,p=Jf.computePool2DInfo(r.shape,i,s,[1,1],o),[h,c]=function(e,t,n,a,r){let i=lv(e,0,n,Sr.computeStrides(t),r,"max"),s=uv(e,t,n,r,!0,a);return[i.values,s.values]}(d,r.shape,r.dtype,l,p),f=u.write(h,p.outShape,r.dtype),m=u.write(c,p.outShape,r.dtype);return[{dataId:f,shape:p.outShape,dtype:r.dtype},{dataId:m,shape:p.outShape,dtype:"int32"}]}};var Jw={kernelName:zn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=Sr.parseAxisParam(i,r.shape),l=Jf.computeOutAndReduceShapes(r.shape,o)[1],u=Sr.sizeFromShape(l),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([u]));d.push(p);let h=dA({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});d.push(h);let c=hw({inputs:{a:h,b:p},backend:n});d.push(c);let f=Yv({inputs:{x:c},backend:n,attrs:{axis:i,keepDims:s}});return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};var Qw={kernelName:"Min",backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;Ky(r,"min");let o=Sr.parseAxisParam(i,r.shape),l=o,u=Jf.getAxesPermutation(l,r.shape.length),d=r;null!=u&&(d=Sx({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Jf.getInnerMostAxes(l.length,r.shape.length)),Jf.assertAxesAreInnerMostDims("min",l,d.shape.length);let[p,h]=Jf.computeOutAndReduceShapes(d.shape,l),c=Sr.sizeFromShape(h),f=Sr.makeZerosTypedArray(Sr.sizeFromShape(p),d.dtype),m=n.data.get(d.dataId).values;for(let y=0;y<f.length;++y){let e=y*c,t=m[e];for(let n=0;n<c;++n){let a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(d);let g=n.makeTensorInfo(p,d.dtype,f);if(s){let e=Db({inputs:{x:g},backend:n,attrs:{shape:Jf.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var ek={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,mode:s}=a;Ky(r,"mirrorPad");let o=i.map((e,t)=>e[0]+r.shape[t]+e[1]),l=i.map(e=>e[0]),u=i.map((e,t)=>e[0]+r.shape[t]),d="reflect"===s?0:1,p=n.data.get(r.dataId).values,h=r.shape.length,c=Sr.computeStrides(r.shape),f=Sr.sizeFromShape(o),m=o.length,g=Sr.computeStrides(o),y=Sr.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let e=Sr.indexToLoc(A,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-d:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+d);e=e.map((e,t)=>e-l[t]);let t=Sr.locToIndex(e,h,c);y[A]=p[t]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},tk=tA((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),nk={kernelName:"Mod",backendName:"cpu",kernelFunc:hA("Mod",tk)},ak=v(F());function rk(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=r.shape.length,o=i;if(-1===o&&(o=s-1),o!==s-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s} and dim was ${o}`);let l=Sr.parseAxisParam([o],r.shape),u=Hw({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),d=Jf.expandShapeToKeepDim(u.shape,l),p=Db({inputs:{x:u},backend:n,attrs:{shape:d}}),h=yb({inputs:{a:r,b:p},backend:n}),c=_A({inputs:{x:h},backend:n}),f=Yv({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=Db({inputs:{x:f},backend:n,attrs:{shape:d}}),g=hw({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var ik={kernelName:Pa,backendName:"cpu",kernelFunc:rk};var sk={kernelName:Un,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a;Ky(r,"multinomial");let l=o?r:rk({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],p=n.data.get(l.dataId).values,h=[u,i],c=Sr.makeZerosTypedArray(Sr.sizeFromShape(h),"int32");for(let f=0;f<u;++f){let e=f*d,t=new Float32Array(d-1);t[0]=p[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+p[e+r];let n=ak.alea(s.toString()),a=f*i;for(let r=0;r<i;++r){let e=n();c[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){c[a+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(h,"int32",c)}},ok=sg.nonMaxSuppressionV3Impl;var lk={kernelName:qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=a;Ky(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,{selectedIndices:p}=ok(u,d,s,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},uk=sg.nonMaxSuppressionV4Impl;var dk={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;Ky(r,"NonMaxSuppressionPadded");let d=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,{selectedIndices:h,validOutputs:c}=uk(d,p,s,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},pk=sg.nonMaxSuppressionV5Impl;var hk={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;Ky(r,"NonMaxSuppressionWithScore");let d=n.data.get(r.dataId).values,p=n.data.get(i.dataId).values,h=s,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=pk(d,p,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var ck={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a;Ky(r,"oneHot");let u=Sr.sizeFromShape(r.shape),d=new Float32Array(u*s);d.fill(l);let p=n.data.get(r.dataId).values;for(let h=0;h<u;++h)p[h]>=0&&p[h]<s&&(d[h*s+p[h]]=o);return n.makeTensorInfo([...r.shape,s],i,d)}};function fk(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){let e=oA({inputs:{input:a},backend:n}),t=fk({inputs:{x:e},backend:n}),r=wv({inputs:{input:a},backend:n}),i=fk({inputs:{x:r},backend:n}),s=nA({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),s}return Aw({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var mk={kernelName:ir,backendName:"cpu",kernelFunc:fk};var gk={kernelName:Zn,backendName:"cpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){let t=oA({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=wv({inputs:{input:r},backend:a}),s=fk({inputs:{x:i},backend:a}),o=nA({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}return Aw({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function yk(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return uw({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{Sr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),Sr.assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=Iv({inputs:t.map(e=>{let t=uw({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t}),backend:n,attrs:{axis:r}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}var Ak={kernelName:Jn,backendName:"cpu",kernelFunc:yk};var xk={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;Ky(r,"pad");let o=i.map((e,t)=>e[0]+r.shape[t]+e[1]),l=i.map(e=>e[0]),u=n.data.get(r.dataId).values,d=Sr.sizeFromShape(r.shape),p=r.shape.length,h=Sr.computeStrides(r.shape),c=Sr.sizeFromShape(o),f=o.length,m=Sr.computeStrides(o),g=Sr.getTypedArrayFromDType(r.dtype,c);0!==s&&g.fill(s);for(let y=0;y<d;y++){let e=Sr.indexToLoc(y,p,h).map((e,t)=>e+l[t]);g[Sr.locToIndex(e,f,m)]=u[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},bk=tA((e,t)=>Math.pow(e,t)),vk={kernelName:"Pow",backendName:"cpu",kernelFunc:hA("Pow",bk)};var wk={kernelName:ra,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=a,l=r.map(e=>n.data.get(e.dataId).values),u=r.map(e=>e.shape),d=n.data.get(i.dataId).values,p=n.data.get(s.dataId).values,[h,c,f]=Mx(l,u,d,i.shape,i.dtype,p,s.shape),m=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,i.dtype,c);return m.concat([g])}};var kk={kernelName:ia,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:i}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,d]=_x(s,a.shape,a.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],a.dtype,d)]}};var Ik={kernelName:sa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(s.dataId).values,h=o.map(e=>n.data.get(e.dataId).values),c=o.map(e=>e.shape),[f,m]=Lx(u,r.shape,d,i.shape,i.dtype,p,s.shape,h,c,l);return n.makeTensorInfo(f,i.dtype,m)}};var Sk={kernelName:oa,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:i,step:s}=n,o=Wx(a,r,s,i);return t.makeTensorInfo([o.length],i,o)}},Nk=IA(ua,e=>1/e),Ck={kernelName:ua,backendName:"cpu",kernelFunc:Nk};var Tk={kernelName:fa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a;Ky(r,"resizeBilinear");let l=Sr.computeStrides(r.shape),[u,d]=o,[p,h,c,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(Sr.sizeFromShape([p,u,d,f])),y=[i&&u>1?h-1:h,i&&d>1?c-1:c],A=[i&&u>1?u-1:u,i&&d>1?d-1:d],x=0,b=y[0]/A[0],v=y[1]/A[1];for(let w=0;w<p;w++)for(let e=0;e<u;e++){let t;t=s?b*(e+.5)-.5:b*e;let n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(h-1,Math.ceil(t)),i=w*l[0]+n*l[1],o=w*l[0]+r*l[1];for(let e=0;e<d;e++){let t;t=s?v*(e+.5)-.5:v*e;let n=Math.max(0,Math.floor(t)),r=t-n,u=Math.min(c-1,Math.ceil(t)),d=i+n*l[2],p=o+n*l[2],h=i+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){let t=m[d+e],n=m[p+e],i=t+(m[h+e]-t)*r,s=i+(n+(m[y+e]-n)*r-i)*a;g[x++]=s}}}return n.makeTensorInfo([p,u,d,f],"float32",g)}};var Rk={kernelName:ma,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a;Ky([i,r],"resizeBilinearGrad");let o=Sr.computeStrides(r.shape),[l,u,d,p]=r.shape,[,h,c]=i.shape,f=new Float32Array(l*u*d*p),m=[s&&h>1?u-1:u,s&&c>1?d-1:d],g=[s&&h>1?h-1:h,s&&c>1?c-1:c],y=m[0]/g[0],A=m[1]/g[1],x=n.data.get(i.dataId).values,b=0;for(let v=0;v<l;v++){let e=v*o[0];for(let t=0;t<h;t++){let n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=e+a*o[1],s=e+r*o[1],l=n-a,h=1-l;for(let e=0;e<c;e++){let t=e*A,n=Math.floor(t),a=Math.min(Math.ceil(t),d-1),r=t-n,u=1-r,c=i+n*o[2],m=i+a*o[2],g=s+n*o[2],y=s+a*o[2],v=h*u,w=h*r,k=l*u,I=l*r;for(let e=0;e<p;e++){let t=x[b++];f[c+e]+=t*v,f[m+e]+=t*w,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,d,u,p],"float32",f)}};var Ek={kernelName:ha,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a;Ky(r,"resizeNearestNeighbor");let l=Sr.computeStrides(r.shape),[u,d]=o,[p,h,c,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*u*d*f),y=[i&&u>1?h-1:h,i&&d>1?c-1:c],A=[i&&u>1?u-1:u,i&&d>1?d-1:d],x=y[0]/A[0],b=y[1]/A[1],v=0;for(let w=0;w<p;w++){let e=w*l[0];for(let t=0;t<u;t++){let n=s?x*(t+.5):x*t,a=Math.min(h-1,i?Math.round(n):Math.floor(n));s&&(a=Math.max(0,a));let r=e+a*l[1];for(let e=0;e<d;e++){let t=s?b*(e+.5):b*e,n=Math.min(c-1,i?Math.round(t):Math.floor(t));s&&(n=Math.max(0,n));let a=r+n*l[2];for(let e=0;e<f;e++){let t=m[a+e];g[v++]=t}}}}return n.makeTensorInfo([p,u,d,f],r.dtype,g)}};var $k={kernelName:ca,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a;Ky([i,r],"resizeNearestNeighborGrad");let o=Sr.computeStrides(r.shape),l=Sr.computeStrides(i.shape),[u,d,p,h]=r.shape,[,c,f]=i.shape,m=new Float32Array(u*d*p*h),g=n.data.get(i.dataId).values,y=[s&&c>1?d-1:d,s&&f>1?p-1:p],A=[s&&c>1?c-1:c,s&&f>1?f-1:f],x=y[0]/A[0],b=y[1]/A[1],v=1/x,w=1/b,k=2*Math.ceil(v)+2,I=2*Math.ceil(w)+2;for(let S=0;S<u;S++){let e=S*o[0];for(let t=0;t<d;t++){let n=e+t*o[1],a=Math.floor(t*v),r=Math.floor(a-k/2);for(let i=0;i<p;i++){let a=n+i*o[2],u=Math.floor(i*w),y=Math.floor(u-I/2);for(let n=0;n<h;n++){let o=0;for(let a=0;a<k;a++){let u=a+r;if(u<0||u>=c)continue;let h=e+u*l[1],m=u*x;if(t===Math.min(d-1,s?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){let t=e+y;if(t<0||t>=f)continue;let a=h+t*l[2],r=t*b;i===Math.min(p-1,s?Math.round(r):Math.floor(r))&&(o+=g[a+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};var Mk={kernelName:ya,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a;Ky(r,"reverse");let s=r.shape.length,o=Sr.parseAxisParam(i,r.shape);if(0===s)return iA({inputs:{x:r},backend:n});let l=new ai(r.shape,r.dtype),u=n.bufferSync(r);for(let d=0;d<l.size;d++){let e=l.indexToLoc(d),t=e.slice();o.forEach(e=>t[e]=r.shape[e]-1-t[e]),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},Fk={kernelName:lr,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{image:r}=t,{radians:i,fillValue:s,center:o}=n,l=a,u=Sr.getTypedArrayFromDType(r.dtype,Sr.sizeFromShape(r.shape)),[d,p,h,c]=r.shape,[f,m]=Jf.getImageCenter(o,p,h),g=Math.sin(i),y=Math.cos(i),A=l.data.get(r.dataId).values;for(let x=0;x<d;x++){let e=x*h*p*c;for(let t=0;t<p;t++){let n=t*(h*c);for(let a=0;a<h;a++){let r=a*c;for(let i=0;i<c;i++){let o=[d,t,a,i],l=o[2],x=o[1],b=(l-f)*y-(x-m)*g,v=(l-f)*g+(x-m)*y;b=Math.round(b+f),v=Math.round(v+m);let w=s;if("number"!=typeof s&&(w=3===i?255:s[i]),b>=0&&b<h&&v>=0&&v<p){w=A[e+v*(h*c)+b*c+i]}u[e+n+r+i]=w}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},_k=IA(Aa,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Pk={kernelName:Aa,backendName:"cpu",kernelFunc:_k};var Ok={kernelName:ba,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Jf.calculateShapes(i,r,s),h=Gx(n.bufferSync(r),n.bufferSync(i),s,p,u,l,o,d,0,!0);return n.makeTensorInfo(s,h.dtype,h.values)}};function Dk(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function zk(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}var Lk={kernelName:wa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=function(e,t,n,a,r,i){let s=Sr.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let n=e.slice(o*a,(o+1)*a),l=o*r;for(let e=0;e<r;++e)s[l+e]="left"===i?Dk(n,t[e+l]):zk(n,t[e+l])}return s}(n.data.get(r.dataId).values,n.data.get(i.dataId).values,r.shape[0],r.shape[1],i.shape[1],s);return n.makeTensorInfo(i.shape,"int32",o)}};var Wk={kernelName:ka,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t;Ky([a,r,i],"select");let s=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,d=yi(r.dtype,i.dtype),p=Sr.makeZerosTypedArray(Sr.sizeFromShape(r.shape),d),h=0,c=0===s||s>1||1===r.shape.length?1:Sr.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<c;e++)1===o[f]?p[h++]=l[f]:p[h++]=u[f];return n.makeTensorInfo(r.shape,d,p)}},Bk=Jf.SELU_SCALEALPHA,Vk=Jf.SELU_SCALE,Uk=IA(Ia,e=>e>=0?Vk*e:Bk*(Math.exp(e)-1)),Gk={kernelName:Ia,backendName:"cpu",kernelFunc:Uk},Hk=IA(Ta,e=>e<0?-1:e>0?1:0),jk={kernelName:Ta,backendName:"cpu",kernelFunc:Hk},qk=IA("Sin",e=>Math.sin(e)),Xk={kernelName:"Sin",backendName:"cpu",kernelFunc:qk},Kk=IA(Ca,e=>Math.sinh(e)),Zk={kernelName:Ca,backendName:"cpu",kernelFunc:Kk},Yk=Math.log(1.1920928955078125e-7)+2,Jk=IA(Ea,e=>{let t,n=e>-Yk,a=e<Yk,r=Math.exp(e);return t=a?r:n?e:Math.log(1+r),t}),Qk={kernelName:Ea,backendName:"cpu",kernelFunc:Jk};var eI={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;Ky([r],"spaceToBatchND");let o=Sr.sizeFromShape(i),l=[[0,0]];l.push(...s);for(let g=1+i.length;g<r.shape.length;++g)l.push([0,0]);let u=xk.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=Jf.getReshaped(u.shape,i,o,!1),p=Jf.getPermuted(d.length,i.length,!1),h=Jf.getReshapedPermuted(u.shape,i,o,!1),c=Db({inputs:{x:u},backend:n,attrs:{shape:d}}),f=Sx({inputs:{x:c},backend:n,attrs:{perm:p}}),m=Db({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}};var tI={kernelName:Oa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);let o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,d=n.data.get(s.dataId).values[0],[p,h,c,f,m]=Yx(o,a.shape,a.dtype,l,r.dtype,u,d);return[n.makeTensorInfo(h,a.dtype,p),n.makeTensorInfo([h[0]],r.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};var nI={kernelName:Da,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:i}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,d,p]=Jx(o,a.shape,a.dtype,s,l);return[n.makeTensorInfo(d,a.dtype,u),n.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}};var aI={kernelName:za,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");let s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,d]=Qx(s,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,u)}};var rI={kernelName:La,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");let s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,d]=Qx(s,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,u)}};var iI={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{sparseIndices:i,sparseValues:s,defaultValue:o}=n,{outputShape:l}=r,{sliceRank:u,numUpdates:d,sliceSize:p,strides:h,outputSize:c}=Jf.calculateShapes(s,i,l),f=!1,m=a.bufferSync(i);switch(s.dtype){case"bool":t=Gx(m,a.bufferSync(s),l,c,p,d,u,h,!!a.data.get(o.dataId).values[0],f);break;case"float32":case"int32":t=Gx(m,a.bufferSync(s),l,c,p,d,u,h,a.data.get(o.dataId).values[0],f);break;case"string":t=Gx(m,a.bufferSync(s),l,c,p,d,u,h,Sr.decodeString(a.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${s.dtype}`)}return a.makeTensorInfo(l,t.dtype,t.values)}};var sI={kernelName:_a,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=Sr.parseAxisParam(s,r.shape)[0],l=Jf.prepareSplitSize(r,i,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map(e=>{let t=[...d];t[o]=e;let a=Kx({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a})}},oI={kernelName:Va,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:a}=t,r=n;Ky(a,"square");let i=r.data.get(a.dataId).values,s=new Float32Array(i.length);for(let o=0;o<i.length;++o){let e=i[o];s[o]=e*e}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},lI=IA(sr,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),uI={kernelName:sr,backendName:"cpu",kernelFunc:lI};var dI={kernelName:Ga,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,end:s,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a;Ky(r,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:x,end:b,strides:v}=Nf.sliceInfo(r.shape,i,s,o,l,u,d,p,h);if(g)c=Db({inputs:{x:r},backend:n,attrs:{shape:m}});else if(y||A){Sr.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let e=Nf.computeOutShape(x,b,v),t=Kx({inputs:{x:r},backend:n,attrs:{begin:x,size:e}});c=Db({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=ub(f,n.bufferSync(r),v,x);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}};var pI={kernelName:Ha,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,h=n.data.get(d.dataId).values,c=n.data.get(p.dataId).values,[f,m]=pb(h,c,r,i,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var hI={kernelName:ja,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let o=n.data.get(i.dataId).values,l=n.data.get(s.dataId).values[0],[u,d,p]=cb(o,l,r),h=d.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var cI={kernelName:qa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let s=fb(n.data.get(i.dataId).values,r);return n.makeTensorInfo(i.shape,"int32",s)}},fI=IA("Tan",e=>Math.tan(e)),mI={kernelName:"Tan",backendName:"cpu",kernelFunc:fI},gI=IA(Za,e=>Math.tanh(e));var yI={kernelName:va,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:i}=t,{sliceRank:s,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=Jf.calculateShapes(i,r,a.shape),p=n.bufferSync(r),h=n.bufferSync(i),c=n.bufferSync(a),f=Gx(p,h,a.shape,d,l,o,s,u,c,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};var AI={kernelName:Ya,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;Ky(r,"tile");let s=xb(n.bufferSync(r),i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var xI={kernelName:Ja,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a;Ky(r,"topk");let o=n.data.get(r.dataId).values,[l,u]=wb(o,r.shape,r.dtype,i,s);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};var bI={kernelName:Qa,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=n,[d,p,h,c]=r.shape,[f,m]=null!=u?u:[p,h],g=[d,f,m,c],y=Sr.computeStrides(r.shape),A=y[0],x=y[1],b=y[2],v=Sr.computeStrides(g),w=v[0],k=v[1],I=v[2],S=Sr.getTypedArrayFromDType(r.dtype,Sr.sizeFromShape(g));S.fill(l);let N=a.data.get(r.dataId).values,C=a.data.get(i.dataId).values;for(let T=0;T<d;++T){let e=1===i.shape[0]?C:C.subarray(8*T,8*T+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<c;++a){let r,i=e[6]*n+e[7]*t+1;if(0===i)continue;let u=(e[0]*n+e[1]*t+e[2])/i,d=(e[3]*n+e[4]*t+e[5])/i,c=vI(u,h,o),f=vI(d,p,o);switch(s){case"nearest":r=kI(N,p,h,A,x,b,T,f,c,a,l);break;case"bilinear":r=II(N,p,h,A,x,b,T,f,c,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${s}`)}S[T*w+t*k+n*I+a]=r}return a.makeTensorInfo(g,r.dtype,S)}return{dataId:a.write(S,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function vI(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Sr.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return Sr.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Sr.clamp(0,e,t-1)}(e,t);default:return function(e){return e}(e)}}function wI(e,t,n,a,r,i,s,o,l,u,d){return 0<=o&&o<t&&0<=l&&l<n?e[s*a+o*r+l*i+u]:d}function kI(e,t,n,a,r,i,s,o,l,u,d){return wI(e,t,n,a,r,i,s,Math.round(o),Math.round(l),u,d)}function II(e,t,n,a,r,i,s,o,l,u,d){let p=Math.floor(o),h=Math.floor(l),c=p+1,f=h+1;return(c-o)*((f-l)*wI(e,t,n,a,r,i,s,p,h,u,d)+(l-h)*wI(e,t,n,a,r,i,s,p,f,u,d))+(o-p)*((f-l)*wI(e,t,n,a,r,i,s,c,h,u,d)+(l-h)*wI(e,t,n,a,r,i,s,c,f,u,d))}var SI={kernelName:tr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t;Ky(i,"unique");let s=a.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=kb(s,r,i.shape,i.dtype);return[a.makeTensorInfo(l,i.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}};var NI={kernelName:nr,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r.shape.length,o=r.shape[i],l=new Array(s-1),u=0;for(let c=0;c<s;c++)c!==i&&(l[u++]=r.shape[c]);let d=new Array(s).fill(0),p=r.shape.slice();p[i]=1;let h=new Array(o);for(let c=0;c<h.length;c++){d[i]=c;let e=Kx({inputs:{x:r},backend:n,attrs:{begin:d,size:p}});h[c]=Db({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return h}};var CI={kernelName:ar,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a;Ky(r,"unsortedSegmentSum");let o=[],l=[],u=r.shape.length-i.shape.length,d=i;for(let h=0;h<u;++h){let e=uw({inputs:{input:d},backend:n,attrs:{dim:h+1}});d=e,l.push(e)}for(let h=0;h<s;++h){let e=Sr.createScalarValue(h,"int32"),t=n.makeTensorInfo([],"int32",e),a=$A({inputs:{a:t,b:d},backend:n}),i=dA({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=yx({inputs:{a:i,b:r},backend:n}),u=Yv({inputs:{x:s},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(a),l.push(i),l.push(s),l.push(u)}let p=yk({inputs:o,backend:n,attrs:{axis:0}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},TI=[Bb,eA,Ub,Hb,yA,jb,qb,Xb,Kb,Zb,Jb,ev,nv,iv,ov,pv,hv,cv,fv,Wb,mv,gv,yv,wA,Av,pA,TA,bv,aA,vv,Sv,Cv,Tv,Rv,Ev,$v,Mv,_v,Ov,Dv,zv,Lv,Wv,Bv,Uv,Gv,Hv,jv,qv,Xv,Kv,Zv,Qv,Nb,ew,MA,lw,PA,dw,zA,yw,xw,bw,BA,GA,vw,ww,kw,Iw,KA,JA,sA,Sw,kv,Cw,Rw,$w,Tb,tx,rx,Mw,ox,_w,Dw,Lw,Vw,Uw,Gw,jw,px,qw,Xw,Kw,Zw,Yw,Jw,Qw,fx,ek,nk,sk,Ax,bx,lk,dk,hk,kx,ck,gk,Ak,xk,vk,$b,Tx,wk,kk,Ik,Sk,lA,cw,Ck,Fb,Pb,zb,Tk,Rk,Ek,$k,Mk,Fk,Pk,Ux,Ok,Lk,Wk,Gk,qx,jk,Xk,Zk,Zx,ik,Qk,eI,tI,nI,aI,rI,iI,sI,nb,oI,ib,lb,uI,dI,pI,hI,cI,Ab,Jv,mI,{kernelName:Za,backendName:"cpu",kernelFunc:gI},yI,AI,xI,bI,Nx,SI,NI,CI,mk];for(let Z2 of TI)xr(Z2);var RI={};b(RI,{assertNotComplex:()=>zS,bindCanvasToFramebuffer:()=>fS,bindColorTextureToFramebuffer:()=>mS,bindTextureToProgramUniformSampler:()=>cS,bindTextureUnit:()=>uS,bindVertexBufferToProgramAttribute:()=>lS,callAndCheck:()=>BI,canBeRepresented:()=>GI,createFragmentShader:()=>XI,createFramebuffer:()=>oS,createProgram:()=>QI,createStaticIndexBuffer:()=>aS,createStaticVertexBuffer:()=>nS,createTexture:()=>iS,createVertexShader:()=>qI,getBatchDim:()=>vS,getExtensionOrThrow:()=>jI,getFramebufferErrorMessage:()=>AS,getMaxTexturesInShader:()=>ES,getNumChannels:()=>rS,getProgramUniformLocation:()=>hS,getProgramUniformLocationOrThrow:()=>pS,getRowsCols:()=>wS,getShapeAs3D:()=>kS,getTextureShapeFromLogicalShape:()=>IS,getWebGLDisjointQueryTimerVersion:()=>$S,getWebGLErrorMessage:()=>HI,getWebGLMaxTextureSize:()=>CS,hasExtension:()=>MS,isCapableOfRenderingToFloatTexture:()=>_S,isDownloadFloatTextureEnabled:()=>PS,isReshapeFree:()=>NS,isWebGLFenceEnabled:()=>DS,isWebGLVersionEnabled:()=>FS,linkProgram:()=>eS,logShaderSourceAndInfoLog:()=>JI,resetMaxTextureSize:()=>TS,resetMaxTexturesInShader:()=>RS,unbindColorTextureFromFramebuffer:()=>gS,unbindTextureUnit:()=>dS,validateFramebuffer:()=>yS,validateProgram:()=>tS,validateTextureSize:()=>sS});var EI,$I,MI,FI={},_I={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function PI(e,t){FI[e]=t}function OI(e,t){if(!(e in FI)||null!=t){let n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?function(e){if(!Ve().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete FI[e]},!1),Ve().getBool("SOFTWARE_WEBGL_ENABLED")&&(_I.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",_I)||n.getContext("experimental-webgl",_I):n.getContext("webgl2",_I)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;FI[e]=n}let n=FI[e];return null==n||n.isContextLost()?(delete FI[e],OI(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),FI[e])}function DI(e,t){return[t,e]}function zI(e){let t=Sr.sizeFromShape(e),n=Math.ceil(t/4);return Sr.sizeToSquarishShape(n)}function LI(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function WI(e,t){let n,a,r,i,s,o,l,u,d,p,h=e;return 2===Ve().getNumber("WEBGL_VERSION")?(n=h.R32F,a=h.R16F,r=h.RGBA16F,i=h.RGBA32F,s=h.RED,l=4,u=1,d=h.HALF_FLOAT,p=h.FLOAT,o=h.RGBA8):(n=e.RGBA,a=e.RGBA,r=e.RGBA,i=h.RGBA,s=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:p}}function BI(e,t){let n=t();return Ve().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+HI(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(EI||(EI={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}($I||($I={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(MI||(MI={}));var VI=5.96e-8,UI=65504;function GI(e){return!!(Ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||VI<Math.abs(e)&&Math.abs(e)<UI)}function HI(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function jI(e,t){return xS(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function qI(e,t){let n=xS(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(BI(e,()=>e.shaderSource(n,t)),BI(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function XI(e,t){let n=xS(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(BI(e,()=>e.shaderSource(n,t)),BI(e,()=>e.compileShader(n)),Ve().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw JI(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var KI,ZI,YI=/ERROR: [0-9]+:([0-9]+):/g;function JI(e,t){let n=YI.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let a=+n[1],r=e.split("\n"),i=r.length.toString().length+2,s=r.map((e,t)=>Sr.rightPad((t+1).toString(),i)+e),o=0;for(let p=0;p<s.length;p++)o=Math.max(s[p].length,o);let l=s.slice(0,a-1),u=s.slice(a-1,a),d=s.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Sr.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function QI(e){return xS(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function eS(e,t){if(BI(e,()=>e.linkProgram(t)),!Ve().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function tS(e,t){if(BI(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function nS(e,t){let n=xS(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return BI(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),BI(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function aS(e,t){let n=xS(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return BI(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),BI(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function rS(){return 2===Ve().getNumber("WEBGL_VERSION")?1:4}function iS(e){return xS(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function sS(e,t){let n=Ve().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function oS(e){return xS(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function lS(e,t,n,a,r,i,s){let o=e.getAttribLocation(t,n);return-1!==o&&(BI(e,()=>e.bindBuffer(e.ARRAY_BUFFER,a)),BI(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,i,s)),BI(e,()=>e.enableVertexAttribArray(o)),!0)}function uS(e,t,n){bS(e,n),BI(e,()=>e.activeTexture(e.TEXTURE0+n)),BI(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function dS(e,t){bS(e,t),BI(e,()=>e.activeTexture(e.TEXTURE0+t)),BI(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function pS(e,t,n){return xS(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function hS(e,t,n){return e.getUniformLocation(t,n)}function cS(e,t,n,a){BI(e,()=>uS(e,t,a)),BI(e,()=>e.uniform1i(n,a))}function fS(e){BI(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),BI(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),BI(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function mS(e,t,n){BI(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),BI(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function gS(e,t){BI(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),BI(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function yS(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+AS(e,t))}function AS(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function xS(e,t,n){let a=BI(e,()=>t());if(null==a)throw new Error(n);return a}function bS(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function vS(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return Sr.sizeFromShape(e.slice(0,e.length-t))}function wS(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function kS(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[vS(e),...wS(e)]),t}function IS(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Ve().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=Ve().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&Ve().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map((t,n)=>n>=e.length-2?Sr.nearestLargerEven(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length&&(e=Sr.squeezeShape(e).newShape);let r=Sr.sizeFromShape(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);let s=null!=i&&Math.max(...i)>a&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s)if(t){let t=vS(e),n=2,a=2;e.length&&([n,a]=wS(e)),r=t*(n/2)*(a/2),i=Sr.sizeToSquarishShape(r).map(e=>2*e)}else i=Sr.sizeToSquarishShape(r);return i}function SS(e){return e%2===0}function NS(e,t){if(e=e.slice(-2),t=t.slice(-2),Sr.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e[e.length-1],a=t[t.length-1];if(n===a||SS(n)&&SS(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&SS(e[0])&&SS(t[0])}function CS(e){if(null==KI){let t=OI(e);KI=t.getParameter(t.MAX_TEXTURE_SIZE)}return KI}function TS(){KI=null}function RS(){ZI=null}function ES(e){if(null==ZI){let t=OI(e);ZI=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ZI)}function $S(e){if(0===e)return 0;let t,n=OI(e);return t=MS(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:MS(n,"EXT_disjoint_timer_query")?1:0,t}function MS(e,t){return null!=e.getExtension(t)}function FS(e){try{if(null!=OI(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function _S(e){if(0===e)return!1;let t=OI(e);if(1===e){if(!MS(t,"OES_texture_float"))return!1}else if(!MS(t,"EXT_color_buffer_float"))return!1;return OS(t)}function PS(e){if(0===e)return!1;let t=OI(e);if(1!==e){if(MS(t,"EXT_color_buffer_float"))return OS(t);let e="EXT_color_buffer_half_float";if(MS(t,e)){let n=t.getExtension(e);return function(e,t){let n=WI(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),i}(t,n)}return!1}return!(!MS(t,"OES_texture_float")||!MS(t,"WEBGL_color_buffer_float"))&&OS(t)}function OS(e){let t=WI(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function DS(e){return 2===e&&null!=OI(e).fenceSync}function zS(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Sr.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var LS=Ve();function WS(){let e,t,n,a,r,i,s,o,l,u;return 2===Ve().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",i="outputColor",s="out vec4 outputColor;",o=Ve().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",i="gl_FragColor",s="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function BS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",a=Sr.computeStrides(t);return a.map((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`).join("")}function VS(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",a=Sr.computeStrides(t);return a.map((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`).join("")}function US(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index",a=function(e,t){let n=e.length,a=e.map(e=>`${t}[${e}]`),r=new Array(n-1);r[n-2]=a[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${a[i+1]})`;return r}(e.map((e,t)=>t),t);return a.map((t,r)=>`${`int ${e[r]} = ${n} / ${a[r]}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`).join("")}function GS(e){let t=Sr.computeStrides(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}LS.registerFlag("HAS_WEBGL",()=>LS.getNumber("WEBGL_VERSION")>0),LS.registerFlag("WEBGL_VERSION",()=>FS(2)?2:FS(1)?1:0),LS.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),LS.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===LS.get("WEBGL_VERSION")),LS.registerFlag("WEBGL_CPU_FORWARD",()=>!0),LS.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),LS.registerFlag("WEBGL_PACK",()=>LS.getBool("HAS_WEBGL")),LS.registerFlag("WEBGL_PACK_NORMALIZATION",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_CLIP",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_REDUCE",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_LAZILY_UNPACK",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_CONV_IM2COL",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>LS.getBool("WEBGL_PACK")),LS.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>CS(LS.getNumber("WEBGL_VERSION"))),LS.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>ES(LS.getNumber("WEBGL_VERSION"))),LS.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=LS.getNumber("WEBGL_VERSION");return 0===e?0:$S(e)}),LS.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>LS.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Fi.isMobile()),LS.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>_S(LS.getNumber("WEBGL_VERSION"))),LS.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!LS.getBool("WEBGL_FORCE_F16_TEXTURES")&&LS.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),LS.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>PS(LS.getNumber("WEBGL_VERSION"))),LS.registerFlag("WEBGL_FENCE_API_ENABLED",()=>DS(LS.getNumber("WEBGL_VERSION"))),LS.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>LS.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),LS.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),LS.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Fi.isMobile()?1:-1,e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),LS.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),LS.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),LS.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),LS.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),LS.registerFlag("WEBGL_EXP_CONV",()=>!1),LS.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>LS.getBool("IS_TEST")),LS.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),LS.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),LS.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),LS.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);var HS="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:jS}=Jf;function qS(e,t,n){let a=[];if(e.forEach(e=>{let t=Sr.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=rN(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let r,i,s=a.join("\n"),o=e.map(e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?KS(e,a):XS(e,a);let i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(r+=n?function(e,t){let n,a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),i="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=jS(e.shapeInfo.logicalShape,t.logicalShape),u=aN(o),d=o-s,p=["x","y","z","w","u","v"];n=0===s?"":o<2&&l.length>=1?"coords = 0;":l.map(e=>`coords.${p[e+d]} = 0;`).join("\n");let h="";h=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+d]}`).join(", ");let c="return outputValue;",f=1===Sr.sizeFromShape(e.shapeInfo.logicalShape),m=1===Sr.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=s-2,t=s-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${i}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${r}(${h});\n      ${c}\n    }\n  `}(e,t):function(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",i=t.texShape,s=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&Sr.arraysEqual(s,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,d=aN(l),p=jS(e.shapeInfo.logicalShape,t.logicalShape),h=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&p.length>=1?"coords = 0;":p.map(e=>`coords.${c[e+h]} = 0;`).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+h]}`).join(", "),`\n    float ${r}() {\n      ${d} coords = getOutputCoords();\n      ${u}\n      return get${a}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),l=t.texShape,u=WS(),d=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u),p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ZS}\n    ${YS}\n    ${JS}\n  `}(u);return t.isPacked?(r=function(e,t,n){switch(e.length){case 0:return eN();case 1:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Sr.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;let r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2),s=i,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)s*=e[e.length-u-1],o=`\n      int b${u} = index / ${s};\n      index -= b${u} * ${s};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,l,n.enableShapeUniforms),i=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(r=function(e,t,n){switch(e.length){case 0:return eN();case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return Sr.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${VS(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let a=BS(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${VS(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let a=BS(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){let n=BS(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){let n=BS(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,n.enableShapeUniforms),i=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=QS),[p,d,i,s,r,o,n.userCode].join("\n")}function XS(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;let[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let s=tN(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${s});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${nN(e)}\n      }\n    `;let r=e.shapeInfo.texShape,i=r[0],s=r[1];if(1===s&&1===i)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=tN(n);return 1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape;if(null!=i&&Sr.arraysEqual(n,i)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;let e=i[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}let{newShape:s,keptDims:o}=Sr.squeezeShape(n),l=s;if(l.length<n.length){let n=["row","col"];return`\n      ${XS(iN(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${sN(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${nN(e)}\n      }\n    `;let u=i[0],d=i[1],p=tN(a);return 1===d?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${u}, ${d}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[1]*n[2],s=n[2],{newShape:o,keptDims:l}=Sr.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${XS(iN(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${sN(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${s}, 1)));\n        ${nN(e)}\n      }\n    `;let d=e.shapeInfo.texShape,p=d[0],h=d[1],c=e.shapeInfo.flatOffset;if(h===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(h===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;let f=tN(a);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${s} + depth + ${f};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[3],s=n[2]*i,o=n[1]*s,{newShape:l,keptDims:u}=Sr.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${XS(iN(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${sN(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${s}, ${i}, 1)));\n        ${nN(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],c=p[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(c===o&&null==d)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(c===i&&null==d)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${h}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;let y=tN(a);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,s=t[2]*i,o=t[1]*s,{newShape:l,keptDims:u}=Sr.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${XS(iN(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${sN(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${s}, ${i}, ${r})) +\n          depth3;\n        ${nN(e)}\n      }\n    `;let d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],c=p[1];if(c===o&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${s}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(c===r&&null==d)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let f=tN(n);return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${s} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=Sr.squeezeShape(t);if(r.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${XS(iN(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${sN(t,i)});\n      }\n    `}let s=t[5],o=t[4]*s,l=t[3]*o,u=t[2]*l,d=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${s}, 1)));\n        ${nN(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],f=h[1];if(f===d&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${s})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==p)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;let m=tN(n);return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${s} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function KS(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=WS();return`\n    vec4 ${n}() {\n      return ${a.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=WS();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;let s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],l=WS();if(null!=i&&Sr.arraysEqual(n,i))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;let u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),i=e.shapeInfo.texShape,s=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){let a=[1,2],i=["b","row","col"];return`\n        ${KS(iN(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${sN(i,a)});\n        }\n      `}let o=WS();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;let l=s[0],u=s[1],d=Math.ceil(n[2]/2),p=d*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p}, ${d}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=WS();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;let i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],p=Math.ceil(i[s-1]/2),h=p*Math.ceil(i[s-2]/2),c="int b, int row, int col",f=`b * ${h} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<s-1;m++)c=`int b${m}, `+c,h*=i[s-m-1],f=`b${m} * ${h} + `+f;return`\n    vec4 ${a}(${c}) {\n      int index = ${f};\n      int texR = index / ${d};\n      int texC = index - texR * ${d};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var ZS="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YS="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",JS="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",QS="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function eN(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function tN(e){return`offset${e}`}function nN(e){let t=e.name,n=Sr.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function aN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function rN(e,t,n){let{newShape:a,keptDims:r}=Sr.squeezeShape(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):a,l=!e&&i>1&&!Sr.arraysEqual(t,n)&&a.length<i||s;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function iN(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function sN(e,t){return t.map(t=>e[t]).join(", ")}function oN(e,t,n){let a,r,i,s=[],o=[],l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===Ve().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let p of t.variableNames){let a={name:p,uniform:e.getUniformLocation(n,p,d),offset:e.getUniformLocation(n,`offset${p}`,d)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${p}Shape`,d),a.texShape=e.getUniformLocation(n,`${p}TexShape`,d)),s.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",d),i=e.getUniformLocation(n,"outShapeStrides",d),r=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms)for(let p of t.customUniforms)o.push(e.getUniformLocation(n,p.name,d));return{variablesLocations:s,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:r}}function lN(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{let a=e.logicalShape,r=t[n],i=r.shape;if(!Sr.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;let s=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!Sr.arraysEqual(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)})}function uN(e){return Ve().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var dN=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=EI.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=WS();this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?VS(["r","c","d"],e):BS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},pN=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=EI.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=WS();this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?VS(["r","c","d"],e):BS(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},hN=class{constructor(e){this.variableNames=["A"],this.outTexUsage=$I.DOWNLOAD;let t=WS();this.outputShape=e,this.userCode=`\n      ${HS}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},cN=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=$I.DOWNLOAD;let t=WS();this.outputShape=e,this.userCode=`\n      ${HS}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},fN={R:0,G:1,B:2,A:3},mN=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=WS();this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let s=0;s<n.length;s++){let e=n[s];i+=`\n          if(offset == ${s}) {\n            result = values[${fN[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":GS(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${i}\n        }\n        ${a.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},gN=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=WS();this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let t=0;t<=1;t++){let r=2*i+t;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":GS(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}},yN={};function AN(e){let t=WS();return qI(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function xN(e){return nS(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function bN(e){return aS(e,new Uint16Array([0,1,2,2,1,3]))}function vN(e,t,n,a,r,i){sS(t,n);let s=iS(e),o=e.TEXTURE_2D;return BI(e,()=>e.bindTexture(o,s)),BI(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),BI(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),BI(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),BI(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===Ve().getNumber("WEBGL_VERSION")?BI(e,()=>e.texImage2D(o,0,a,t,n,0,r,i,null)):BI(e,()=>e.texStorage2D(o,1,a,t,n)),BI(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:s,texShape:[n,t]}}function wN(e){return e.internalFormatFloat}function kN(e,t,n,a){let[r,i]=DI(t,n);return vN(e,r,i,wN(a),a.textureFormatFloat,e.FLOAT)}function IN(e){return e.internalFormatHalfFloat}function SN(e,t,n,a){let[r,i]=DI(t,n);return vN(e,r,i,IN(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function NN(e){return e.downloadTextureFormat}function CN(e,t,n,a){let[r,i]=DI(t,n);return vN(e,r,i,NN(a),e.RGBA,e.UNSIGNED_BYTE)}function TN(e){return e.internalFormatPackedFloat}function RN(e,t,n,a){let[r,i]=LI(t,n);return vN(e,r,i,TN(a),e.RGBA,e.FLOAT)}function EN(e){return e.internalFormatPackedHalfFloat}function $N(e,t,n,a){let[r,i]=LI(t,n);return vN(e,r,i,EN(a),e.RGBA,a.textureTypeHalfFloat)}function MN(e,t,n){return BI(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),lS(e,t,"clipSpacePos",n,3,20,0)&&lS(e,t,"uv",n,2,20,12)}function FN(e,t,n,a,r,i){let s,o,l;BI(e,()=>e.bindTexture(e.TEXTURE_2D,t)),r instanceof Uint8Array?(s=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(s=new Float32Array(n*a*4),o=e.FLOAT,l=i.internalFormatPackedFloat),s.set(r),2===Ve().getNumber("WEBGL_VERSION")?BI(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,s)):BI(e,()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,s)),BI(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function _N(e,t,n){BI(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?2===Ve().getNumber("WEBGL_VERSION")?BI(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):BI(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):2===Ve().getNumber("WEBGL_VERSION")?BI(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):BI(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),BI(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function PN(e,t,n,a){let r=e.createBuffer();BI(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let i=16*t*n;return BI(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),BI(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),BI(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function ON(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function DN(e,t,n,a){let[r,i]=DI(t,n),s=new Uint8Array(function(e,t){return e*t}(t*n,4));return BI(e,()=>e.readPixels(0,0,r,i,a.downloadTextureFormat,e.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)}function zN(e,t,n,a,r,i,s,o){let l=e,u=new Float32Array(function(e,t){let[n,a]=LI(e,t);return n*a*4}(i,s));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function LN(e,t,n){let a=new Float32Array(t*n*4);return BI(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a)),a}b(yN,{bindVertexProgramAttributeStreams:()=>MN,createBufferFromOutputTexture:()=>PN,createFloat16MatrixTexture:()=>SN,createFloat16PackedMatrixTexture:()=>$N,createFloat32MatrixTexture:()=>kN,createIndexBuffer:()=>bN,createPackedMatrixTexture:()=>RN,createUnsignedBytesMatrixTexture:()=>CN,createVertexBuffer:()=>xN,createVertexShader:()=>AN,downloadByteEncodedFloatMatrixFromOutputTexture:()=>DN,downloadFloat32MatrixFromBuffer:()=>ON,downloadMatrixFromPackedOutputTexture:()=>LN,downloadPackedMatrixFromBuffer:()=>zN,getInternalFormatForFloat16MatrixTexture:()=>IN,getInternalFormatForFloat16PackedMatrixTexture:()=>EN,getInternalFormatForFloat32MatrixTexture:()=>wN,getInternalFormatForPackedMatrixTexture:()=>TN,getInternalFormatForUnsignedBytesMatrixTexture:()=>NN,uploadDenseMatrixToTexture:()=>FN,uploadPixelDataToTexture:()=>_N});var WN=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=Ve().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,PI(t,e)):this.gl=OI(t),e=this.gl,2===Ve().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>BI(t,()=>t.createVertexArray()),this.bindVertexArray=e=>BI(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>BI(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>BI(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>BI(e,()=>t.createVertexArrayOES()),this.bindVertexArray=n=>BI(e,()=>t.bindVertexArrayOES(n)),this.deleteVertexArray=n=>BI(e,()=>t.deleteVertexArrayOES(n)),this.getVertexArray=()=>BI(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Ve().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=jI(this.gl,e),MS(this.gl,t))this.textureHalfFloatExtension=jI(this.gl,t);else if(Ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),MS(this.gl,a))this.colorBufferHalfFloatExtension=jI(this.gl,a);else if(Ve().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",MS(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!MS(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=xN(this.gl),this.indexBuffer=bN(this.gl),this.framebuffer=oS(this.gl),this.textureConfig=WI(this.gl,this.textureHalfFloatExtension)}get debug(){return Ve().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;BI(e,()=>e.finish()),BI(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),BI(e,()=>e.deleteFramebuffer(this.framebuffer)),BI(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),BI(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),BI(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),kN(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),SN(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),CN(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),_N(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),FN(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),$N(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),RN(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gS(this.gl,this.framebuffer),this.outputTexture=null),BI(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>DN(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,a,r,i){return zN(this.gl,e,0,0,0,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return ON(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=PN(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ve().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>LN(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=AN(t));let n=QI(t);BI(t,()=>t.attachShader(n,this.vertexShader)),BI(t,()=>t.attachShader(n,e)),eS(t,n);let a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&tS(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;BI(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),MN(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(BI(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&tS(this.gl,this.program),BI(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?pS(this.gl,e,t):hS(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),BI(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),cS(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=LI(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&tS(this.gl,this.program),yS(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}BI(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),BI(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=jI(this.gl,2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Sr.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in Ve().platform&&(n=Ve().platform.setTimeoutCustom.bind(Ve().platform)),Sr.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),mS(this.gl,e,this.framebuffer),this.debug&&yS(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(mS(this.gl,this.outputTexture,this.framebuffer),this.debug&&yS(this.gl)):gS(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;mS(a,e,this.framebuffer),this.debug&&yS(a),this.outputTexture=e,BI(a,()=>a.viewport(0,0,t,n)),BI(a,()=>a.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),BI(this.gl,()=>this.gl.scissor(e,t,n,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:BN,bincountImpl:VN,bincountReduceImpl:UN,bitwiseAndImpl:GN,castImpl:HN,ceilImpl:jN,concatImpl:qN,equalImpl:XN,expImpl:KN,expm1Impl:ZN,floorImpl:YN,gatherNdImpl:JN,gatherV2Impl:QN,greaterImpl:eC,greaterEqualImpl:tC,lessImpl:nC,lessEqualImpl:aC,linSpaceImpl:rC,logImpl:iC,maxImpl:sC,maximumImpl:oC,minimumImpl:lC,multiplyImpl:uC,negImpl:dC,notEqualImpl:pC,prodImpl:hC,raggedGatherImpl:cC,raggedRangeImpl:fC,raggedTensorToTensorImpl:mC,rangeImpl:gC,rsqrtImpl:yC,scatterImpl:AC,sigmoidImpl:xC,simpleAbsImpl:bC,sliceImpl:vC,sparseFillEmptyRowsImpl:wC,sparseReshapeImpl:kC,sparseSegmentReductionImpl:IC,sqrtImpl:SC,staticRegexReplaceImpl:NC,stridedSliceImpl:CC,stringNGramsImpl:TC,stringSplitImpl:RC,stringToHashBucketFastImpl:EC,subImpl:$C,tileImpl:MC,topKImpl:FC,transposeImpl:_C,uniqueImpl:PC}=Jy;function OC(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function DC(e,t){return 1===t?[e]:OC(e,t)}var zC=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=uN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=DC("rc",this.rank),t=aN(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},LC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}this.userCode=`\n      ${function(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?US(["r","c","d"],"inputShape"):BS(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":GS(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};var WC=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let a=VC(t,n),r=UC(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let i,s=BC(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}return a===MI.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===MI.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===MI.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===MI.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===MI.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;let r=VC(n,a),i=UC(t,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);let s=BC(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Ve().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;let l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function BC(e,t,n,a,r){let i,s=function(e,t){switch(e){case MI.PACKED_2X2_FLOAT32:return TN(t);case MI.PACKED_2X2_FLOAT16:return EN(t);case MI.UNPACKED_FLOAT32:return wN(t);case MI.UNPACKED_FLOAT16:return IN(t);case MI.PACKED_4X1_UNSIGNED_BYTE:return NN(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);if(r){let[t,n]=LI(e[0],e[1]);i=t*n}else{let[t,n]=DI(e[0],e[1]);i=t*n}let o=function(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function VC(e,t){if(e===$I.UPLOAD)return MI.PACKED_2X2_FLOAT32;if(e===$I.RENDER||null==e)return function(e){return Ve().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?MI.PACKED_2X2_FLOAT32:MI.UNPACKED_FLOAT32:e?MI.PACKED_2X2_FLOAT16:MI.UNPACKED_FLOAT16}(t);if(e===$I.DOWNLOAD||e===$I.PIXELS)return MI.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function UC(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var GC=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},HC="if (isnan(x)) return x;",jC="return abs(x);",qC=HC+"\n  return (x < 0.0) ? 0.0 : x;\n",XC=HC+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",KC="return x;",ZC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},YC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length);let t=e.length,n=DC("rc",t),a=aN(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),i=n.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}},JC=sg.whereImpl,QC={};var eT=Ve().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var tT=class e extends U{nextDataId(){return e.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ve().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof WN)t=e;else{let n=OI(Ve().getNumber("WEBGL_VERSION"),e);t=new WN(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=OI(Ve().getNumber("WEBGL_VERSION"));t=new WN(e),this.binaryCache=function(e){return e in QC||(QC[e]={}),QC[e]}(Ve().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new WC(this.gpgpu),this.numMBBeforeWarning=null==Ve().global.screen?1024:Ve().global.screen.height*Ve().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new V(this,ts())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,i){let s=this.makeTensorInfo(t,n),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];let l=kS(t),u=new mN(l,!1,i),d=this.runWebGLProgram(u,[s],n,[[a,r]]);return d.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),d.dataId}write(e,t,n){if((Ve().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ve().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:$I.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(Ve().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:$I.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:i,shape:s,isPacked:o}=t;if(null!=i){let t;t=o?new ZC(s,KC):new GC(s,KC);let n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;let l,u,d=null!=this.activeTimers;if(d&&(l=Sr.now()),"complex64"===a){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);u=Jf.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=Sr.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:i,complexTensorInfos:s,isPacked:o}=t;if(null!=r){let t;t=o?new ZC(a,KC):new GC(a,KC);let n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ve().getBool("DEBUG")&&!Ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ve().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,d=null;if("complex64"!==i&&Ve().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...zI(a))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){let e=await Promise.all([this.read(s.real.dataId),this.read(s.imag.dataId)]),t=e[0],n=e[1];u=Jf.mergeRealAndImagArrays(t,n)}else if(null==d)u=this.getValuesFromTexture(e);else{let e=Sr.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){let e=this.gpgpu.gl;BI(e,()=>e.deleteBuffer(d))}let p=this.convertAndCacheOnCPU(e,u),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(e=>e(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ts().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this.texData.get(e),{values:a,shape:r,slice:i,dtype:s,isPacked:o,texture:l}=n;if("complex64"===s)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new ZC(r,KC):new GC(r,KC);let a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:s}],s),i=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),i}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),d=ts().makeTensorFromTensorInfo(u),p=this.texData.get(u.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Sr.decodeString(e));return mo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return mo(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!GI(n))throw Ve().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=Sr.sizeFromShape(t);if(Ve().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),a=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...zI(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}let i=Ve().getBool("WEBGL_PACK")&&!0===a,s=i?kS(t):t,o=i?new cN(s):new hN(s),l=this.runWebGLProgram(o,[{shape:s,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=Sr.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=Sr.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(r);s.kernelMs=Sr.sum(e),s.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Sr.now(),endMs:null}}endTimer(e){return Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Sr.now(),e)}async getQueryTime(e){if(Ve().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,i)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:eT;return Ve().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&Sr.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Jf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return JC(e.shape,t)}packedUnaryOp(e,t,n){let a=new ZC(e.shape,t),r=this.compileAndRun(a,[e],n);return ts().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=bC(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jC,e.dtype);let t=new GC(e.shape,jC),n=this.compileAndRun(t,[e]);return ts().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&Sr.isString(n[0])){let r=n.map(e=>Sr.encodeString(e));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return ts().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new YC(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new zC(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[vS(e.shape),...wS(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[vS(t),...wS(t)],i=new LC(r,n),s=[n],o=this.runWebGLProgram(i,[a],e.dtype,s,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:a,shape:r,dtype:i}=n;if(null!=t){let e=Sr.sizeFromShape(r),n=t[0]*t[1]*4;Sr.assert(e<=n,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let s,o=kS(r);s=a?new pN(o):new dN(o);let l=[null!=t?t:zI(o)];return{dtype:i,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5?arguments[5]:void 0,s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===EI.DENSE){let t=null!=i?i:zI(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Sr.sizeFromShape(s.shape))return o.values=Sr.getTypedArrayFromDType(s.dtype,0),s;let l=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Sr.sizeFromShape(t.shape)<=Ve().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!NS(n.shape,t.shape)){let e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);let d,p={shape:s.shape,texData:o,isUniform:!1},h=function(e,t,n){let a="";t.concat(n).forEach(t=>{let r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:l}=rN(e.packedInputs,t.shape,i),u="",d="",p="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=Sr.computeStrides(o);p=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let h=t.shape.length,c=2===o.length&&Sr.arraysEqual(t.shape,i),f=1===Sr.sizeFromShape(t.shape),m=Jf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&Sr.arraysEqual(i,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;a+=`${h}_${g}_${s?l:""}_${o.length}_${f}_${m}_${c}_${u}_${d}_${p}_${y}_${r}`}else{let e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}});let r=e.userCode,i=e.constructor.name;return i+="_"+a+"_"+r+`${Ve().getNumber("WEBGL_VERSION")}`,i}(e,u,p),c=this.getAndSaveBinary(h,()=>function(e,t,n,a){let r=n.map((e,n)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}}),i=r.map(e=>e.shapeInfo),s={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=qS(r,s,t),l=XI(e.gl,o),u=e.createProgram(l);return Ve().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:s},oN(e,t,u)))}(this.gpgpu,e,u,p)),f=null!=this.activeTimers;f&&(d=this.startTimer()),Ve().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(lN(t.inShapeInfos,n),lN([t.outShapeInfo],[a]));let i=a.texData.texture,s=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===Ve().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){let a=n[l],{uniform:r,offset:i,shape:s,texShape:o}=t.variablesLocations[l];if(s){let{uniformShape:n}=rN(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(s,new Int32Array(n));break;case 2:e.gl.uniform2iv(s,new Int32Array(n));break;case 3:e.gl.uniform3iv(s,new Int32Array(n));break;case 4:e.gl.uniform4iv(s,new Int32Array(n))}}if(o&&e.gl.uniform2i(o,a.texData.texShape[0],a.texData.texShape[1]),null!=r){if(a.isUniform){if(Sr.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}continue}null!=a.texData.slice&&null!=i&&e.gl.uniform1i(i,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,l)}}let o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){let n=Sr.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){let n=t.program.customUniforms[l],a=t.customUniformLocations[l],i=r[l];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,c,u,p,a),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));let m=Ve().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=Sr.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ve().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){let e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Ve().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=rs(()=>{if(!Ve().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=Ve().getBool("DEBUG");Ve().set("DEBUG",!1);let t=this.abs(uu(1e-8)).dataSync()[0];if(Ve().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:i,usage:s,isPacked:o}=t;if(null!=i)return;let l,u=null!=this.activeTimers;u&&(l=Sr.now());let d=t.texShape;if(null==d&&(d=IS(n,o),t.texShape=d),null!=r){let e,i=kS(n),s=d[1],p=d[0],h=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!h)&&([s,p]=LI(d[0],d[1])),e=o?new gN(i,h):new mN(i,h);let c=h?[p,s]:d,f=this.makeTensorInfo(c,a),m=this.texData.get(f.dataId);m.usage=h?$I.PIXELS:$I.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),s,p,r);let g=[[p,s]],y=this.runWebGLProgram(e,[f],a,g,!0),A=this.texData.get(y.dataId);t.texShape=A.texShape,t.isPacked=A.isPacked,t.usage=A.usage,Ve().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=A.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=Sr.now()-l)}else{let e=this.acquireTexture(d,s,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*Sr.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}});e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Zf(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(JI(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=oN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:a,height:r,width:i,channels:s}=e,o=ts().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(a,t,n,r,i,s);return ts().makeTensorFromDataId(l,t,n,o)}};tT.nextDataId=0;var nT="4.22.0";function aT(){Ve().set("WEBGL_FORCE_F16_TEXTURES",!0)}Fi.isBrowser()&&fs("webgl",()=>new tT,2);var rT={forceHalfFloat:aT},iT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",sT=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Jf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=uN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},oT="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",lT=class{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Jf.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=uN(r);let i="";if(a)if(0===r||1===Sr.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${aN(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=DC("coords",r);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}};function uT(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var dT={kernelName:dn,backendName:"webgl",kernelFunc:uT};function pT(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.makeTensorInfo(a.shape,"complex64"),s=n.texData.get(i.dataId),o=uT({inputs:{x:a},backend:n}),l=uT({inputs:{x:r},backend:n});return s.complexTensorInfos={real:o,imag:l},i}var hT={kernelName:bt,backendName:"webgl",kernelFunc:pT},cT="return (a < 0.) ? b * a : a;",fT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var mT={kernelName:gn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a,s=n.makeTensorInfo([],"float32",Sr.createScalarValue(i,"float32")),o=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lT(fT,r.shape,s.shape):new sT(cT,r.shape,s.shape),l=n.runWebGLProgram(o,[r,s],"float32");return n.disposeIntermediateTensorInfo(s),l}},gT="return (a < 0.) ? b * a : a;",yT="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var AT={kernelName:na,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lT(yT,a.shape,r.shape):new sT(gT,a.shape,r.shape);return n.runWebGLProgram(i,[a,r],"float32")}},xT="if (isnan(x)) return x;";function bT(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let i,{inputs:s,backend:o}=e,{x:l}=s,u=o,d=r||l.dtype;if(u.shouldExecuteOnCPU([l])&&null!=a){let e=u.texData.get(l.dataId),t=a(e.values,d);return u.makeTensorInfo(l.shape,d,t)}return i=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new ZC(l.shape,n):new GC(l.shape,t),u.runWebGLProgram(i,[l],d)}}function vT(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:i,dtype:s}=e;return e=>{let{inputs:o,backend:l}=e,{a:u,b:d}=o,p=l;if(r&&"complex64"===u.dtype){let e=p.texData.get(u.dataId),n=p.texData.get(d.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(e=>{let[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:a.dataId,dtype:a.dtype,shape:d.shape},s=new sT(t,u.shape,d.shape);return p.runWebGLProgram(s,[r,i],yi(n.dtype,a.dtype))}),i=pT({inputs:{real:a,imag:r},backend:p});return p.disposeIntermediateTensorInfo(a),p.disposeIntermediateTensorInfo(r),i}let h,c=s||yi(u.dtype,d.dtype);if(("string"===u.dtype||"string"===d.dtype||p.shouldExecuteOnCPU([u,d]))&&null!=i){let e=p.texData.get(u.dataId).values,t=p.texData.get(d.dataId).values,n="string"===u.dtype?Jf.fromUint8ToStringArray(e):e,a="string"===u.dtype?Jf.fromUint8ToStringArray(t):t,[r,s]=i(u.shape,d.shape,n,a,c),o=p.makeTensorInfo(s,c);return p.texData.get(o.dataId).values=r,o}return h=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new lT(n,u.shape,d.shape,a):new sT(t,u.shape,d.shape),p.runWebGLProgram(h,[u,d],c)}}function wT(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":qC;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":XC;if("prelu"===e)return t?yT:gT;if("leakyrelu"===e)return t?fT:cT;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var kT=class{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=uN(this.outputShape.length);let u=a?e[1]:e[2],d=Math.ceil(u/2),p=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",c=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";s&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,g="result = activation(result);");let y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${d}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${A};\n        int batchB = ${x};\n        for (int i = 0; i < ${d}; i++) {\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},IT="return areal * breal - aimag * bimag;",ST="return areal * bimag + aimag * breal;",NT=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Jf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},CT="return a * b;";function TT(e){let t,{inputs:n,backend:a}=e,{a:r,b:i}=n,s=Jf.upcastType(r.dtype,i.dtype);if("complex64"===r.dtype){let e=a.texData.get(r.dataId),t=a.texData.get(i.dataId),n=new NT(IT,r.shape,i.shape),s=new NT(ST,r.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],l=a.runWebGLProgram(n,o,"float32"),u=a.runWebGLProgram(s,o,"float32"),d=pT({inputs:{real:l,imag:u},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(u),d}if(a.shouldExecuteOnCPU([r,i])){let e=a.texData.get(r.dataId),t=a.texData.get(i.dataId),[n,o]=uC(r.shape,i.shape,e.values,t.values,s),l=a.makeTensorInfo(o,s);return a.texData.get(l.dataId).values=n,l}return t=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lT(CT,r.shape,i.shape):new sT(CT,r.shape,i.shape),a.runWebGLProgram(t,[r,i],s)}var RT={kernelName:Gn,backendName:"webgl",kernelFunc:TT};function ET(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:i}=a,s=n,o=Sr.sizeFromShape(r.shape),l=Sr.inferFromImplicitShape(i,o),u=Sr.sizeFromShape(l);Sr.assert(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let d=s.texData.get(r.dataId);return!d.isPacked||NS(r.shape,l)||null!==d.texture&&NS(d.shape,l)?(s.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){let a=[vS(e.shape),...wS(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},i=[vS(t),...wS(t)],s=new LC(i,a),o=[a],l=n.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,s)}var $T={kernelName:pa,backendName:"webgl",kernelFunc:ET},MT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let s=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${Sr.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${s}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${s};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},FT=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:i}=e;this.outputShape=[a,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),d=n%4,p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(s="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(s="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===d}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===d}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===d}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${l});\n      }\n    `}};function _T(e,t,n,a){let r=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],a=Jf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape),i=e;for(let s=0;s<r.length;s++){let o,l,{inSize:u,windowSize:d,outSize:p}=r[s];o="mean"===n?0===s?new MT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p},u):new MT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p}):new FT({windowSize:d,inSize:u,batchSize:e.shape[0],outSize:p},n),l=i,i=a.runWebGLProgram(o,[i],t),l.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(l)}return i}var PT=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;let a=aN(this.rank),r=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}};var OT=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=aN(this.rank),r=OC("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=r[u];let s=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function DT(e,t,n){let a=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new OT(e.shape,t):new PT(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function zT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return function(e,t,n,a){let r=t,i=e.shape.length,s=Sr.parseAxisParam(r,e.shape),o=s,l=Jf.getAxesPermutation(o,i),u=null!=l,d=e;u&&(d=DT(e,l,a),o=Jf.getInnerMostAxes(o.length,i)),Jf.assertAxesAreInnerMostDims("sum",o,i);let[p,h]=Jf.computeOutAndReduceShapes(d.shape,o),c=p;n&&(c=Jf.expandShapeToKeepDim(p,s));let f=Sr.sizeFromShape(h),m=ET({inputs:{x:d},attrs:{shape:[Sr.sizeFromShape(e.shape)/f,f]},backend:a}),g=_T(m,Ai(e.dtype),"sum",a),y=ET({inputs:{x:g},attrs:{shape:c},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(d),y}(r,i,s,n)}var LT={kernelName:"Sum",backendName:"webgl",kernelFunc:zT};function WT(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{perm:s}=r,o=a,l=i.shape.length,u=new Array(l);for(let d=0;d<u.length;d++)u[d]=i.shape[s[d]];if(o.shouldExecuteOnCPU([i])){let e=o.texData.get(i.dataId).values,n=_C(e,i.shape,i.dtype,s,u);t=o.makeTensorInfo(u,i.dtype),o.texData.get(t.dataId).values=n}else t=DT(i,s,o);return t}var BT={kernelName:er,backendName:"webgl",kernelFunc:WT};function VT(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:i,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,p=n.shape.length,h=a?t.shape[d-2]:t.shape[d-1],c=r?n.shape[p-1]:n.shape[p-2],f=a?t.shape[d-1]:t.shape[d-2],m=r?n.shape[p-2]:n.shape[p-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),A=Sr.sizeFromShape(g),x=Sr.sizeFromShape(y),b=Ll.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);Sr.assert(h===c,()=>`Error in matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${a} and transposeB=${r} must match.`);let v,w=a?[A,h,f]:[A,f,h],k=r?[x,m,c]:[x,c,m],I=ET({inputs:{x:t},backend:i,attrs:{shape:w}}),S=ET({inputs:{x:n},backend:i,attrs:{shape:k}}),N=[I,S],C=Math.max(A,x),T=a?I.shape[1]:I.shape[2],R=null!=s,E=null!=o,$="leakyrelu"===u,M=null!=u?wT(u,!0):null;if((1===f||1===m)&&T>1e3&&!1===(R||E||$||null!=M)){let e=I,t=S;a&&(e=WT({inputs:{x:I},backend:i,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=WT({inputs:{x:S},backend:i,attrs:{perm:[0,2,1]}}),N.push(t));let n=1===m,s=e;1!==m&&(s=ET({inputs:{x:e},backend:i,attrs:{shape:[C,T,1]}}),N.push(s));let o=1===m?2:1,l=t;n&&(l=ET({inputs:{x:t},backend:i,attrs:{shape:[C,1,T]}}),N.push(l));let u=TT({inputs:{a:s,b:l},backend:i});v=zT({inputs:{x:u},backend:i,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{let e=yi(t.dtype,n.dtype),u=new kT(w,k,[C,f,m],a,r,R,M,E,$),d=[I,S];if(null!=s&&d.push(s),E&&d.push(o),$){let e=i.makeTensorInfo([],"float32",Sr.createScalarValue(l,"float32"));d.push(e),N.push(e)}v=i.runWebGLProgram(u,d,e)}let F=ET({inputs:{x:v},backend:i,attrs:{shape:b}});N.push(v);for(let _ of N)i.disposeIntermediateTensorInfo(_);return F}var UT={kernelName:ur,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a;return VT({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}},GT="return abs(x);";var HT={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let e=a.texData.get(r.dataId),t=bC(e.values);return a.makeTensorInfo(r.shape,r.dtype,t)}return t=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ZC(r.shape,GT):new GC(r.shape,GT),a.runWebGLProgram(t,[r],r.dtype)}},jT=bT({opSnippet:HC+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),qT={kernelName:Xe,backendName:"webgl",kernelFunc:jT},XT=bT({opSnippet:HC+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),KT={kernelName:Ke,backendName:"webgl",kernelFunc:XT},ZT="return a + b;",YT={kernelName:"Add",backendName:"webgl",kernelFunc:vT({opSnippet:ZT,packedOpSnippet:ZT,supportsComplex:!0,cpuKernelImpl:BN})},JT=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});let a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}},QT=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});let a=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}};var eR={kernelName:Ye,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,r=n;if(1===r.length)return uT({inputs:{x:r[0]},backend:a});if(r.length>Ve().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),i=e({inputs:r.slice(t),backend:a});return e({inputs:[n,i],backend:a})}let i=r.map(e=>e.dtype).reduce((e,t)=>yi(e,t)),s=r.map(e=>e.shape),o=Ve().getBool("WEBGL_PACK")?new QT(r[0].shape,s):new JT(r[0].shape,s);return a.runWebGLProgram(o,r,i)}};var tR={kernelName:"All",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=r.shape.length,l=Sr.parseAxisParam(i,r.shape),u=l,d=Jf.getAxesPermutation(u,o),p=r;null!=d&&(p=WT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Jf.getInnerMostAxes(u.length,o)),Jf.assertAxesAreInnerMostDims("all",u,o);let h,[c,f]=Jf.computeOutAndReduceShapes(p.shape,u),m=ET({inputs:{x:p},backend:n,attrs:{shape:[-1,Sr.sizeFromShape(f)]}}),g=_T(m,m.dtype,"all",n);if(s){h=ET({inputs:{x:g},backend:n,attrs:{shape:Jf.expandShapeToKeepDim(c,l)}})}else h=ET({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),h}};var nR={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=r.shape.length,l=Sr.parseAxisParam(i,r.shape),u=l,d=Jf.getAxesPermutation(u,o),p=r;null!=d&&(p=WT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Jf.getInnerMostAxes(u.length,o)),Jf.assertAxesAreInnerMostDims("any",u,o);let h,[c,f]=Jf.computeOutAndReduceShapes(p.shape,u),m=ET({inputs:{x:p},backend:n,attrs:{shape:[-1,Sr.sizeFromShape(f)]}}),g=_T(m,m.dtype,"any",n);if(s){h=ET({inputs:{x:g},backend:n,attrs:{shape:Jf.expandShapeToKeepDim(c,l)}})}else h=ET({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),h}},aR=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];let s="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},rR=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Sr.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");let s,o,l=this.outputShape,u=l.length,d=aN(u),p=DC("coords",u);if(1===i){o=u+1;let e=aN(o);s=`\n        ${e} sourceLocR = ${e}(${p.join()}, 0);\n        ++${p[u-1]};\n        ${e} sourceLocG = ${e}(${p.join()}, 0);\n        ++${p[u-2]};\n        ${e} sourceLocA = ${e}(${p.join()}, 0);\n        --${p[u-1]};\n        ${e} sourceLocB = ${e}(${p.join()}, 0);\n        --${p[u-2]};`}else o=u,s=`\n        ${d} sourceLocR = coords;\n        ++${p[u-1]};\n        ${d} sourceLocG = coords;\n        ++${p[u-2]};\n        ${d} sourceLocA = coords;\n        --${p[u-1]};\n        ${d} sourceLocB = coords;\n        --${p[u-2]};`;let h=["x","y","z","w","u","v"].slice(0,o),c="."+h[o-1],f=h.map(e=>"int "+e),m=DC("sourceLocR",o-1).concat("inIdx.r"),g=DC("sourceLocG",o-1).concat("inIdx.g"),y=DC("sourceLocB",o-1).concat("inIdx.b"),A=DC("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",b=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,w=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};\n        ${s}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function iR(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],i=t.shape[1];null!=a&&(r=a.shape[0],i=a.shape[1]);let s=Jf.computeOptimalWindowSize(i),o={windowSize:s,inSize:i,batchSize:r,outSize:Math.ceil(i/s)},l=new aR(o,n,null==a),u=[t];null!=a&&u.push(a);let d=e.runWebGLProgram(l,u,"int32");if(1===d.shape[1])return d;let p=iR(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function sR(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=null!=a?a.shape:t.shape,i=r[r.length-1],s=Jf.computeOptimalWindowSize(i),o=new rR(r,s,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let a=sR(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function oR(e,t,n,a){let r=[n];if(Jf.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Ve().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],i=e.texData.get(t.dataId),s=t;null!==i&&i.isPacked&&(s=e.unpackTensor(t),n.push(s));let[o,l]=Jf.computeOutAndReduceShapes(s.shape,r),u=Sr.sizeFromShape(l),d=ET({inputs:{x:s},backend:e,attrs:{shape:[-1,u]}});n.push(d);let p=iR(e,d,a);n.push(p);let h=ET({inputs:{x:p},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return sR(e,t,a)}var lR={kernelName:et,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=Sr.parseAxisParam(i,r.shape),o=Jf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=WT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Jf.getInnerMostAxes(s.length,l.shape.length)),Jf.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let d=oR(n,l,s[0],"max");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}};var uR={kernelName:tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=Sr.parseAxisParam(i,r.shape),o=Jf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=WT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Jf.getInnerMostAxes(s.length,l.shape.length)),Jf.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let d=oR(n,l,s[0],"min");return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},dR=bT({opSnippet:HC+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),pR={kernelName:nt,backendName:"webgl",kernelFunc:dR},hR=bT({opSnippet:HC+"return log(x + sqrt(x * x + 1.0));"}),cR={kernelName:at,backendName:"webgl",kernelFunc:hR},fR=bT({opSnippet:HC+"\n  return atan(x);\n"}),mR={kernelName:rt,backendName:"webgl",kernelFunc:fR},gR=vT({opSnippet:iT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+oT+"\n  return result;\n"}),yR={kernelName:st,backendName:"webgl",kernelFunc:gR},AR=bT({opSnippet:HC+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),xR={kernelName:it,backendName:"webgl",kernelFunc:AR},bR=class{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${o});\n        const ivec2 pads = ivec2(${h}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(A="avgValue / max(count, 1.0)");let x=4*Math.floor(i/4),b=i%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${o});\n      const ivec2 pads = ivec2(${h}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${A});\n      }\n    `}},vR=class{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let A="avg"===t,x="0.0";if(A||(x="-1.0 / 1e-20"),n)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${d}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let v=4*Math.floor(i/4),w=i%4,k=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n        }\n        setOutput(${b});\n      }\n    `}};var wR={kernelName:ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;zS(r,"avgPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let u=Jf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Sr.arraysEqual(u.inShape,u.outShape))return uT({inputs:{x:r},backend:n});let d=new bR(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};var kR={kernelName:ut,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=Jf.computePool3DInfo(r.shape,i,s,[1,1,1],o,l,u),p=new vR(d,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}},IR=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,d=l-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${d});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},SR=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var NR={kernelName:dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Jf.computePool3DInfo(s.shape,o,l,[1,1,1],u,d),h=new SR(p);return n.runWebGLProgram(h,[r],s.dtype)}};var CR={kernelName:lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i;zS([r,i],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=Jf.computePool2DInfo(s.shape,o,l,1,u),p=new IR(d);return n.runWebGLProgram(p,[r],s.dtype)}};var TR={kernelName:pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;return VT({a:r,b:i,transposeA:s,transposeB:o,backend:n})}},RR=class{constructor(e,t,n,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Jf.assertAndGetBroadcastShape(e,t),Jf.assertAndGetBroadcastShape(e,n);let s="0.0";null!=a&&(Jf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Jf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${s};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},ER=class{constructor(e,t,n,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Jf.assertAndGetBroadcastShape(e,t),Jf.assertAndGetBroadcastShape(e,n);let s="vec4(0.0)";null!=a&&(Jf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Jf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${s};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},$R={kernelName:rn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,mean:i,variance:s,offset:o,scale:l}=t;Sr.assert(i.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),Sr.assert(null==o||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),Sr.assert(null==l||i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=a;null==u&&(u=.001);let d=[r,i,s],p=null;null!=o&&(p=o.shape,d.push(o));let h=null;null!=l&&(h=l.shape,d.push(l));let c=Ve().getBool("WEBGL_PACK_NORMALIZATION")?new ER(r.shape,i.shape,s.shape,p,h,u):new RR(r.shape,i.shape,s.shape,p,h,u);return n.runWebGLProgram(c,d,d[0].dtype)}},MR=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=aN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,a=function(e){if(1===e)return"sourceLoc";if(e<=6)return FR.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${FR[t]} = start[${t}] + coords.${FR[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${a}));\n      }\n    `}},FR=["x","y","z","w","u","v"];var _R=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=aN(this.rank),n=DC("coords",this.rank),a=DC("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,s=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${i};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${s}\n        ${o}\n        setOutput(result);\n      }\n    `}};function PR(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a,[o,l]=Nf.parseSliceParams(r,i,s);if(Nf.assertParamsValid(r,o,l),0===Sr.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.texData.get(r.dataId),t=vC(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}let{isPacked:u}=n.texData.get(r.dataId),d=Nf.isSliceContinous(r.shape,o,l);if(u||!d){let e=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _R(l):new MR(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){let r=a.texData.get(e.dataId),i=a.makeTensorInfo(n,e.dtype),s=a.texData.get(i.dataId);Object.assign(s,r),s.refCount=1,s.shape=n,s.dtype=e.dtype;let o=Nf.computeFlatOffset(t,Sr.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),s.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(s.slice.origDataId)||1;return a.dataRefCount.set(s.slice.origDataId,l+1),i}(r,o,l,n)}var OR={kernelName:Sa,backendName:"webgl",kernelFunc:PR},DR={kernelName:ht,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;Sr.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=i.reduce((e,t)=>e*t),l=Jf.getReshaped(r.shape,i,o),u=Jf.getPermuted(l.length,i.length),d=Jf.getReshapedPermuted(r.shape,i,o),p=Jf.getSliceBeginCoords(s,i.length),h=Jf.getSliceSize(d,s,i.length),c=[],f=ET({inputs:{x:r},backend:n,attrs:{shape:l}}),m=WT({inputs:{x:f},backend:n,attrs:{perm:u}}),g=ET({inputs:{x:m},backend:n,attrs:{shape:d}}),y=PR({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}};var zR={kernelName:ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=VN(o,l,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,u)}};var LR={kernelName:ft,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{a:r,b:i}=n,s=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=Ve().getNumber("WEBGL_VERSION");if(a.shouldExecuteOnCPU([r,i])||1===o){let e=a.texData.get(r.dataId).values,t=a.texData.get(i.dataId).values,[n,s]=GN(r.shape,i.shape,e,t,r.dtype),o=a.makeTensorInfo(s,r.dtype);return a.texData.get(o.dataId).values=n,o}return t=s?new lT("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,i.shape,!1):new sT("\n  return float(int(a.r) & int(b.r));\n",r.shape,i.shape),a.runWebGLProgram(t,[r,i],r.dtype)}};var WR={kernelName:gt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.readSync(a.dataId),s=n.readSync(r.dataId),o=Jf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},BR=vT({opSnippet:"return float(a != b);",cpuKernelImpl:pC,dtype:"bool"}),VR={kernelName:jn,backendName:"webgl",kernelFunc:BR};function UR(e){let{inputs:t,backend:n}=e,{input:a}=t;return uT({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}var GR={kernelName:la,backendName:"webgl",kernelFunc:UR};var HR={kernelName:yt,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:i}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return uT({inputs:{x:i},backend:a});let t=od(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),r=pT({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===i.dtype){let t=UR({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeIntermediateTensorInfo(t),n}if(!Sr.hasEncodingLoss(i.dtype,s)){let e=uT({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([i])){let e=a.texData.get(i.dataId).values,[t,n,r]=HN(e,i.shape,i.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){let n=new GC(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,a);if("bool"===s){let e=a.makeTensorInfo([],"bool",Sr.getTypedArrayFromDType("bool",1)),t=BR({inputs:{a:i,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},jR="return ceil(x);",qR=bT({opSnippet:jR,packedOpSnippet:jR,cpuKernelImpl:jN}),XR={kernelName:At,backendName:"webgl",kernelFunc:qR},KR=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},ZR=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};var YR={kernelName:xt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{clipValueMin:s,clipValueMax:o}=r;t=Ve().getBool("WEBGL_PACK_CLIP")?new ZR(i.shape):new KR(i.shape);let l=[[s],[o]];return a.runWebGLProgram(t,[i],i.dtype,l)}},JR=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function QR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var eE={kernelName:vt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),i=new JR(a.shape),s=[QR(a,r.complexTensorInfos.real),QR(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,s,s[0].dtype)}},tE=class{constructor(e){this.outputShape=[],this.outputShape=Jf.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){let e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},nE=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Jf.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=aN(a),i=DC("coords",a),s=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map((e,t)=>`T${t}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let l=s[t],u=s.slice(-2),d=s.join(),p=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){let e=o[f-1];p+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${aE(s,l,e)}),\n            vec2(${aE(u,l,e)}));\n        }`}let h=o.length,c=o[o.length-1];p+=`\n        return getChannel(\n          getT${h}(${aE(s,l,c)}),\n          vec2(${aE(u,l,c)}));`,this.userCode=`\n      float getValue(${s.map(e=>"int "+e)}) {\n        ${p}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[a-1]} = ${i[a-1]} + 1;\n        if (${i[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[a-2]} = ${i[a-2]} + 1;\n        if (${i[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[a-1]} = ${i[a-1]} - 1;\n        if (${i[a-2]} < ${n[a-2]} &&\n            ${i[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}};function aE(e,t,n){let a=e.indexOf(t);return e.map((e,t)=>t===a?`${e} - ${n}`:e).join()}function rE(e){let{inputs:t,backend:n}=e,{input:a}=t;return uT({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}var iE={kernelName:hn,backendName:"webgl",kernelFunc:rE};function sE(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map(e=>UR({inputs:{input:e},backend:n})),r=e.map(e=>rE({inputs:{input:e},backend:n})),i=sE(a,t,n),s=sE(r,t,n),o=pT({inputs:{real:i,imag:s},backend:n});return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),r.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map(e=>{let a=[-1,Sr.sizeFromShape(e.shape.slice(t))];return ET({inputs:{x:e},backend:n,attrs:{shape:a}})}),i=r.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),s=Jf.computeOutShape(r.map(e=>e.shape),1),o=1===r[0].shape[0],l=qN(i,s,a,o),u=Jf.computeOutShape(e.map(e=>e.shape),t),d=n.makeTensorInfo(u,a,l);return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}let i=e.filter(e=>Sr.sizeFromShape(e.shape)>0),s=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){let t=s?new GC(e[0].shape,KC):new ZC(e[0].shape,KC);return n.runWebGLProgram(t,e,a)}let o=Ve().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){let e=[];for(let r=0;r<i.length;r+=o){let a=i.slice(r,r+o);e.push(sE(a,t,n))}let a=sE(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return a}if(s){let e=new nE(i.map(e=>e.shape),t);return n.runWebGLProgram(e,i,a)}let{tensors2D:l,outShape:u}=function(e,t,n){let a=Jf.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>ET({inputs:{x:e},attrs:{shape:[-1,Sr.sizeFromShape(e.shape.slice(t))]},backend:n})),outShape:a}}(i,t,n),d=new tE(l.map(e=>e.shape)),p=n.runWebGLProgram(d,l,a);l.forEach(e=>n.disposeIntermediateTensorInfo(e));let h=ET({inputs:{x:p},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(p),h}function oE(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=Sr.parseAxisParam(r,t[0].shape)[0],s=t.map(e=>e.shape);Jf.assertParamsConsistent(s,i);let o=Jf.computeOutShape(t.map(e=>e.shape),i);if(0===Sr.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Sr.sizeFromShape(e.shape)>0);return 1===l.length?uT({inputs:{x:l[0]},backend:n}):sE(l,i,n)}var lE={kernelName:wt,backendName:"webgl",kernelFunc:oE},uE=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,A=m?3:1,x="",b="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");let v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${A}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${b}\n        setOutput(result);\n      }\n    `}},dE=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,h=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${s});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${d}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},pE=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=uN(this.outputShape.length);let i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u,p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<u;m++)p+=`\n           vec4 xTexelC${2*m};\n           int xTexelC${2*m}Ready;\n           vec4 xTexelC${2*m+1};\n           int xTexelC${2*m+1}Ready;\n           vec4 xC${m};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let m=0;m<u;m++)p+=`\n           xTexelC${2*m} = vec4(0.0);\n           xTexelC${2*m}Ready = 0;\n           xTexelC${2*m+1} = vec4(0.0);\n           xTexelC${2*m+1}Ready = 0;\n           xC${m} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(d+1)/2;m++){let t=2*m;if(p+=`\n           xC = xCCorner + ${t*o};\n           `,1===s){if(t<u&&(i%2===1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){let e=i%2===0?Sr.nearestLargerEven(o):o;o%2===0&&i%2===1||o%2!==0&&i%2!==1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(i%2===1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let h="",c="";n&&(h=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${h}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},hE=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=uN(this.outputShape.length);let{dataFormat:n}=t,a=WS(),r="channelsLast"===n,i=r?1:2,s=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${s}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}};function cE(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function fE(e){let t,{x:n,filter:a,convInfo:r,backend:i,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=n.shape,p=i.texData.get(n.dataId),h=r.inChannels,c=d[0]*d[1]*d[2],f=r.outChannels,m="channelsLast"===r.dataFormat,g=!1,y=[];if(null!=o){let e=cE(o.shape,m);null!=e&&(o=ET({inputs:{x:o},backend:i,attrs:{shape:e}}),y.push(o))}if(null!=s){let e=cE(s.shape,m);null!=e&&(s=ET({inputs:{x:s},backend:i,attrs:{shape:e}}),y.push(s))}if((1!==c&&1!==f||!(h>1e3))&&p.isPacked&&m&&null!=p.texture&&d[2]%2!==0&&Sr.arraysEqual(p.shape.slice(-3),d.slice(-3))){let e=d[0]*d[1]*(d[2]+1),h={dataId:n.dataId,shape:[1,e,r.inChannels],dtype:n.dtype},c=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,Sr.assert(NS(p.shape,h.shape),()=>`packed reshape ${p.shape} to ${h.shape} isn't free`);let f=ET({inputs:{x:a},backend:i,attrs:{shape:[1,r.inChannels,r.outChannels]}});y.push(f);let m=VT({a:h,b:f,backend:i,transposeA:false,transposeB:g,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:l}),A=i.texData.get(m.dataId);Sr.assert(A.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=c,A.shape=r.outShape,t=uT({inputs:{x:m},backend:i}),t.shape=r.outShape,y.push(m)}else{let e=r.outHeight*r.outWidth,d=ET({inputs:{x:n},backend:i,attrs:{shape:m?[r.batchSize,e,r.inChannels]:[r.batchSize,r.inChannels,e]}}),p=ET({inputs:{x:a},backend:i,attrs:{shape:[1,r.inChannels,r.outChannels]}}),h=VT({a:m?d:p,b:m?p:d,transposeA:!m,transposeB:g,backend:i,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:l});t=ET({inputs:{x:h},backend:i,attrs:{shape:r.outShape}}),y.push(d),y.push(p),y.push(h)}for(let A of y)i.disposeIntermediateTensorInfo(A);return t}function mE(e){let{x:t,filter:n,convInfo:a,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:p,outWidth:h,outHeight:c,dataFormat:f}=a,m="channelsLast"===f,g=u*d*p,y=c*h,A=[a.batchSize,g,y],x=[];if(null!=s){let e=cE(s.shape,m);null!=e&&(s=ET({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}if(null!=i){let e=cE(i.shape,m);null!=e&&(i=ET({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}let b=ET({inputs:{x:n},backend:r,attrs:{shape:[1,g,Sr.sizeFromShape(n.shape)/g]}});x.push(b);let v=new hE(A,a),w=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],k=r.runWebGLProgram(v,[t],"float32",w),I=ET({inputs:{x:k},backend:r,attrs:{shape:A}});x.push(k),x.push(I);let S=null!=i,N=null!=s,C="leakyrelu"===l,T=l?wT(l,!0):null,R=new kT(m?I.shape:b.shape,m?b.shape:I.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,S,T,N,C),E=m?[I,b]:[b,I];if(i&&E.push(i),N&&E.push(s),C){let e=r.makeTensorInfo([],"float32",Sr.createScalarValue(o,"float32"));E.push(e),x.push(e)}let $=r.runWebGLProgram(R,E,"float32"),M=ET({inputs:{x:$},backend:r,attrs:{shape:a.outShape}});x.push($);for(let F of x)r.disposeIntermediateTensorInfo(F);return M}var gE={kernelName:kt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}=r,h=Jf.convertConv2DDataFormat(u),c=Jf.computeConv2DInfo(i.shape,s.shape,o,d,l,p,!1,h);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===h&&Ve().getBool("WEBGL_EXP_CONV")){let e=new pE(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=a.runWebGLProgram(e,[i,s],"float32",n)}else if(Ve().getBool("WEBGL_CONV_IM2COL"))t=mE({x:i,filter:s,convInfo:c,backend:a});else{let e=new uE(c);t=a.runWebGLProgram(e,[i,s],"float32")}else t=fE({x:i,filter:s,convInfo:c,backend:a});let f=ET({inputs:{x:t},backend:a,attrs:{shape:c.outShape}});return a.disposeIntermediateTensorInfo(t),f}},yE=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},AE=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,d=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${d}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},xE=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${s};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},bE=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var vE={kernelName:It,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,p=Jf.convertConv2DDataFormat(l),h=Jf.computeConv2DInfo(r.shape,d,s,1,o,u,!1,p),c=new yE(h);return n.runWebGLProgram(c,[r,i],"float32")}},wE=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=uN(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}};var kE={kernelName:St,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{inputShape:s,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=a,p=Jf.convertConv2DDataFormat(u),h=Jf.computeConv2DInfo(s,i.shape,o,1,l,d,!1,p);if(Ve().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===p){let e=[[h.strideHeight,h.strideWidth]],t=new wE(h);return n.runWebGLProgram(t,[r,i],"float32",e)}{let e=new AE(h);return n.runWebGLProgram(e,[r,i],"float32")}}};var IE={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=Jf.computeConv3DInfo(r.shape,i.shape,s,l,o),d=new dE(u);return n.runWebGLProgram(d,[r,i],"float32")}};var SE={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a,u=Jf.computeConv3DInfo(r.shape,l,s,1,o),d=new xE(u);return n.runWebGLProgram(d,[r,i],"float32")}};var NE,CE={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a,u=Jf.computeConv3DInfo(l,i.shape,o,1,s),d=new bE(u);return n.runWebGLProgram(d,[r,i],"float32")}},TE={kernelName:"Cos",backendName:"webgl",kernelFunc:bT({opSnippet:xT+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${oT}\n  return result;\n`})},RE=bT({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),EE={kernelName:Et,backendName:"webgl",kernelFunc:RE},$E=class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,s,o,l]=e,[u]=t,[d,p]=n;this.outputShape=[u,d,p,l];let h="bilinear"===a?1:0,[c,f]=[s-1+".0",o-1+".0"],[m,g,y]=d>1?[""+(s-1)/(d-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[A,x,b]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${A});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},ME={kernelName:Ft,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,d=new $E(r.shape,i.shape,o,l,u);return n.runWebGLProgram(d,[r,i,s],"float32")}};!function(e){e.Prod="*",e.Sum="+"}(NE||(NE={}));var FE=class{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,i=this.op===NE.Prod?"1.0":"0.0",s=n?i:`getX(${_E(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=a?"end != "+(o-1):"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${aN(r)} coords = getOutputCoords();\n        int end = ${PE(r,"coords",this.op)};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${PE(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${_E(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function _E(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function PE(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function OE(e,t,n,a,r,i){let s=t.shape.length,o=Jf.getAxesPermutation([a],s),l=t;null!=o&&(l=WT({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=Jf.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let d=l.shape[u],p=uT({inputs:{x:l},backend:n});for(let h=0;h<=Math.ceil(Math.log2(d))-1;h++){let t=new FE(e,l.shape,!1,i),a=[[h]],r=p;p=n.runWebGLProgram(t,[p],p.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){let t=new FE(e,l.shape,r,i),a=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){let e=WT({inputs:{x:p},backend:n,attrs:{perm:Jf.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}var DE={kernelName:$t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return OE(NE.Prod,r,n,i,s,o)}};var zE={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return OE(NE.Sum,r,n,i,s,o)}};var LE={kernelName:_t,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a;if(1===r.shape.length){let e=n.readSync(r.dataId),t=n.readSync(i.dataId),a=VN(e,t,i.dtype,i.shape,s);return n.makeTensorInfo([s],i.dtype,a)}if(2===r.shape.length){let e=n.bufferSync(r),t=n.bufferSync(i),a=UN(e,t,s,o);return n.makeTensorInfo(a.shape,i.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},WE=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};var BE={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l=("NHWC"===s?r.shape[1]:r.shape[2])*i,u=("NHWC"===s?r.shape[2]:r.shape[3])*i,d=("NHWC"===s?r.shape[3]:r.shape[1])/(i*i),p=new WE("NHWC"===s?[o,l,u,d]:[o,d,l,u],i,s);return n.runWebGLProgram(p,[r],r.dtype)}},VE=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=uN(this.outputShape.length);let i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${d}\n        ${u}\n        setOutput(result);\n      }\n    `}},UE=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=uN(this.outputShape.length);let i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,p=d,h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<d;g++)h+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;h+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<d;g++)h+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(p+1)/2;g++){let e=2*g;if(h+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<d&&(s%2===1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,h+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){let t=s%2===0?Sr.nearestLargerEven(l):l;l%2===0&&s%2===1||l%2!==0&&s%2!==1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,h+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):h+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(s%2===1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(h+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(h+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(h+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let c="",f="";n&&(c=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var GE={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l,dimRoundingMode:u}=a,d=l;null==d&&(d=[1,1]),Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`);let p,h=Jf.computeConv2DInfo(r.shape,i.shape,s,d,o,u,!0);p=Ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new UE(h):new VE(h);let c=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,i],"float32",c)}},HE=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},jE=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,s=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var qE={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a,p=Jf.computeConv2DInfo(r.shape,d,s,o,l,u,!0),h=new HE(p);return n.runWebGLProgram(h,[r,i],"float32")}};var XE={kernelName:zt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a,p=Jf.computeConv2DInfo(d,i.shape,s,o,l,u,!0),h=new jE(p);return n.runWebGLProgram(h,[r,i],"float32")}},KE=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};var ZE={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],i=Sr.sizeFromShape(a.shape),s=ET({inputs:{x:a},backend:n,attrs:{shape:[i]}}),o=new KE(i),l=n.runWebGLProgram(o,[s],s.dtype),u=ET({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(l),u}},YE=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:d,left:p}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${s}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};var JE={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s}=n,{strides:o,pad:l,dilations:u}=r,d=Jf.computeDilation2DInfo(i.shape,s.shape,o,l,"NHWC",u),p=new YE(d);t=a.runWebGLProgram(p,[i,s],"float32");let h=ET({inputs:{x:t},backend:a,attrs:{shape:d.outShape}});return a.disposeIntermediateTensorInfo(t),h}};var QE={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,i=t,{allDims:s,summedDims:o,idDims:l}=Jf.decodeEinsumEquation(r,i.length);Jf.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:d}=Jf.getEinsumComputePath(o,l),p=d.length,h=null,c=s.length,f=[];for(let m=0;m<p;++m){for(let e of d[m]){let t,{permutationIndices:a,expandDims:r}=Jf.getEinsumPermutation(c,l[e]);Jf.isIdentityPermutation(a)?t=i[e]:(t=WT({inputs:{x:i[e]},backend:n,attrs:{perm:a}}),f.push(t));let s=t.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Sr.arraysEqual(t.shape,s)||(t=ET({inputs:{x:t},backend:n,attrs:{shape:s}}),f.push(t)),null===h?h=t:(h=TT({inputs:{a:t,b:h},backend:n}),f.push(h))}m<p-1&&(u[m]>=0&&(h=zT({inputs:{x:h},backend:n,attrs:{axis:u[m]-(s.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}},e$={kernelName:"Elu",backendName:"webgl",kernelFunc:bT({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},t$={kernelName:qt,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=Ve().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new lT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new sT("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(i,[a,r],a.dtype)}},n$=vT({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:XN}),a$={kernelName:Kt,backendName:"webgl",kernelFunc:n$},r$={kernelName:"Erf",backendName:"webgl",kernelFunc:bT({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Jf.ERF_P};\n  float a1 = ${Jf.ERF_A1};\n  float a2 = ${Jf.ERF_A2};\n  float a3 = ${Jf.ERF_A3};\n  float a4 = ${Jf.ERF_A4};\n  float a5 = ${Jf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`})},i$=bT({opSnippet:xT+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:KN,dtype:"float32"}),s$={kernelName:"Exp",backendName:"webgl",kernelFunc:i$};function o$(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice(),l=r;return r<0&&(Sr.assert(-(s+1)<=r,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+r+1),o.splice(l,0,1),ET({inputs:{x:i},backend:a,attrs:{shape:o}})}var l$={kernelName:Yt,backendName:"webgl",kernelFunc:o$},u$="return exp(x) - 1.0;",d$=bT({opSnippet:u$,packedOpSnippet:u$,cpuKernelImpl:ZN}),p$={kernelName:Jt,backendName:"webgl",kernelFunc:d$},h$=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r,i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0";if("real"===e)r="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);r="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${r}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function c$(e,t,n){let a=n.texData.get(e.dataId),r=Sr.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],s=ET({inputs:{x:e},backend:n,attrs:{shape:[r/i,i]}}),o=s.shape,l=new h$("real",o,t),u=new h$("imag",o,t),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(u,d,"float32"),c=pT({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);let f=ET({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(c),f}var f$={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return c$(a,!1,n)}},m$=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function g$(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:i}=n;if(i=i||Sr.inferDtype(r),"string"===i){let e=Sr.getArrayFromDType(i,Sr.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,i,e)}{let e=new m$(a,r),n=[[r]];return t.runWebGLProgram(e,[],i,n)}}var y$,A$={kernelName:en,backendName:"webgl",kernelFunc:g$},x$=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},b$={kernelName:tn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:a}=t,r=n,i=new x$(a.shape);return r.runWebGLProgram(i,[a],a.dtype)}},v$="return floor(x);",w$=bT({opSnippet:v$,packedOpSnippet:v$,cpuKernelImpl:YN}),k$={kernelName:nn,backendName:"webgl",kernelFunc:w$},I$=vT({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),S$={kernelName:an,backendName:"webgl",kernelFunc:I$},N$=class{constructor(e){this.variableNames=["A"];let t=WS(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},C$=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=WS(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},T$={kernelName:or,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:i}=a,s="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[u,l],p=[u,l,i];if(o||s){let e=Ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==y$||e!==R$)&&(R$=e,y$=document.createElement("canvas").getContext("2d",{willReadFrequently:R$})),y$.canvas.width=l,y$.canvas.height=u,y$.drawImage(r,0,0,l,u),r=y$.canvas}let h=n.makeTensorInfo(d,"int32");n.texData.get(h.dataId).usage=$I.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),r);let c=Ve().getBool("WEBGL_PACK")?new C$(p):new N$(p),f=n.runWebGLProgram(c,[h],"int32");return n.disposeData(h.dataId),f}},R$=Ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");var E$={kernelName:dr,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i,filter:s,bias:o,preluActivationWeights:l}=n,{strides:u,pad:d,dataFormat:p,dilations:h,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=r,g=Jf.convertConv2DDataFormat(p),y=Jf.computeConv2DInfo(i.shape,s.shape,u,h,d,c,!1,g),A=[],x=null!=o,b=null!=l,v="leakyrelu"===f,w=()=>{let e=[i,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=ET({inputs:{x:e},backend:a,attrs:{shape:[e.shape[0],1,1]}});return A.push(t),t}return e};if(x&&e.push(t(o,p)),b&&e.push(t(l,p)),v){let t=a.makeTensorInfo([],"float32",Sr.createScalarValue(m,"float32"));e.push(t),A.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&Ve().getBool("WEBGL_EXP_CONV")){let e=f?wT(f,!0):null,n=new pE(y,x,e,b,v),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],i=w();t=a.runWebGLProgram(n,i,"float32",r)}else if(Ve().getBool("WEBGL_CONV_IM2COL"))t=mE({x:i,filter:s,convInfo:y,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?wT(f,!1):null,n=new uE(y,x,e,b,v),r=w();t=a.runWebGLProgram(n,r,"float32")}else t=fE({x:i,filter:s,convInfo:y,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let k=ET({inputs:{x:t},backend:a,attrs:{shape:y.outShape}});return A.push(t),A.forEach(e=>a.disposeIntermediateTensorInfo(e)),k}};var $$={kernelName:pr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=a,f=[],m=d;null==m&&(m=[1,1]),Sr.assert(Jf.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g,y=Jf.computeConv2DInfo(r.shape,i.shape,l,m,u,p,!0),A=Ve().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=h?wT(h,A):null,b=[r,i],v=null!=s,w=null!=o,k="leakyrelu"===h;if(v&&b.push(s),w&&b.push(o),k){let e=n.makeTensorInfo([],"float32",Sr.createScalarValue(c,"float32"));b.push(e),f.push(e)}g=A?new UE(y,v,x,w,k):new VE(y,v,x,w,k);let I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],S=n.runWebGLProgram(g,b,"float32",I);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}},M$=class{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;let r=aN(n.length),i="\n    int index;";for(let s=0;s<this.sliceDim;s++)i+=`\n          index = round(getIndices(coords[0], ${s}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[s]};\n          flattenIndex += index * ${this.strides[s]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};var F$={kernelName:on,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=r.shape,s=i[i.length-1],o=Sr.sizeFromShape(a.shape),[l,u,d,p]=Jf.prepareAndValidate(a,r),h=ET({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),c=ET({inputs:{x:a},backend:n,attrs:{shape:[Sr.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),i=JN(e,t,a.dtype,u,s,d,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,i.values)}let f=new M$(s,p,[u,d],a.shape),m=n.runWebGLProgram(f,[c,h],c.dtype),g=ET({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}},_$=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=aN(this.rank),a=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("index"):n.push(`${t[a]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}};function P$(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a,l=Sr.parseAxisParam(s,r.shape)[0];if(Ve().get("DEBUG")){let e=n.readSync(i.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){let a=e[n];Sr.assert(a<=t-1&&a>=0,()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`)}}let u=Jf.segment_util.collectGatherOpShapeInfo(r,i,l,o),d=Sr.sizeFromShape(i.shape),p=[],h=ET({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=ET({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){let e=n.bufferSync(c),t=n.bufferSync(h),a=QN(t,e,f);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}let m=new _$(h.shape,f),g=n.runWebGLProgram(m,[h,c],h.dtype);p.push(g);let y=ET({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}var O$={kernelName:sn,backendName:"webgl",kernelFunc:P$},D$=vT({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:eC,dtype:"bool"}),z$={kernelName:ln,backendName:"webgl",kernelFunc:D$},L$=vT({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:tC}),W$={kernelName:un,backendName:"webgl",kernelFunc:L$};var B$={kernelName:pn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return c$(a,!0,n)}},V$=bT({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),U$={kernelName:cn,backendName:"webgl",kernelFunc:V$},G$=bT({opSnippet:"return float(isinf(x));",dtype:"bool"}),H$={kernelName:fn,backendName:"webgl",kernelFunc:G$},j$=bT({opSnippet:"return float(isnan(x));",dtype:"bool"}),q$={kernelName:mn,backendName:"webgl",kernelFunc:j$},X$=vT({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:nC,dtype:"bool"}),K$={kernelName:yn,backendName:"webgl",kernelFunc:X$},Z$=vT({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:aC,dtype:"bool"}),Y$={kernelName:An,backendName:"webgl",kernelFunc:Z$};var J$={kernelName:xn,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=rC(a,r,i);return t.makeTensorInfo([s.length],"float32",s)}},Q$={kernelName:"Log",backendName:"webgl",kernelFunc:bT({opSnippet:xT+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:iC})},eM=bT({opSnippet:xT+"\n  return log(1.0 + x);\n"}),tM={kernelName:vn,backendName:"webgl",kernelFunc:eM},nM=vT({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),aM={kernelName:wn,backendName:"webgl",kernelFunc:nM},rM=bT({opSnippet:"return float(!(x >= 1.0));"}),iM={kernelName:kn,backendName:"webgl",kernelFunc:rM},sM=vT({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),oM={kernelName:In,backendName:"webgl",kernelFunc:sM},lM=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let i=t,s=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},uM=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=t,s=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},dM={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a,u=Ve().getBool("WEBGL_PACK_NORMALIZATION")?new uM(r.shape,i,s,o,l):new lM(r.shape,i,s,o,l);return n.runWebGLProgram(u,[r],r.dtype)}},pM=class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},hM={kernelName:Rn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a,p=new pM(r.shape,o,l,u,d);return n.runWebGLProgram(p,[r,i,s],r.dtype)}};function cM(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a,o=r.shape.length,l=Sr.parseAxisParam(i,r.shape),u=l,d=Jf.getAxesPermutation(u,o),p=null!=d,h=n.shouldExecuteOnCPU([r]),c=r;if(p){if(h){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=r.shape[d[n]];let a=_C(e,r.shape,r.dtype,d,t);c=n.makeTensorInfo(t,r.dtype),n.texData.get(c.dataId).values=a}else c=DT(r,d,n);u=Jf.getInnerMostAxes(u.length,o)}Jf.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=Jf.computeOutAndReduceShapes(c.shape,u),y=m;if(s&&(y=Jf.expandShapeToKeepDim(m,l)),h){let e=n.texData.get(c.dataId).values,t=sC(e,Sr.sizeFromShape(g),y,r.dtype);f=n.makeTensorInfo(y,r.dtype),n.texData.get(f.dataId).values=t}else f=function(e,t,n,a){let r=Sr.sizeFromShape(t),i=ET({inputs:{x:e},attrs:{shape:[Sr.sizeFromShape(e.shape)/r,r]},backend:a}),s=_T(i,e.dtype,"max",a),o=ET({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}(c,g,y,n);return p&&n.disposeIntermediateTensorInfo(c),f}var fM={kernelName:"Max",backendName:"webgl",kernelFunc:cM},mM=vT({opSnippet:iT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+oT+"\n  return result;\n",cpuKernelImpl:oC}),gM={kernelName:Mn,backendName:"webgl",kernelFunc:mM};var yM={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;zS(r,"maxPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let u=Jf.computePool2DInfo(r.shape,i,s,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&Sr.arraysEqual(u.inShape,u.outShape))return uT({inputs:{x:r},backend:n});let d=new bR(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};var AM={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=Jf.computePool3DInfo(r.shape,i,s,[1,1,1],o,u,l),p=new vR(d,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}},xM=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=r-1-e.padInfo.top,o=i-1-e.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},bM=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=o-1-e.padInfo.front,p=l-1-e.padInfo.top,h=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${p}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};var vM={kernelName:On,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Jf.computePool3DInfo(s.shape,o,l,[1,1,1],u,d),h=new vR(p,"max",!0),c=n.runWebGLProgram(h,[s],s.dtype),f=new bM(p),m=n.runWebGLProgram(f,[r,c],s.dtype);return n.disposeIntermediateTensorInfo(c),m}};var wM={kernelName:_n,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t,o=i;zS([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,h=Jf.computePool2DInfo(o.shape,l,u,1,d,p),c=new bR(h,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new xM(h),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var kM={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,includeBatchInIndex:l}=n,u=a;Sr.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let d=[1,1];Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${d}'`);let p=Jf.computePool2DInfo(r.shape,i,s,d,o),[h,c]=function(e,t,n,a){let r=new bR(n,"max",!1),i=a.runWebGLProgram(r,[e],"float32");return r=new bR(n,"max",!0,!0,t),[i,a.runWebGLProgram(r,[e],"float32")]}(r,l,p,u);return[h,c]}};var IM={kernelName:zn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{keepDims:i,axis:s}=n,o=a,l=r.shape.length,u=Sr.parseAxisParam(s,r.shape),d=u,p=Jf.getAxesPermutation(d,l),h=null!=p,c=o.shouldExecuteOnCPU([r]),f=[],m=r;if(h){if(c){let e=o.texData.get(m.dataId).values,t=new Array(l);for(let a=0;a<t.length;a++)t[a]=r.shape[p[a]];let n=_C(e,r.shape,r.dtype,p,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=DT(r,p,o);f.push(m),d=Jf.getInnerMostAxes(d.length,l)}Jf.assertAxesAreInnerMostDims("sum",d,l);let[g,y]=Jf.computeOutAndReduceShapes(m.shape,d),A=g;i&&(A=Jf.expandShapeToKeepDim(g,u));let x=function(e,t,n,a){let r=Sr.sizeFromShape(t),i=ET({inputs:{x:e},attrs:{shape:[Sr.sizeFromShape(e.shape)/r,r]},backend:a}),s=_T(i,"float32","mean",a),o=ET({inputs:{x:s},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}(m,y,A,o);for(let b of f)o.disposeIntermediateTensorInfo(b);return x}};var SM={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a,o=r.shape.length,l=Sr.parseAxisParam(i,r.shape),u=l,d=Jf.getAxesPermutation(u,o),p=r;null!=d&&(p=WT({inputs:{x:r},backend:n,attrs:{perm:d}}),u=Jf.getInnerMostAxes(u.length,r.shape.length)),Jf.assertAxesAreInnerMostDims("min",u,o);let h,[c,f]=Jf.computeOutAndReduceShapes(p.shape,u),m=ET({inputs:{x:p},backend:n,attrs:{shape:[-1,Sr.sizeFromShape(f)]}}),g=_T(m,m.dtype,"min",n);if(s){h=ET({inputs:{x:g},backend:n,attrs:{shape:Jf.expandShapeToKeepDim(c,l)}})}else h=ET({inputs:{x:g},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),h}},NM=vT({opSnippet:iT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+oT+"\n  return result;\n",cpuKernelImpl:lC}),CM={kernelName:Wn,backendName:"webgl",kernelFunc:NM},TM=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=aN(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},RM=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=aN(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=DC("rc",a),l=DC("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,p="reflect"===n?0:1,h="";if(1===a){let e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;h=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n      `}else{let e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;h=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${d});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${d});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${d});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${d});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}},EM={kernelName:Bn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,mode:s}=a,o=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RM(r.shape,i,s):new TM(r.shape,i,s);return n.runWebGLProgram(o,[r],r.dtype)}},$M={kernelName:"Mod",backendName:"webgl",kernelFunc:vT({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+oT+"\n  return result;\n"})},MM=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},FM=vT({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),_M={kernelName:Gt,backendName:"webgl",kernelFunc:FM},PM="return a - b;",OM=vT({opSnippet:PM,packedOpSnippet:PM,supportsComplex:!0,cpuKernelImpl:$C}),DM={kernelName:"Sub",backendName:"webgl",kernelFunc:OM};function zM(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=Sr.parseAxisParam([i],r.shape),o=cM({inputs:{x:r},backend:n,attrs:{reductionIndices:s,keepDims:!1}}),l=Jf.expandShapeToKeepDim(o.shape,s),u=ET({inputs:{x:o},backend:n,attrs:{shape:l}}),d=OM({inputs:{a:r,b:u},backend:n}),p=i$({inputs:{x:d},backend:n}),h=zT({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:!1}}),c=ET({inputs:{x:h},backend:n,attrs:{shape:l}}),f=FM({inputs:{a:p,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),f}var LM={kernelName:Pa,backendName:"webgl",kernelFunc:zM};var WM={kernelName:Un,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a,l=o?r:zM({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new MM(u,d,i),h=[[s]],c=n.runWebGLProgram(p,[l],"int32",h);return o||n.disposeIntermediateTensorInfo(l),c}},BM=HC+"\n  return -x;\n";var VM={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])){let e=a.texData.get(r.dataId),[t,n]=dC(e.values,r.shape,r.dtype);return a.makeTensorInfo(n,r.dtype,t)}return t=Ve().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new ZC(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new GC(r.shape,BM),a.runWebGLProgram(t,[r],r.dtype)}},UM=sg.nonMaxSuppressionV3Impl;var GM={kernelName:qn,backendName:"webgl",kernelFunc:function(e){Jf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=UM(u,d,s,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},HM=sg.nonMaxSuppressionV4Impl;var jM={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){Jf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,d=n.readSync(r.dataId),p=n.readSync(i.dataId),{selectedIndices:h,validOutputs:c}=HM(d,p,s,o,l,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}},qM=sg.nonMaxSuppressionV5Impl;var XM={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){Jf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),p=n.readSync(i.dataId),h=s,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=qM(d,p,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},KM=class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},ZM={kernelName:Yn,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=Sr.sizeFromShape(r.shape),d=new KM(u,s,o,l),p=ET({inputs:{x:r},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(d,[p],i);n.disposeIntermediateTensorInfo(p);let c=ET({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(h),c}};function YM(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=UR({inputs:{input:a},backend:n}),t=YM({inputs:{x:e},backend:n}),r=rE({inputs:{input:a},backend:n}),i=YM({inputs:{x:r},backend:n}),s=pT({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),s}return g$({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var JM={kernelName:ir,backendName:"webgl",kernelFunc:YM};var QM={kernelName:Zn,backendName:"webgl",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let t=UR({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=rE({inputs:{input:r},backend:a}),s=YM({inputs:{x:i},backend:a}),o=pT({inputs:{real:n,imag:s},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(i),a.disposeIntermediateTensorInfo(s),o}return g$({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};var eF={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return o$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{Sr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),Sr.assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=oE({inputs:t.map(e=>{let t=o$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t}),backend:n,attrs:{axis:r}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),l}},tF=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=aN(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},nF=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);let a=e.length,r=aN(a),i=t.map(e=>e[0]).join(","),s=t.map((t,n)=>t[0]+e[n]).join(","),o=DC("rc",a),l=DC("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,d=1===a?"source":`vec2(${l.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let f=0,m=1===a?2:4;f<m;f++)c+=`\n        ${p[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${d});\n        }\n      `;c+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${s});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},aF=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;if(0===Sr.sizeFromShape(r.shape)){return g$({backend:n,attrs:{shape:i.map((e,t)=>e[0]+r.shape[t]+e[1]),value:s,dtype:r.dtype}})}let o=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nF(r.shape,i,s):new tF(r.shape,i,s),l=[[s]];return n.runWebGLProgram(o,[r],r.dtype,l)},rF={kernelName:Qn,backendName:"webgl",kernelFunc:aF},iF={kernelName:"Pow",backendName:"webgl",kernelFunc:vT({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+oT+"\n  return result;\n"})};var sF={kernelName:aa,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{axis:s,keepDims:o}=r,l=i.shape.length,u=[],d=Sr.parseAxisParam(s,i.shape),p=d,h=Jf.getAxesPermutation(p,l),c=i;if(null!=h&&(c=WT({inputs:{x:i},backend:a,attrs:{perm:h}}),p=Jf.getInnerMostAxes(p.length,l),u.push(c)),Jf.assertAxesAreInnerMostDims("prod",p,l),a.shouldExecuteOnCPU([c])){let e=a.texData.get(c.dataId).values,{outVals:n,outShape:r,outDtype:i}=hC(c.shape,c.dtype,e,p);t=a.makeTensorInfo(r,i,n)}else{let[e,n]=Jf.computeOutAndReduceShapes(c.shape,p),r=Sr.sizeFromShape(n),s=ET({inputs:{x:c},backend:a,attrs:{shape:[-1,r]}}),o=_T(s,Ai(i.dtype),"prod",a);t=ET({inputs:{x:o},backend:a,attrs:{shape:e}}),u.push(s),u.push(o)}if(o){u.push(t);let e=Jf.expandShapeToKeepDim(t.shape,d);t=ET({inputs:{x:t},backend:a,attrs:{shape:e}})}return u.forEach(e=>a.disposeIntermediateTensorInfo(e)),t}};var oF={kernelName:ra,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=a,l=r.map(e=>n.readSync(e.dataId)),u=r.map(e=>e.shape),d=n.readSync(i.dataId),p=n.readSync(s.dataId),[h,c,f]=cC(l,u,d,i.shape,i.dtype,p,s.shape,o),m=h.map(e=>n.makeTensorInfo([e.length],"int32",e)),g=n.makeTensorInfo(f,i.dtype,c);return m.concat([g])}};var lF={kernelName:ia,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:i}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,d]=fC(s,a.shape,a.dtype,o,r.shape,l,i.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([d.length],a.dtype,d)]}};var uF={kernelName:sa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(r.dataId),d=n.readSync(i.dataId),p=n.readSync(s.dataId),h=o.map(e=>n.readSync(e.dataId)),c=o.map(e=>e.shape),[f,m]=mC(u,r.shape,d,i.shape,i.dtype,p,s.shape,h,c,l);return n.makeTensorInfo(f,i.dtype,m)}},dF=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=gC(a,r,i,s);return t.makeTensorInfo([o.length],s,o)},pF={kernelName:oa,backendName:"webgl",kernelFunc:dF},hF=bT({opSnippet:"return 1.0 / x;"}),cF={kernelName:ua,backendName:"webgl",kernelFunc:hF},fF=bT({opSnippet:HC+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),mF={kernelName:da,backendName:"webgl",kernelFunc:fF},gF=bT({opSnippet:HC+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),yF={kernelName:ga,backendName:"webgl",kernelFunc:gF},AF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},xF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]},\n          ${d[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};var bF={kernelName:fa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,d=Ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xF(r.shape,l,u,i,s):new AF(r.shape,l,u,i,s);return n.runWebGLProgram(d,[r],"float32")}},vF=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,i,s]=e,o=[n&&i>1?a-1:a,n&&s>1?r-1:r],l=[n&&i>1?i-1:i,n&&s>1?s-1:s],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,c=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var wF={kernelName:ma,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,o=new vF(i.shape,r.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}},kF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";u=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]});\n      const vec2 inputShapeRC = vec2(${s}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},IF=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,s,o,l]=e;this.outputShape=[i,t,n,l];let u,d=[a&&t>1?s-1:s,a&&n>1?o-1:o],p=[a&&t>1?t-1:t,a&&n>1?n-1:n],h=a?"0.5":"0.0";u=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${d[0]/p[0]},\n          ${d[1]/p[1]},\n          ${d[1]/p[1]});\n      const vec3 inputShapeRC = vec3(${s}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};var SF={kernelName:ha,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,d=Ve().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new IF(r.shape,l,u,i,s):new kF(r.shape,l,u,i,s);return n.runWebGLProgram(d,[r],r.dtype)}},NF=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,i,s]=e,o=[n&&i>1?a-1:a,n&&s>1?r-1:r],l=[n&&i>1?i-1:i,n&&s>1?s-1:s],u=o[0]/l[0],d=o[1]/l[1],p=1/u,h=1/d,c=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${d});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};var CF={kernelName:ca,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,o=new NF(i.shape,r.shape,s);return n.runWebGLProgram(o,[i],i.dtype)}},TF=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let a=e.map((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a)).join(","),r=aN(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}},RF=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=DC("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,s=aN(n);var o;function l(n){let a=e.map((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=a.slice(),l(o)};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(a.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};var EF={kernelName:ya,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=r.shape.length,o=Sr.parseAxisParam(i,r.shape);if(0===s)return uT({inputs:{x:r},backend:n});let l=Ve().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RF(r.shape,o):new TF(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}},$F=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},MF={kernelName:lr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{image:r}=t,{radians:i,fillValue:s,center:o}=n,l=a,u=new $F(r.shape,s),[d,p]=Jf.getImageCenter(o,r.shape[1],r.shape[2]),h=[[d,p,Math.sin(i),Math.cos(i)]];return l.runWebGLProgram(u,[r],r.dtype,h)}},FF=bT({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),_F={kernelName:Aa,backendName:"webgl",kernelFunc:FF},PF=bT({opSnippet:"return inversesqrt(x);",cpuKernelImpl:yC}),OF={kernelName:xa,backendName:"webgl",kernelFunc:PF},DF=class{constructor(e,t,n,a,r,i){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let o=aN(r.length),l=aN(i.length),u="";1===n?u="i":2===n&&(u="i, j");let d=`getIndices(${u})`,p="";1===a?p="i":2===a&&(p="i, coords[1]");let h=`getUpdates(${p})`,c="";s&&(c="coords[0], coords[1]");let f=`getDefaultValue(${c})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${d});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(${f}, sum, float(found)));\n        }\n      `}},zF=class{constructor(e,t,n,a,r,i){let s=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let o=aN(r.length),l=aN(i.length),u="";1===n?u="i":2===n&&(u="i, j");let d=`getIndices(${u})`,p="";1===a?p="i":2===a&&(p="i, coords[1]");let h=`getUpdates(${p})`,c="";s&&(c="coords[0], coords[1]");let f=`getDefaultValue(${c})`,m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${d});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${g};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${h};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${f}, sum, found));\n        }\n      `}};var LF={kernelName:ba,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Jf.calculateShapes(i,r,s),h=[p/u,u];if(0===p)return n.makeTensorInfo(s,r.dtype);let c,f=ET({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),m=ET({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));c=Ve().getBool("WEBGL_PACK")?new zF(l,o,f.shape.length,m.shape.length,d,h):new DF(l,o,f.shape.length,m.shape.length,d,h);let y=n.runWebGLProgram(c,[m,f,g],m.dtype),A=ET({inputs:{x:y},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),A}},WF=class{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===Ve().getNumber("WEBGL_VERSION")?"while (left < right) {":r,s="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${s} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};var BF={kernelName:wa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=new WF(r.shape[0],r.shape[1],i.shape[1],s),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}},VF=class{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let a=0;a<t.length;a++)s.push(`${n[a]}`),a<e&&i.push(`${n[a]}`);a=i.join(),r=s.join()}let i=aN(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}};var UF={kernelName:ka,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=new VF(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(s,[a,r,i],yi(r.dtype,i.dtype))}},GF=bT({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Jf.SELU_SCALEALPHA};\n  float scale = ${Jf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),HF={kernelName:Ia,backendName:"webgl",kernelFunc:GF},jF=bT({opSnippet:xT+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:xC}),qF={kernelName:Ra,backendName:"webgl",kernelFunc:jF},XF=bT({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),KF={kernelName:Ta,backendName:"webgl",kernelFunc:XF},ZF={kernelName:"Sin",backendName:"webgl",kernelFunc:bT({opSnippet:xT+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${oT}\n  return result;\n`})},YF=bT({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),JF={kernelName:Ca,backendName:"webgl",kernelFunc:YF},QF=bT({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),e_={kernelName:Ea,backendName:"webgl",kernelFunc:QF},t_={kernelName:Fa,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;Sr.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=i.reduce((e,t)=>e*t),l=[[0,0]];l.push(...s);for(let y=1+i.length;y<r.shape.length;++y)l.push([0,0]);let u=[],d=aF({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=Jf.getReshaped(d.shape,i,o,!1),h=Jf.getPermuted(p.length,i.length,!1),c=Jf.getReshapedPermuted(d.shape,i,o,!1),f=ET({inputs:{x:d},backend:n,attrs:{shape:p}}),m=WT({inputs:{x:f},backend:n,attrs:{perm:h}}),g=ET({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(d),u.push(f),u.push(m),u.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}};var n_={kernelName:Oa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==s.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${s.shape}`);let o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),d=n.readSync(s.dataId)[0],[p,h,c,f,m]=wC(o,a.shape,a.dtype,l,r.dtype,u,d);return[n.makeTensorInfo(h,a.dtype,p),n.makeTensorInfo([h[0]],r.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};var a_={kernelName:Da,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:i}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(i.dataId)),[u,d,p]=kC(o,a.shape,a.dtype,s,l);return[n.makeTensorInfo(d,a.dtype,u),n.makeTensorInfo([p.length],i.dtype,new Int32Array(p))]}};var r_={kernelName:za,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);let s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,d]=IC(s,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(d,a.dtype,u)}};var i_={kernelName:La,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);let s=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,d]=IC(s,a.shape,a.dtype,o,l);return n.makeTensorInfo(d,a.dtype,u)}};var s_={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Jf.calculateShapes(i,r,o),c=!1;if("string"===i.dtype){let e=n.bufferSync(r),t=n.bufferSync(i),a=Sr.decodeString(n.readSync(s.dataId)[0]),f=AC(e,t,o,h,d,u,l,p,a,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=new DF(u,l,r.shape.length,i.shape.length,p,[h,1],c),m=n.runWebGLProgram(f,[i,r,s],i.dtype),g=ET({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}};var o_={kernelName:_a,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=Sr.parseAxisParam(s,r.shape)[0],l=Jf.prepareSplitSize(r,i,o),u=r.shape.length,d=new Array(u).fill(0),p=r.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let a=PR({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a})}},l_="return sqrt(x);",u_=bT({opSnippet:l_,packedOpSnippet:l_,cpuKernelImpl:SC}),d_={kernelName:$a,backendName:"webgl",kernelFunc:u_},p_=bT({opSnippet:"return x * x;"}),h_={kernelName:Va,backendName:"webgl",kernelFunc:p_},c_="return (a - b) * (a - b);",f_=vT({opSnippet:c_,packedOpSnippet:c_}),m_={kernelName:Ba,backendName:"webgl",kernelFunc:f_};var g_={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");let i=n.readSync(r.dataId),s=Jf.fromUint8ToStringArray(i),o=NC(s,"string",a);return n.makeTensorInfo(r.shape,"string",o)}};var y_={kernelName:sr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,i=HC+`\n    return x > 0.0 ? 1.0 : float(${n.alpha});\n  `,s=new GC(r.shape,i);return a.runWebGLProgram(s,[r],r.dtype)}},A_=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=aN(n.length),i=aN(n.length),s="";if(1===a)s="coords * strides + begin";else{let e=0;s=n.map((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`)).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}};var x_={kernelName:Ga,backendName:"webgl",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{begin:s,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:x,end:b,strides:v}=Nf.sliceInfo(i.shape,s,o,l,u,d,p,h,c);if(g)t=ET({inputs:{x:i},backend:a,attrs:{shape:m}});else if(y||A){Sr.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=Nf.computeOutShape(x,b,v),n=PR({inputs:{x:i},backend:a,attrs:{begin:x,size:e}});t=ET({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeIntermediateTensorInfo(n)}else if(a.shouldExecuteOnCPU([i])){let e=a.readSync(i.dataId),n=mo(i.shape,i.dtype,e),r=CC(f,n,v,x);t=a.makeTensorInfo(m,i.dtype,r.values)}else{let e=new A_(x,v,f);t=a.runWebGLProgram(e,[i],i.dtype)}let w=ET({inputs:{x:t},backend:a,attrs:{shape:m}});return a.disposeIntermediateTensorInfo(t),w}};var b_={kernelName:Ha,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,h=n.readSync(d.dataId),c=n.readSync(p.dataId),[f,m]=TC(h,c,r,i,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var v_={kernelName:ja,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let o=n.readSync(i.dataId),l=n.readSync(s.dataId)[0],[u,d,p]=RC(o,l,r),h=d.length;return[n.makeTensorInfo([h,2],"int32",u),n.makeTensorInfo([h],"string",d),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var w_={kernelName:qa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let s=n.readSync(i.dataId),o=EC(s,r);return n.makeTensorInfo(i.shape,"int32",o)}},k_={kernelName:"Tan",backendName:"webgl",kernelFunc:bT({opSnippet:"return tan(x);"})},I_=bT({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),S_={kernelName:Za,backendName:"webgl",kernelFunc:I_};var N_={kernelName:va,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Jf.calculateShapes(s,i,r.shape),h=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,i.dtype);let c=ET({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=ET({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=ET({inputs:{x:r},backend:n,attrs:{shape:h}}),g=new DF(l,o,c.shape.length,f.shape.length,d,h,!1,!0),y=n.runWebGLProgram(g,[f,c,m],m.dtype),A=ET({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),A}},C_=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;let a=aN(this.rank),r=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push(`imod(${n[r]}, ${e[r]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}};function T_(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;if("string"===r.dtype||r.shape.length>5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map(e=>Sr.decodeString(e)):e,a=mo(r.shape,r.dtype,t),s=MC(a,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}let s=new C_(r.shape,i);return n.runWebGLProgram(s,[r],r.dtype)}var R_={kernelName:Ya,backendName:"webgl",kernelFunc:T_},E_=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},$_=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function M_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function F_(e){let t=1;for(;t<e;)t*=2;return t}var __={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a,o=Ve().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ve().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,d=u[u.length-1];if(n.shouldExecuteOnCPU([r])||d<o||i>l){let e=n.readSync(r.dataId),[t,a]=FC(e,u,r.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===d)return[r,g$({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),h=null!==p&&p.isPacked,c=h?n.unpackTensor(r):r,f=Sr.sizeFromShape(u)/d,m=ET({inputs:{x:c},attrs:{shape:[f,d]},backend:n});h&&M_(n,c);let g=F_(i),y=F_(d),A=null,x=()=>null===A?[m,m]:[m,A],b=(e,t,a)=>{let r=x(),i=new E_(a),s=[[d],[null===A?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=A;A=n.runWebGLProgram(i,r,"int32",s),M_(n,o)};for(let S=1;S<g;S*=2){let e=2*S;for(let t=S;t>=1;t/=2)b(e,t,[f,y])}for(let S=y;S>g;S/=2){let e=x(),t=new $_([f,S/2]),a=[[d],[null===A?1:0],[g]],r=A;A=n.runWebGLProgram(t,e,"int32",a),M_(n,r);let i=g/2,s=2*i;for(let n=i;n>=1;n/=2)b(s,n,A.shape)}let v=A;A=PR({inputs:{x:A},backend:n,attrs:{begin:0,size:[f,i]}}),M_(n,v);let w=P$({inputs:{x:m,indices:A},backend:n,attrs:{axis:1,batchDims:1}});M_(n,m);let k=u.slice(0,-1);k.push(i),v=A,A=ET({inputs:{x:A},attrs:{shape:k},backend:n}),M_(n,v);let I=w;return w=ET({inputs:{x:w},attrs:{shape:k},backend:n}),M_(n,I),[w,A]}},P_=class{constructor(e,t,n,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let s,o="nearest"===n?1:2;switch(a){case"constant":default:s=1;break;case"reflect":s=2;break;case"wrap":s=3;break;case"nearest":s=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${s} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${s} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${s} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};var O_={kernelName:Qa,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:l,outputShape:u}=a,[d,p,h,c]=r.shape,[f,m]=null!=u?u:[p,h],g=new P_(p,h,s,o,l,[d,f,m,c]);return n.runWebGLProgram(g,[r,i],"float32")}};var D_={kernelName:tr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t;zS(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let s=a.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=PC(s,r,i.shape,i.dtype);return[a.makeTensorInfo(l,i.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}};var z_={kernelName:nr,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r,o=s.shape.length,l=r.shape[i],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==i&&(u[d++]=s.shape[m]);let p=[],h=new Array(o).fill(0),c=s.shape.slice();c[i]=1;let f=new Array(l);for(let m=0;m<f.length;m++){h[i]=m;let e=PR({inputs:{x:s},backend:n,attrs:{begin:h,size:c}}),t=ET({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,p.push(e)}return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}},L_=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,i=e.numSegments,s=i*Math.ceil(r/n);this.outputShape=[a,s];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}};var W_,B_,V_,U_={kernelName:ar,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a,o=r.shape.length,l=[],u=0,d=Jf.getAxesPermutation([u],o),p=r;null!=d&&(p=WT({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(p),u=Jf.getInnerMostAxes(1,o)[0]);let h=Jf.segment_util.computeOutShape(p.shape,u,s),c=Sr.sizeFromShape([p.shape[u]]),f=ET({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Ai(r.dtype),g=(e,t,a,r,i)=>{let s=e.shape[0],o=e.shape[1],u=Jf.segment_util.segOpComputeOptimalWindowSize(o,i),d=new L_({windowSize:u,inSize:o,batchSize:s,numSegments:i},t),p=n.compileAndRun(d,[e,a],r);if(l.push(p),p.shape[1]===i)return p;let h=dF({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),c=T_({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});return l.push(h),l.push(c),g(p,t,c,r,i)},y=ET({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:n,attrs:{shape:h}}),A=y;if(null!=d){l.push(y);let e=Jf.getUndoAxesPermutation(d);A=WT({inputs:{x:A},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),A}},G_=[UT,HT,qT,KT,YT,eR,tR,nR,lR,uR,pR,cR,mR,yR,xR,wR,kR,NR,CR,TR,$R,DR,zR,LR,WR,HR,XR,YR,hT,eE,lE,gE,vE,kE,IE,SE,CE,TE,EE,ME,DE,zE,LE,BE,GE,qE,XE,ZE,JE,QE,e$,t$,a$,r$,s$,l$,p$,f$,A$,b$,k$,S$,T$,E$,$$,F$,O$,z$,W$,dT,B$,iE,U$,H$,q$,mT,K$,Y$,J$,Q$,tM,aM,iM,oM,dM,hM,fM,gM,yM,AM,vM,wM,kM,IM,SM,CM,EM,$M,WM,RT,VM,GM,jM,XM,VR,ZM,QM,eF,rF,iF,AT,sF,oF,lF,uF,pF,GR,_M,cF,mF,yF,$T,bF,wF,SF,CF,EF,MF,_F,OF,LF,BF,UF,HF,qF,KF,ZF,JF,OR,LM,e_,t_,n_,a_,r_,i_,s_,o_,d_,h_,m_,g_,y_,x_,b_,v_,w_,DM,LT,k_,S_,N_,R_,__,O_,BT,D_,z_,U_,JM];for(let Z2 of G_)xr(Z2);!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(W_||(W_={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(B_||(B_={}));var H_={kernelName:ur,backendName:"wasm",setupFunc:function(e){V_=e.wasm.cwrap(ur,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==i.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a,h=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=0;if(null!=s){let e=n.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=B_[d];if(null==g)throw new Error(`${d} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],A=u?i.shape[1]:i.shape[2],x=Ll.assertAndGetBroadcastShape(r.shape.slice(0,-2),i.shape.slice(0,-2)),b=n.makeOutput([...x,y,A],r.dtype),v=n.dataIdMap.get(b.dataId).id,w=new Uint8Array(new Int32Array(r.shape).buffer),k=new Uint8Array(new Int32Array(i.shape).buffer);return V_(h,w,r.shape.length,c,k,i.shape.length,l,u,g,f,m,p||0,v),b}};function j_(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:a,inputs:{x:r}}=e,i=a.dataIdMap.get(r.dataId).id,s=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(s.dataId).id;return 0===Sr.sizeFromShape(s.shape)||n(i,W_[r.dtype],o),s}}}var q_=j_("Abs"),X_=j_(Xe),K_=j_(Ke);function Z_(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:r}=e,{a:i,b:s}=r,o=t.dataIdMap.get(i.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=null!=n?n:i.dtype,d=Jf.assertAndGetBroadcastShape(i.shape,s.shape),p=t.makeOutput(d,u);if(0===Sr.sizeFromShape(d))return p;let h=new Uint8Array(new Int32Array(i.shape).buffer),c=new Uint8Array(new Int32Array(s.shape).buffer),f=t.dataIdMap.get(p.dataId).id;return a(o,h,i.shape.length,l,c,s.shape.length,W_[i.dtype],f),p}}}var Y_,J_=Z_("Add");var Q_={kernelName:Ye,backendName:"wasm",setupFunc:function(e){Y_=e.wasm.cwrap(Ye,null,["array","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===Sr.sizeFromShape(a.shape))return a;let r=t.map(e=>n.dataIdMap.get(e.dataId).id),i=new Uint8Array(new Int32Array(r).buffer),s=n.dataIdMap.get(a.dataId).id;return Y_(i,r.length,W_[a.dtype],s),a}};function eP(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return qi(n.readSync(t.dataId),t.shape,t.dtype);let a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var tP,nP={kernelName:dn,backendName:"wasm",kernelFunc:eP};function aP(e){let{inputs:t,backend:n,attrs:a}=e,[r,i]=function(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let r=0;r<a.length;++r){let e=-1;for(let t=0;t<a.length;++t)a[t]>=r&&(-1===e||a[e]>a[t])&&(e=t);a[e]=r}return[n,a]}(t.x.shape,a.perm),s=!0;for(let f=0;f<i.length;f++)i[f]!==f&&(s=!1);let o=function(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(s){let e=eP({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),d=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return tP(d,c,l.shape.length,W_[l.dtype],p,h,i.length),u}var rP,iP={kernelName:er,backendName:"wasm",kernelFunc:aP,setupFunc:function(e){tP=e.wasm.cwrap(er,null,["number","array","number","number","number","array","number"])}};function sP(e,t,n){let a=e.shape,r=e.shape.length,i=Sr.parseAxisParam(t,a),s=i,o=Jf.getAxesPermutation(s,r),l=null,u=!1;if(null!=o){let t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];s=Jf.getInnerMostAxes(s.length,r),l=aP({inputs:{x:e},attrs:{perm:o},backend:n});let i=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==i&&(u=!0)}return{transposed:l,originalAxes:i,axes:s,inputWasTransposed:u}}var oP,lP={kernelName:"All",backendName:"wasm",setupFunc:function(e){rP=e.wasm.cwrap("All",null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=s,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=sP(s,r,t);if(h){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;Jf.assertAxesAreInnerMostDims("all",d,c);let[f,m]=Jf.computeOutAndReduceShapes(l.shape,d),g=Sr.sizeFromShape(m),y=t.makeOutput(f,s.dtype);if(0!==Sr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;rP(o,g,e)}if(h&&t.disposeData(u.dataId),i){let e=Jf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};var uP={kernelName:"Any",backendName:"wasm",setupFunc:function(e){oP=e.wasm.cwrap("Any",null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=s,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=sP(s,r,t);if(h){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;Jf.assertAxesAreInnerMostDims("any",d,c);let[f,m]=Jf.computeOutAndReduceShapes(l.shape,d),g=Sr.sizeFromShape(m),y=t.makeOutput(f,s.dtype);if(0!==Sr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;oP(o,g,e)}if(h&&t.disposeData(u.dataId),i){let e=Jf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}};function dP(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number","number","number","number"])},kernelFunc:function(e){let{backend:n,inputs:a,attrs:r}=e,{axis:i}=r,{x:s}=a,o=n.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,inputWasTransposed:h}=sP(s,i,n);if(h){let e=n.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let c=u.shape.slice(0,-1),f=n.makeOutput(c,"int32"),m=n.dataIdMap.get(f.dataId).id,g=Sr.sizeFromShape(f.shape),y=u.shape[p[0]];return t(l,W_[u.dtype],g,y,m),h&&n.disposeData(d.dataId),f}}}var pP,hP=dP(et),cP=dP(tt),fP=j_(nt),mP=j_(at),gP=j_(rt),yP=Z_(st),AP=j_(it);var xP,bP={kernelName:ot,backendName:"wasm",setupFunc:function(e){pP=e.wasm.cwrap(ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,i=a.dataIdMap.get(r.dataId).id,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=n,d=Jf.computePool2DInfo(r.shape,s,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.strideHeight,A=d.strideWidth,x=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);let b=a.makeOutput(d.outShape,"float32"),v=a.dataIdMap.get(b.dataId).id;return pP(i,r.shape[0],r.shape[1],r.shape[2],p,h,c,f,m,g,y,A,x,v),b}};var vP,wP={kernelName:ut,backendName:"wasm",setupFunc:function(e){xP=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=Jf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=n.makeOutput(d.outShape,r.dtype);return xP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}};var kP,IP={kernelName:dt,backendName:"wasm",setupFunc:function(e){vP=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,d=Jf.computePool3DInfo(i.shape,s,o,1,l,u),p=n.makeOutput(i.shape,i.dtype);return vP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left,d.filterDepth,d.filterHeight,d.filterWidth),p}};var SP={kernelName:lt,backendName:"wasm",setupFunc:function(e){kP=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l}=a,u=Jf.computePool2DInfo(i.shape,s,o,1,l),d=n.makeOutput(i.shape,i.dtype);return kP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.effectiveFilterHeight,u.effectiveFilterWidth,u.padInfo.top,u.padInfo.left,u.filterHeight,u.filterWidth),d}};function NP(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,i=Sr.sizeFromShape(a.shape),s=Sr.inferFromImplicitShape(r,i);return Sr.assert(i===Sr.sizeFromShape(s),()=>`new shape: ${s}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}var CP,TP={kernelName:pa,backendName:"wasm",kernelFunc:NP};var RP={kernelName:pt,backendName:"wasm",setupFunc:function(e){CP=e.wasm.cwrap(pt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=i.shape.length,d=s?r.shape[l-2]:r.shape[l-1],p=o?i.shape[u-1]:i.shape[u-2],h=s?r.shape[l-1]:r.shape[l-2],c=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),m=i.shape.slice(0,-2),g=Sr.sizeFromShape(f),y=Sr.sizeFromShape(m),A=Ll.assertAndGetBroadcastShape(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([h,c]);Sr.assert(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${s} and transposeB=${o} must match.`);let x=o?[y,c,p]:[y,p,c],b=NP({inputs:{x:r},backend:n,attrs:{shape:s?[g,d,h]:[g,h,d]}}),v=NP({inputs:{x:i},backend:n,attrs:{shape:x}}),w=n.dataIdMap.get(b.dataId).id,k=n.dataIdMap.get(v.dataId).id,I=s?b.shape[2]:b.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),C=n.makeOutput([N,I,S],b.dtype),T=n.dataIdMap.get(C.dataId).id,R=new Uint8Array(new Int32Array(b.shape).buffer),E=new Uint8Array(new Int32Array(v.shape).buffer);return CP(w,R,b.shape.length,k,E,v.shape.length,s,o,T),n.disposeData(b.dataId),n.disposeData(v.dataId),C.shape=A,C}};function EP(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[i,s]=Nf.parseSliceParams(t,n,a),o=Nf.isSliceContinous(t.shape,i,s),l=r.readSync(t.dataId),u=r.makeOutput(s,t.dtype),d=Sr.computeStrides(t.shape),p=r.dataIdMap.get(u.dataId);if(o){let e=Nf.computeFlatOffset(i,d);return"string"===t.dtype?p.stringBytes=l.slice(e,e+Sr.sizeFromShape(s)):r.typedArrayFromHeap(u).set(l.subarray(e,e+Sr.sizeFromShape(s))),u}if("string"===t.dtype){let e=Xx(l,i,s,t.shape,t.dtype);return p.stringBytes=e,u}let h=r.typedArrayFromHeap(u),c=t.shape.length;if(2===c)!function(e,t,n,a,r){let i=0,s=a[0],o=a[1],l=s+r[0];for(let u=s;u<l;u++){let a=u*t+o;n.set(e.subarray(a,a+r[1]),i),i+=r[1]}}(l,d[0],h,i,s);else if(3===c)!function(e,t,n,a,r,i){let s=0,o=r[0],l=r[1],u=r[2],d=o+i[0],p=l+i[1];for(let h=o;h<d;h++)for(let r=l;r<p;r++){let o=h*t+r*n+u;a.set(e.subarray(o,o+i[2]),s),s+=i[2]}}(l,d[0],d[1],h,i,s);else if(4===c)!function(e,t,n,a,r,i,s){let o=0,l=i[0],u=i[1],d=i[2],p=l+s[0],h=u+s[1],c=d+s[2],f=i[3];for(let m=l;m<p;m++)for(let i=u;i<h;i++)for(let l=d;l<c;l++){let u=m*t+i*n+l*a+f;r.set(e.subarray(u,u+s[3]),o),o+=s[3]}}(l,d[0],d[1],d[2],h,i,s);else{let e=Xx(l,i,s,t.shape,t.dtype);h.set(e)}return u}var $P={kernelName:Sa,backendName:"wasm",kernelFunc:EP};var MP,FP={kernelName:ht,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a,o=i.reduce((e,t)=>e*t),l=Jf.getReshaped(r.shape,i,o),u=Jf.getPermuted(l.length,i.length),d=Jf.getReshapedPermuted(r.shape,i,o),p=Jf.getSliceBeginCoords(s,i.length),h=Jf.getSliceSize(d,s,i.length),c=NP({inputs:{x:r},backend:n,attrs:{shape:l}}),f=aP({inputs:{x:c},backend:n,attrs:{perm:u}}),m=NP({inputs:{x:f},backend:n,attrs:{shape:d}}),g=EP({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}};var _P={kernelName:ct,backendName:"wasm",setupFunc:function(e){MP=e.wasm.cwrap(ct,null,["number","number","boolean","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,weights:i}=n,{size:s}=a,o=0!==i.shape.reduce((e,t)=>e*t,1),l=1===r.shape.length?[s]:[r.shape[0],s],u=t.makeOutput(l,i.dtype);function d(e){return t.dataIdMap.get(e.dataId).id}return MP(d(r),s,o,d(i),W_[i.dtype],d(u)),u}},PP=Z_(ft);var OP={kernelName:gt,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,i=n.typedArrayFromHeap(a),s=n.typedArrayFromHeap(r),o=Jf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}};function DP(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),i=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(i),r}var zP,LP={kernelName:yt,backendName:"wasm",kernelFunc:DP},WP=j_(At);var BP={kernelName:xt,backendName:"wasm",setupFunc:function(e){zP=e.wasm.cwrap(xt,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:i,clipValueMax:s}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return zP(o,i,s,u),l}};function VP(e){let{inputs:t,backend:n}=e,a=Sr.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=t.map(e=>e.shape);Jf.assertParamsConsistent(r,a);let i=Jf.computeOutShape(t.map(e=>e.shape),a),s=t.filter(e=>Sr.sizeFromShape(e.shape)>0);if(1===s.length)return eP({inputs:{x:s[0]},backend:n});let o=n.makeOutput(i,t[0].dtype);if(0===Sr.sizeFromShape(i))return o;if("string"===s[0].dtype){let e=s.map(e=>{let t=[-1,Sr.sizeFromShape(e.shape.slice(a))];return NP({inputs:{x:e},backend:n,attrs:{shape:t}})}),r=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));i=Jf.computeOutShape(e.map(e=>e.shape),1);let l=1===e[0].shape[0],u=RA(r,i,t[0].dtype,l),d=Jf.computeOutShape(s.map(e=>e.shape),a);return o.shape=d,n.dataIdMap.get(o.dataId).stringBytes=Jf.fromStringArrayToUint8(u),e.forEach(e=>n.disposeData(e.dataId)),o}let l=Sr.sizeFromShape(s[0].shape.slice(0,a)),u=0,d=s.map(e=>{let t=Sr.sizeFromShape(e.shape.slice(a));return u+=t,t}),p=s.map(e=>n.typedArrayFromHeap(e)),h=n.typedArrayFromHeap(o);for(let c=0;c<l;c++){let e=c*u;for(let t=0;t<p.length;t++){let n=d[t],a=c*n,r=p[t].subarray(a,a+n);h.set(r,e),e+=n}}return o}var UP,GP={kernelName:wt,backendName:"wasm",kernelFunc:VP};var HP,jP={kernelName:kt,backendName:"wasm",setupFunc:function(e){UP=e.wasm.cwrap(kt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i}=t,s=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(i.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p,dataFormat:h}=n,c=Jf.convertConv2DDataFormat(h),f=Jf.computeConv2DInfo(r.shape,i.shape,l,u,d,p,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let T=a.makeOutput(f.outShape,"float32"),R=a.dataIdMap.get(T.dataId).id;return UP(s,r.shape[0],r.shape[1],r.shape[2],o,m,g,y,A,x,b,C,v,w,k,I,S,N,R),T}};var qP,XP={kernelName:St,backendName:"wasm",setupFunc:function(e){HP=e.wasm.cwrap(St,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:i}=n,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:d}=a,p=Jf.convertConv2DDataFormat(l),h=Jf.computeConv2DInfo(d,i.shape,s,1,o,u,!1,p),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:A,outChannels:x,outHeight:b,outWidth:v,strideHeight:w,strideWidth:k}=h,I=f-1-h.padInfo.top,S=m-1-h.padInfo.left,N="channelsLast"===h.dataFormat,C=Sr.computeStrides(h.inShape),T=Sr.computeStrides(r.shape),[R,E,$]=Sr.computeStrides(i.shape),M=C[0],F=N?C[1]:C[2],_=N?C[2]:1,P=N?1:C[1],O=T[0],D=N?T[1]:T[2],z=N?T[2]:1,L=N?1:T[1],W=t.makeOutput(h.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,V=t.dataIdMap.get(r.dataId).id,U=t.dataIdMap.get(i.dataId).id;return HP(V,U,c,f,m,y,A,g,b,v,x,w,k,I,S,R,E,$,M,F,_,P,O,D,z,L,B),W}};var KP,ZP={kernelName:Nt,backendName:"wasm",setupFunc:function(e){qP=e.wasm.cwrap(Nt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor x must have dtype float32, got ${r.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);let u=Jf.computeConv3DInfo(r.shape,i.shape,s,l,o),d=n.makeOutput(u.outShape,r.dtype);return qP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}};var YP,JP={kernelName:Ct,backendName:"wasm",setupFunc:function(e){KP=e.wasm.cwrap(Ct,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);let u=Jf.computeConv3DInfo(r.shape,l,s,1,o),d=n.makeOutput(u.filterShape,i.dtype);return KP(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}};var QP,eO,tO={kernelName:Tt,backendName:"wasm",setupFunc:function(e){YP=e.wasm.cwrap(Tt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{pad:s,strides:o,inputShape:l}=a;if("float32"!==r.dtype)throw new Error(`Tensor dy must have dtype float32, got ${r.dtype}`);if("float32"!==i.dtype)throw new Error(`Tensor filter must have dtype float32, got ${i.dtype}`);let u=Jf.computeConv3DInfo(l,i.shape,o,1,s),d=n.makeOutput(u.inShape,r.dtype);return YP(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(d.dataId).id,u.batchSize,u.inDepth,u.inHeight,u.inWidth,u.inChannels,u.outDepth,u.outHeight,u.outWidth,u.outChannels,u.strideDepth,u.strideHeight,u.strideWidth,u.dilationDepth,u.dilationHeight,u.dilationWidth,u.filterDepth,u.filterHeight,u.filterWidth,u.padInfo.front,u.padInfo.top,u.padInfo.left),d}},nO=j_("Cos"),aO=j_(Et);!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(QP||(QP={}));var rO,iO={kernelName:Ft,backendName:"wasm",setupFunc:function(e){eO=e.wasm.cwrap(Ft,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{method:i,extrapolationValue:s,cropSize:o}=r,{image:l,boxes:u,boxInd:d}=a,p=u.shape[0],[h,c]=o,f=[p,h,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=DP({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,A=n.dataIdMap.get(d.dataId).id,x=n.makeOutput(f,"float32"),b=n.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(l.shape).buffer);return eO(g,y,A,p,v,h,c,QP[i],s,b),null!=t&&n.disposeData(t.dataId),x}};var sO,oO={kernelName:$t,backendName:"wasm",setupFunc:function(e){rO=e.wasm.cwrap($t,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a,l=r.shape.length;Sr.assert("float32"===r.dtype||"int32"===r.dtype,()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let u=Jf.getAxesPermutation([i],l),d=r;null!==u&&(d=aP({inputs:{x:r},attrs:{perm:u},backend:n}));let p=Jf.getInnerMostAxes(1,l)[0];Jf.assertAxesAreInnerMostDims("cumprod",[p],l);let h=n.makeOutput(d.shape,d.dtype),c=d.shape[p],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(h.dataId).id;rO(f,s?1:0,o?1:0,c,m,W_[r.dtype]);let g=h;if(null!==u){g=aP({inputs:{x:h},attrs:{perm:Jf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(h.dataId)}return g}};var lO,uO={kernelName:Mt,backendName:"wasm",setupFunc:function(e){sO=e.wasm.cwrap(Mt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a,l=r.shape.length;Sr.assert("float32"===r.dtype||"int32"===r.dtype,()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let u=Jf.getAxesPermutation([i],l),d=r;null!==u&&(d=aP({inputs:{x:r},attrs:{perm:u},backend:n}));let p=Jf.getInnerMostAxes(1,l)[0];Jf.assertAxesAreInnerMostDims("cumsum",[p],l);let h=n.makeOutput(d.shape,d.dtype),c=d.shape[p],f=n.dataIdMap.get(d.dataId).id,m=n.dataIdMap.get(h.dataId).id;sO(f,s?1:0,o?1:0,c,m,W_[r.dtype]);let g=h;if(null!==u){g=aP({inputs:{x:h},attrs:{perm:Jf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(d.dataId),n.disposeData(h.dataId)}return g}};var dO,pO={kernelName:_t,backendName:"wasm",setupFunc:function(e){lO=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,weights:i}=n,{size:s,binaryOutput:o}=a,l=0!==i.shape.reduce((e,t)=>e*t,1),u=1===r.shape.length?[s]:[r.shape[0],s],d=t.makeOutput(u,i.dtype);function p(e){return t.dataIdMap.get(e.dataId).id}return lO(p(r),new Uint8Array(new Int32Array(r.shape).buffer),r.shape.length,s,l,p(i),W_[i.dtype],o,p(d)),d}};var hO,cO={kernelName:Pt,backendName:"wasm",setupFunc:function(e){dO=e.wasm.cwrap(Pt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l=("NHWC"===s?r.shape[1]:r.shape[2])*i,u=("NHWC"===s?r.shape[2]:r.shape[3])*i,d=("NHWC"===s?r.shape[3]:r.shape[1])/(i*i),p="NHWC"===s?[o,l,u,d]:[o,d,l,u],h=t.makeOutput(p,"float32"),c=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(Sr.computeStrides(r.shape)).buffer),m=new Uint8Array(new Int32Array(p).buffer),g=new Uint8Array(new Int32Array(Sr.computeStrides(p)).buffer),y=t.dataIdMap.get(h.dataId).id;return dO(c,i,"NHWC"===s?1:0,f,r.shape.length-1,m,g,p.length,y),h}};var fO,mO={kernelName:Ot,backendName:"wasm",setupFunc:function(e){hO=e.wasm.cwrap(Ot,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i}=t,s=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(i.dataId).id,{strides:l,dilations:u,pad:d,dimRoundingMode:p}=n,h=null==u?[1,1]:u,c=Jf.computeConv2DInfo(r.shape,i.shape,l,h,d,p,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,A=c.padInfo.bottom,x=c.padInfo.left,b=c.dilationHeight,v=c.dilationWidth,w=c.strideHeight,k=c.strideWidth,I=c.inChannels,S=c.outChannels,N="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let C=a.makeOutput(c.outShape,"float32"),T=a.dataIdMap.get(C.dataId).id;return hO(s,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,y,A,x,N,b,v,w,k,I,S,T),C}};var gO,yO={kernelName:Lt,backendName:"wasm",setupFunc:function(e){fO=e.wasm.cwrap("Diag",null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=Sr.sizeFromShape(a.shape),i=n.makeOutput([...a.shape,...a.shape],a.dtype);return fO(n.dataIdMap.get(a.dataId).id,W_[a.dtype],r,n.dataIdMap.get(i.dataId).id),i}};var AO,xO={kernelName:Wt,backendName:"wasm",setupFunc:function(e){gO=e.wasm.cwrap(Wt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a;if(r.dtype!==i.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${r.dtype} and ${i.dtype}`);let u=Jf.computeDilation2DInfo(r.shape,i.shape,s,o,"NHWC",l),d=n.makeOutput(u.outShape,r.dtype);return gO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,W_[r.dtype],u.batchSize,u.inChannels,u.inHeight,u.inWidth,u.outHeight,u.outWidth,u.strideHeight,u.strideWidth,u.dilationHeight,u.dilationWidth,u.filterHeight,u.filterWidth,u.padInfo.top,u.padInfo.left),d}};var bO,vO={kernelName:Vt,backendName:"wasm",setupFunc:function(e){AO=e.wasm.cwrap(Vt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a;if(r.dtype!==i.dtype||r.dtype!==s.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${i.dtype}, and ${s.dtype}`);let d=Jf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=n.makeOutput(i.shape,i.dtype);return AO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,W_[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),p}};var wO,kO={kernelName:Bt,backendName:"wasm",setupFunc:function(e){bO=e.wasm.cwrap(Bt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a;if(r.dtype!==i.dtype||r.dtype!==s.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${r.dtype}, ${i.dtype}, and ${s.dtype}`);let d=Jf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=n.makeOutput(r.shape,r.dtype);return bO(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,W_[r.dtype],d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.filterHeight,d.filterWidth,d.padInfo.top,d.padInfo.left),p}},IO=j_("Elu");var SO={kernelName:qt,backendName:"wasm",setupFunc:function(e){wO=e.wasm.cwrap(qt,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=n.makeOutput(r.shape,"float32"),s=e=>n.dataIdMap.get(e.dataId).id;return wO(s(r),s(a),s(i)),i}},NO=Z_(Kt,0,"bool"),CO=j_("Erf"),TO=j_("Exp","float32");function RO(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:i}=n,s=r.shape.length,o=r.shape.slice(),l=i;return i<0&&(Sr.assert(-(s+1)<=i,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+i+1),o.splice(l,0,1),NP({inputs:{x:r},backend:a,attrs:{shape:o}})}var EO={kernelName:Yt,backendName:"wasm",kernelFunc:RO},$O=j_(Jt,"float32");function MO(e){let{attrs:{shape:t,value:n},backend:a}=e,{attrs:{dtype:r}}=e;r=r||Sr.inferDtype(n);let i=a.makeOutput(t,r);return a.typedArrayFromHeap(i).fill(n),i}var FO,_O={kernelName:en,backendName:"wasm",kernelFunc:MO};var PO,OO={kernelName:tn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),i=n.dataIdMap.get(a.dataId).id,s=n.dataIdMap.get(r.dataId).id,[o,l,u,d]=a.shape;return FO(i,o,l,u,d,s),r},setupFunc:function(e){FO=e.wasm.cwrap(tn,null,["number","number","number","number","number","number"])}},DO=j_(nn),zO=Z_(an);var LO,WO={kernelName:rn,backendName:"wasm",setupFunc:function(e){PO=e.wasm.cwrap(rn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:i,mean:s,variance:o,offset:l,scale:u}=n,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(i.shape,i.dtype);if(0===Sr.sizeFromShape(i.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return PO(d,p,h,c,f,r,g),m}};var BO,VO={kernelName:dr,backendName:"wasm",setupFunc:function(e){LO=e.wasm.cwrap(dr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=Jf.computeConv2DInfo(r.shape,i.shape,l,d,u,h),g=B_[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,A=a.dataIdMap.get(i.dataId).id,x=m.outChannels,b=0;if(null!=s){let e=a.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);b=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,C=m.dilationHeight,T=m.dilationWidth,R=m.strideHeight,E=m.strideWidth,$=m.inChannels,M="SAME"===m.padInfo.type?1:0,F=m.batchSize,_=m.inHeight,P=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return LO(y,F,_,P,A,v,w,b,k,I,S,N,M,C,T,R,E,$,x,g,z,f||0,D),O}};var UO,GO={kernelName:pr,backendName:"wasm",setupFunc:function(e){BO=e.wasm.cwrap(pr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dataFormat:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=n,m=Jf.computeConv2DInfo(r.shape,i.shape,l,d,u,h,!0),g=B_[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,A=a.dataIdMap.get(i.dataId).id,x=m.outChannels,b=0;if(null!=s){let e=a.dataIdMap.get(s.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);b=e.id}let v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,C=m.dilationHeight,T=m.dilationWidth,R=m.strideHeight,E=m.strideWidth,$=m.inChannels,M="SAME"===m.padInfo.type?1:0,F=m.batchSize,_=m.inHeight,P=m.inWidth;if("NHWC"!==p)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,z=null==o?0:a.dataIdMap.get(o.dataId).id;return BO(y,F,_,P,A,v,w,b,k,I,S,N,M,C,T,R,E,$,x,g,z,f||0,D),O}};var HO,jO={kernelName:on,backendName:"wasm",setupFunc:function(e){UO=e.wasm.cwrap(on,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[i,s,o,l]=If.prepareAndValidate(a,r),u=t.makeOutput(i,a.dtype);if(0===s)return u;let d=r.shape,p=d[d.length-1],h=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return UO(h,W_[a.dtype],c,s,p,o,f,m),u}};var qO,XO={kernelName:sn,backendName:"wasm",setupFunc:function(e){HO=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:i}=n,{axis:s,batchDims:o}=a,l=Sr.parseAxisParam(s,r.shape)[0],u=t.readSync(i.dataId),d=r.shape[l];for(let k=0;k<u.length;++k){let e=u[k];Sr.assert(e<=d-1&&e>=0,()=>`GatherV2: the index value ${e} is not in [0, ${d-1}]`)}let p=Jf.segment_util.collectGatherOpShapeInfo(r,i,l,o),h=NP({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),c=Sr.sizeFromShape(i.shape),f=NP({inputs:{x:i},attrs:{shape:[p.batchSize,c/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,c/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(0===Sr.sizeFromShape(r.shape))return g;let y=h.shape.length-1,A=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(Sr.computeStrides(h.shape)).buffer),w=new Uint8Array(new Int32Array(Sr.computeStrides(m)).buffer);return HO(A,W_[r.dtype],v,y,x,p.batchSize,w,b),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},KO=Z_(ln,0,"bool"),ZO=Z_(un,0,"bool"),YO=j_(cn,"bool"),JO=j_(fn,"bool"),QO=j_(mn,"bool");var eD,tD={kernelName:gn,backendName:"wasm",setupFunc:function(e){qO=e.wasm.cwrap(gn,null,["number","number","number","number"])},kernelFunc:function(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,i=a.makeOutput(t.shape,"float32");if(0!==Sr.sizeFromShape(t.shape)){let e=a.dataIdMap.get(i.dataId).id;qO(r,W_[t.dtype],n,e)}return i}},nD=Z_(yn,0,"bool"),aD=Z_(An,0,"bool");var rD,iD={kernelName:xn,backendName:"wasm",setupFunc:function(e){eD=e.wasm.cwrap(xn,null,["number","number","number","number"])},kernelFunc:function(e){let{attrs:t,backend:n}=e,{start:a,stop:r,num:i}=t,s=Math.floor(i),o=n.makeOutput([s],"float32");return eD(n.dataIdMap.get(o.dataId).id,a,r,s),o}},sD=j_("Log"),oD=j_(vn),lD=Z_(wn,0,"bool"),uD=j_(kn),dD=Z_(In,0,"bool"),pD=Z_(Sn,0,"bool");var hD,cD={kernelName:"LRN",backendName:"wasm",setupFunc:function(e){rD=e.wasm.cwrap("LRN",null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:i,bias:s,alpha:o,beta:l}=a;if("float32"!==r.dtype)throw new Error("LRN error: x must have dtype float32");let u=n.makeOutput(r.shape,r.dtype);return rD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(u.dataId).id,r.shape[3],i,s,o,l),u}};var fD,mD={kernelName:Rn,backendName:"wasm",setupFunc:function(e){hD=e.wasm.cwrap(Rn,null,["number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a;if("float32"!==r.dtype||"float32"!==i.dtype||"float32"!==s.dtype)throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let p=n.makeOutput(r.shape,r.dtype);return hD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(p.dataId).id,s.shape[3],o,l,u,d),p}};var gD,yD={kernelName:"Max",backendName:"wasm",setupFunc:function(e){fD=e.wasm.cwrap("Max",null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=s,{transposed:u,axes:d,originalAxes:p,inputWasTransposed:h}=sP(s,r,t);if(h){l=u,o=t.dataIdMap.get(u.dataId).id}let c=l.shape.length;Jf.assertAxesAreInnerMostDims("max",d,c);let[f,m]=Jf.computeOutAndReduceShapes(l.shape,d),g=Sr.sizeFromShape(m),y=t.makeOutput(f,s.dtype);if(0!==Sr.sizeFromShape(l.shape)){let e=t.dataIdMap.get(y.dataId).id;fD(o,W_[s.dtype],g,e)}if(h&&t.disposeData(u.dataId),i){let e=Jf.expandShapeToKeepDim(y.shape,p);y.shape=e}return y}},AD=Z_(Mn);var xD,bD={kernelName:Fn,backendName:"wasm",setupFunc:function(e){gD=e.wasm.cwrap(Fn,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,i=a.dataIdMap.get(r.dataId).id;Sr.assert("float32"===r.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=n,d=Jf.computePool2DInfo(r.shape,s,o,1,l,u),p=d.filterHeight,h=d.filterWidth,c=d.padInfo.top,f=d.padInfo.right,m=d.padInfo.bottom,g=d.padInfo.left,y=d.dilationHeight,A=d.dilationWidth,x=d.strideHeight,b=d.strideWidth,v=d.inChannels,w=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);let k=a.makeOutput(d.outShape,"float32"),I=a.dataIdMap.get(k.dataId).id;return gD(i,r.shape[0],r.shape[1],r.shape[2],p,h,c,f,m,g,y,A,x,b,v,w,I),k}};var vD,wD={kernelName:Pn,backendName:"wasm",setupFunc:function(e){xD=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l,dataFormat:u}=a,d=Jf.computePool3DInfo(r.shape,i,s,1,o,l,u),p=n.makeOutput(d.outShape,r.dtype);return xD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}};var kD,ID={kernelName:On,backendName:"wasm",setupFunc:function(e){vD=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,d=Jf.computePool3DInfo(i.shape,s,o,1,l,u),p=n.makeOutput(i.shape,i.dtype);return vD(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inDepth,d.inHeight,d.inWidth,d.outDepth,d.outHeight,d.outWidth,d.strideDepth,d.strideHeight,d.strideWidth,d.dilationDepth,d.dilationHeight,d.dilationWidth,d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.front,d.padInfo.top,d.padInfo.left),p}};var SD,ND={kernelName:_n,backendName:"wasm",setupFunc:function(e){kD=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,{filterSize:s,strides:o,pad:l,dimRoundingMode:u}=a,d=Jf.computePool2DInfo(i.shape,s,o,1,l,u),p=n.makeOutput(i.shape,i.dtype);return kD(n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),p}};var CD,TD={kernelName:Dn,backendName:"wasm",setupFunc:function(e){SD=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,includeBatchInIndex:l}=a;Sr.assert(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let u=[1,1];Sr.assert(Jf.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let d=Jf.computePool2DInfo(r.shape,i,s,[1,1],o),p=n.makeOutput(d.outShape,r.dtype),h=n.makeOutput(d.outShape,"int32");return SD(n.dataIdMap.get(r.dataId).id,n.dataIdMap.get(p.dataId).id,n.dataIdMap.get(h.dataId).id,W_[r.dtype],l,d.batchSize,d.inChannels,d.inHeight,d.inWidth,d.outHeight,d.outWidth,d.strideHeight,d.strideWidth,d.dilationHeight,d.dilationWidth,d.effectiveFilterHeight,d.effectiveFilterWidth,d.padInfo.top,d.padInfo.left),[p,h]}};var RD,ED={kernelName:zn,backendName:"wasm",setupFunc:function(e){CD=e.wasm.cwrap(zn,null,["number, number, number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=sP(s,r,t),f=p;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Jf.getInnerMostAxes(f.length,u.shape.length))}Jf.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=Jf.computeOutAndReduceShapes(u.shape,f),y=Sr.sizeFromShape(g),A=u;"float32"!==u.dtype&&(A=DP({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);let x=t.makeOutput(m,"float32");if(0!==Sr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;CD(l,y,e)}if(c&&t.disposeData(d.dataId),i){let e=Jf.expandShapeToKeepDim(x.shape,h);x.shape=e}return"float32"!==u.dtype&&t.disposeData(A.dataId),x}};var $D,MD,FD={kernelName:"Min",backendName:"wasm",setupFunc:function(e){RD=e.wasm.cwrap("Min",null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=sP(s,r,t);if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e)}let f=u.shape.length;Jf.assertAxesAreInnerMostDims("min",p,f);let[m,g]=Jf.computeOutAndReduceShapes(u.shape,p),y=Sr.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==Sr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;RD(l,W_[s.dtype],y,e)}if(c&&t.disposeData(d.dataId),i){let e=Jf.expandShapeToKeepDim(A.shape,h);A.shape=e}return A}},_D=Z_(Wn);!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}($D||($D={}));var PD,OD={kernelName:Bn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,i=a.map((e,n)=>e[0]+t.shape[n]+e[1]),s=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map(e=>e[0]),p=a.map(e=>e[1]),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return MD(s,u,t.shape.length,W_[t.dtype],h,c,$D[r],l),o},setupFunc:function(e){MD=e.wasm.cwrap(Bn,null,["number","array","number","number","array","array","number","number"])}};function DD(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(i.dataId).id,o=n.shape[a],l=Sr.sizeFromShape(n.shape)/o;return 0===Sr.sizeFromShape(i.shape)||PD(r,s,o,l),i}var zD,LD={kernelName:Pa,backendName:"wasm",setupFunc:function(e){PD=e.wasm.cwrap(Pa,null,["number","number","number","number"])},kernelFunc:DD};var WD,BD={kernelName:Un,backendName:"wasm",setupFunc:function(e){zD=e.wasm.cwrap(Un,null,["number","number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a;if("float32"!==r.dtype)throw new Error(`Tensor logits must have dtype float32, got ${r.dtype}`);let l=o?r:DD({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),[u,d]=l.shape,p=n.makeOutput([u,i],"int32");return zD(n.dataIdMap.get(l.dataId).id,u,d,i,s,n.dataIdMap.get(p.dataId).id),o||n.disposeData(l.dataId),p}},VD=Z_("Mod"),UD=Z_(Gn),GD=j_("Neg");function HD(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],i=n[2],s=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:i,pValidOutputs:s}}var jD,qD={kernelName:qn,backendName:"wasm",setupFunc:function(e){WD=e.wasm.cwrap(qn,"number",["number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:i,scoreThreshold:s}=a,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=WD(u,d,i,r,s),{pSelectedIndices:h,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=HD(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",h)}};var XD,KD={kernelName:Xn,backendName:"wasm",setupFunc:function(e){jD=e.wasm.cwrap(Xn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:i,scoreThreshold:s,padToMaxOutputSize:o}=a,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=jD(d,p,i,r,s,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=HD(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}};var ZD,YD={kernelName:Kn,backendName:"wasm",setupFunc:function(e){XD=e.wasm.cwrap(Kn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:i,scoreThreshold:s,softNmsSigma:o}=a,{boxes:l,scores:u}=n,d=t.dataIdMap.get(l.dataId).id,p=t.dataIdMap.get(u.dataId).id,h=XD(d,p,i,r,s,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=HD(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}},JD=Z_(jn,0,"bool");var QD={kernelName:Yn,backendName:"wasm",setupFunc:function(e){ZD=e.wasm.cwrap(Yn,null,["number","number","number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=n.makeOutput([...r.shape,s],i),d=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(r.dataId).id;return ZD(p,s,o,l,d),u}};var ez={kernelName:Zn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}};var tz,nz={kernelName:Jn,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return RO({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{Sr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),Sr.assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=VP({inputs:t.map(e=>{let t=RO({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t}),backend:n,attrs:{axis:r}});return o.forEach(e=>n.disposeData(e.dataId)),l}};var az,rz={kernelName:Qn,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,i=a.map((e,n)=>e[0]+t.shape[n]+e[1]);if(0===Sr.sizeFromShape(t.shape))return MO({backend:n,attrs:{shape:i,value:r,dtype:t.dtype}});let s=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map(e=>e[0]),p=a.map(e=>e[1]),h=new Uint8Array(new Int32Array(d).buffer),c=new Uint8Array(new Int32Array(p).buffer);return tz(s,u,t.shape.length,W_[t.dtype],h,c,r,l),o},setupFunc:function(e){tz=e.wasm.cwrap(Qn,null,["number","array","number","number","array","array","number","number"])}},iz=Z_("Pow");var sz,oz={kernelName:na,backendName:"wasm",setupFunc:function(e){az=e.wasm.cwrap(na,null,["number","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=n.dataIdMap.get(a.dataId).id,s=n.dataIdMap.get(r.dataId).id,o=i,l=a,u=l;"float32"!==l.dtype&&(u=DP({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let d=n.makeOutput(a.shape,"float32"),p=n.dataIdMap.get(d.dataId).id;return az(o,s,p),"float32"!==l.dtype&&n.disposeData(u.dataId),d}};var lz,uz={kernelName:aa,backendName:"wasm",setupFunc:function(e){sz=e.wasm.cwrap(aa,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=sP(s,r,t),f=p;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Jf.getInnerMostAxes(f.length,u.shape.length))}Jf.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=Jf.computeOutAndReduceShapes(u.shape,f),y=Sr.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==Sr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;sz(l,y,W_[A.dtype],e)}if(c&&t.disposeData(d.dataId),i){let e=Jf.expandShapeToKeepDim(A.shape,h);A.shape=e}return A}},dz={kernelName:oa,backendName:"wasm",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=Wx(a,r,i,s),l=t.makeOutput([o.length],s);return t.typedArrayFromHeap(l).set(o),l}},pz=Z_(Gt),hz=j_(ua),cz=j_(da),fz=j_(ga);var mz,gz={kernelName:fa,backendName:"wasm",setupFunc:function(e){lz=e.wasm.cwrap(fa,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{images:i}=a,{alignCorners:s,halfPixelCenters:o,size:l}=r,[u,d]=l,[p,h,c,f]=i.shape,m=[p,u,d,f],g=n.dataIdMap.get(i.dataId);"float32"!==g.dtype&&(t=DP({backend:n,inputs:{x:i},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let y=g.id,A=n.makeOutput(m,"float32");if(0===Sr.sizeFromShape(i.shape))return A;let x=n.dataIdMap.get(A.dataId).id;return lz(y,p,h,c,f,u,d,s?1:0,o?1:0,x),null!=t&&n.disposeData(t.dataId),A}};var yz,Az={kernelName:ma,backendName:"wasm",setupFunc:function(e){mz=e.wasm.cwrap(ma,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{images:i,dy:s}=n,{alignCorners:o}=r,l=a.makeOutput(i.shape,"float32"),u=a.dataIdMap.get(i.dataId);return"float32"!==u.dtype&&(t=DP({backend:a,inputs:{x:i},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(t.dataId)),mz(a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(i.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),o),null!=t&&a.disposeData(t.dataId),l}};var xz,bz={kernelName:ha,backendName:"wasm",setupFunc:function(e){yz=e.wasm.cwrap(ha,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,[d,p,h,c]=r.shape,f=[d,l,u,c],m=t.makeOutput(f,"float32");if(0===Sr.sizeFromShape(r.shape))return m;let g,y=t.dataIdMap.get(r.dataId);"float32"!==y.dtype&&(g=DP({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));let A=y.id,x=t.dataIdMap.get(m.dataId).id;return yz(A,d,p,h,c,l,u,i?1:0,s?1:0,x),null!=g&&t.disposeData(g.dataId),m}};var vz,wz={kernelName:ca,backendName:"wasm",setupFunc:function(e){xz=e.wasm.cwrap(ca,null,["number","number","number","array","array","boolean"])},kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{images:i,dy:s}=n,{alignCorners:o}=r,l=a.makeOutput(i.shape,"float32"),u=a.dataIdMap.get(i.dataId);return"float32"!==u.dtype&&(t=DP({backend:a,inputs:{x:i},attrs:{dtype:"float32"}}),u=a.dataIdMap.get(t.dataId)),xz(a.dataIdMap.get(i.dataId).id,a.dataIdMap.get(s.dataId).id,a.dataIdMap.get(l.dataId).id,new Uint8Array(new Int32Array(i.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),o),null!=t&&a.disposeData(t.dataId),l}};var kz,Iz={kernelName:ya,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=Sr.parseAxisParam(i,r.shape);if(0===r.shape.length)return eP({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(o.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);vz(l,d,s.length,p,r.shape.length,u);let h=NP({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),h},setupFunc:function(e){vz=e.wasm.cwrap(ya,null,["number","array","number","array","number","number"])}};var Sz,Nz={kernelName:lr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:i,fillValue:s,center:o}=a,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,d=n.dataIdMap.get(l.dataId).id,[p,h,c,f]=r.shape,[m,g]=Jf.getImageCenter(o,h,c),y="number"==typeof s?[s,s,s,0===s?0:255]:[...s,255],A=new Uint8Array(new Int32Array(y).buffer);return kz(u,p,h,c,f,i,m,g,A,y.length,d),l},setupFunc:function(e){kz=e.wasm.cwrap(lr,null,["number","number","number","number","number","number","number","number","array","number","number"])}},Cz=j_(Aa),Tz=j_(xa);var Rz,Ez={kernelName:ba,backendName:"wasm",setupFunc:function(e){Sz=e.wasm.cwrap(ba,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:i}=n,{shape:s}=a,o=t.makeOutput(s,i.dtype);if(0===Sr.sizeFromShape(s))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Up.calculateShapes(i,r,s),c=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(i.dataId).id,m=new Uint8Array(new Int32Array(p).buffer),g=t.dataIdMap.get(o.dataId).id;return Sz(c,f,W_[i.dtype],l,u,d,m,h,g),o}};var $z,Mz={kernelName:wa,backendName:"wasm",setupFunc:function(e){Rz=e.wasm.cwrap(wa,null,["number","number","number","number","number","number","bool","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a;if(r.dtype!==i.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${r.dtype} and ${i.dtype}`);let o=n.makeOutput(i.shape,"int32");function l(e){return n.dataIdMap.get(e.dataId).id}return Rz(l(r),l(i),r.shape[0],r.shape[1],i.shape[1],W_[r.dtype],"left"===s,l(o)),o}};var Fz,_z={kernelName:ka,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(i.dataId).id,u=n.makeOutput(r.shape,r.dtype),d=n.dataIdMap.get(u.dataId).id,p=a.shape.length,h=r.shape.length,c=0===p||p>1||1===h?1:Sr.sizeFromShape(r.shape.slice(1));return $z(s,o,l,c,d),u},setupFunc:function(e){$z=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}},Pz=j_(Ia);var Oz={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){Fz=e.wasm.cwrap(Ra,null,["number","number"])},kernelFunc:function(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(r.dataId).id;return 0===Sr.sizeFromShape(r.shape)||Fz(a,i),r}},Dz=j_(Ta),zz=j_("Sin"),Lz=j_(Ca),Wz=j_(Ea);var Bz,Vz={kernelName:Fa,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a,o=Sr.sizeFromShape(i),l=[[0,0]];l.push(...s);for(let g=1+i.length;g<r.shape.length;++g)l.push([0,0]);let u=rz.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=Jf.getReshaped(u.shape,i,o,!1),p=Jf.getPermuted(d.length,i.length,!1),h=Jf.getReshapedPermuted(u.shape,i,o,!1),c=NP({inputs:{x:u},backend:n,attrs:{shape:d}}),f=aP({inputs:{x:c},backend:n,attrs:{perm:p}}),m=NP({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}};var Uz,Gz={kernelName:Oa,backendName:"wasm",setupFunc:function(e){Bz=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a}=e,{indices:r,values:i,denseShape:s,defaultValue:o}=a,l=r.shape[0],u=r.shape[1],d=n.readSync(s.dataId)[0],p=[l+d,u],h=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(p.slice(0,1),i.dtype),A=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([d],"bool"),b=n.dataIdMap.get(x.dataId).id,v=n.makeOutput([l],r.dtype),w=n.dataIdMap.get(v.dataId).id,k=n.makeOutput([4],"int32"),I=n.dataIdMap.get(k.dataId).id,S=Bz(h,c,W_[i.dtype],l,d,u,f,g,A,b,w,I),N=n.readSync(k.dataId);switch(N[0]){case 1:t=Jf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(N[1]);break;case 2:t=Jf.getSparseFillEmptyRowsNegativeIndexErrorMessage(N[1],N[2]);break;case 3:t=Jf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(N[1],N[2],N[3]);break;default:t=""}if(n.disposeData(k.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),new Error(t);let C=m,T=y;return S!==p[0]&&(C=EP({inputs:{x:m},attrs:{begin:0,size:[S,u]},backend:n}),T=EP({inputs:{x:y},attrs:{begin:0,size:S},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[C,T,x,v]}};var Hz,jz={kernelName:Da,backendName:"wasm",setupFunc:function(e){Uz=e.wasm.cwrap(Da,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:i}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);let s=t.dataIdMap.get(a.dataId).id,o=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=a.shape[0],d=Sr.sizeFromShape(i.shape),p=t.makeOutput([u,d],a.dtype),h=t.dataIdMap.get(p.dataId).id,c=t.makeOutput([d],i.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;Uz(s,o,l,u,h,f,g);let y,A=t.readSync(m.dataId);switch(A[0]){case 0:y=Jf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(A[1],A[2]);break;case 1:y=Jf.getSparseReshapeNegativeOutputDimErrorMessage(A[1],A[2]);break;case 2:y=Jf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(c.dataId));y=Jf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(c.dataId));y=Jf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(c.dataId),new Error(y);return[p,c]}};function qz(e){Hz=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Xz(e,t){let{backend:n,inputs:a}=e,{data:r,indices:i,segmentIds:s}=a,o=i.shape[0],l=n.readSync(s.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(Jf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=r.shape.slice();d[0]=u;let p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(i.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.makeOutput(d,r.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;Hz(p,W_[r.dtype],r.shape[0],h,c,m,y,t,0);let A,x=n.readSync(g.dataId);switch(x[0]){case 0:A=Jf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:A=Jf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:A=Jf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:A=Jf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:A=""}if(n.disposeData(g.dataId),A)throw n.disposeData(f.dataId),new Error(A);return f}var Kz={kernelName:za,backendName:"wasm",setupFunc:qz,kernelFunc:function(e){return Xz(e,!0)}};var Zz,Yz={kernelName:La,backendName:"wasm",setupFunc:qz,kernelFunc:function(e){return Xz(e,!1)}};var Jz={kernelName:Wa,backendName:"wasm",setupFunc:function(e){Zz=e.wasm.cwrap(Wa,null,["number","number","number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=n,{outputShape:o}=a,l=t.makeOutput(o,s.dtype);if(0===Sr.sizeFromShape(o))return l;let{sliceRank:u,numUpdates:d,sliceSize:p,strides:h,outputSize:c}=Jf.calculateShapes(i,r,o),f=t.dataIdMap.get(r.dataId).id,m=t.dataIdMap.get(i.dataId).id,g=t.dataIdMap.get(s.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),A=t.dataIdMap.get(l.dataId).id;return Zz(f,m,i.shape.length,g,W_[s.dtype],u,d,p,y,c,A),l}};var Qz,eL={kernelName:_a,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=n,o=Sr.parseAxisParam(s,r.shape)[0],l=Jf.prepareSplitSize(r,i,o),u=new Array(r.shape.length).fill(0),d=r.shape.slice();return l.map(e=>{let t=[...d];t[o]=e;let n=EP({inputs:{x:r},attrs:{begin:u,size:t},backend:a});return u[o]+=e,n})}},tL=j_($a),nL=j_(Va),aL=Z_(Ba);var rL,iL={kernelName:sr,backendName:"wasm",setupFunc:function(e){Qz=e.wasm.cwrap(sr,null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:i}=n,s=t.dataIdMap.get(i.dataId).id,o=t.makeOutput(i.shape,i.dtype),l=t.dataIdMap.get(o.dataId).id;return Qz(s,r,W_[i.dtype],l),o}};var sL={kernelName:Ga,backendName:"wasm",setupFunc:function(e){rL=e.wasm.cwrap(Ga,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{x:i}=a,{begin:s,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:x,end:b,strides:v}=Nf.sliceInfo(i.shape,s,o,l,u,d,p,h,c);if(g)t=NP({inputs:{x:i},backend:n,attrs:{shape:m}});else if(y||A){Sr.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=Nf.computeOutShape(x,b,v),a=EP({inputs:{x:i},backend:n,attrs:{begin:x,size:e}});t=NP({inputs:{x:a},backend:n,attrs:{shape:m}}),n.disposeData(a.dataId)}else{let e=n.makeOutput(f,"float32"),a=n.dataIdMap.get(i.dataId).id,r=new Uint8Array(new Int32Array(Sr.computeStrides(i.shape)).buffer),s=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(b).buffer),l=new Uint8Array(new Int32Array(v).buffer),u=new Uint8Array(new Int32Array(f).buffer),d=new Uint8Array(new Int32Array(Sr.computeStrides(f)).buffer),p=n.dataIdMap.get(e.dataId).id;rL(a,r,i.shape.length,s,o,l,u,d,f.length,p),t=NP({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}};var oL={kernelName:Ha,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{data:r,dataSplits:i}=n,{separator:s,nGramWidths:o,leftPad:l,rightPad:u,padWidth:d,preserveShortSequences:p}=a,h=t.readSync(r.dataId),c=t.readSync(i.dataId),[f,m]=pb(h,c,s,o,l,u,d,p),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(i.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}};var lL={kernelName:ja,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{input:r,delimiter:i}=n,{skipEmpty:s}=a,o=t.readSync(r.dataId),l=t.readSync(i.dataId),[u,d,p]=cb(o,l[0],s),h=d.length,c=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([h],"string");t.dataIdMap.get(f.dataId).stringBytes=d;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(p),[c,f,m]}};var uL,dL={kernelName:qa,backendName:"wasm",kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{input:r}=n,{numBuckets:i}=a,s=fb(t.readSync(r.dataId),i),o=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(o).set(s),o}},pL=Z_("Sub");var hL,cL={kernelName:"Sum",backendName:"wasm",setupFunc:function(e){uL=e.wasm.cwrap("Sum",null,["number","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:i}=a,{x:s}=n,o=t.dataIdMap.get(s.dataId).id,l=o,u=s,{transposed:d,axes:p,originalAxes:h,inputWasTransposed:c}=sP(s,r,t),f=p;if(c){let e=t.dataIdMap.get(d.dataId).id;e!==o&&(u=d,l=e,f=Jf.getInnerMostAxes(f.length,u.shape.length))}Jf.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=Jf.computeOutAndReduceShapes(u.shape,f),y=Sr.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==Sr.sizeFromShape(u.shape)){let e=t.dataIdMap.get(A.dataId).id;uL(l,y,W_[A.dtype],e)}if(c&&t.disposeData(d.dataId),i){let e=Jf.expandShapeToKeepDim(A.shape,h);A.shape=e}return A}},fL=j_("Tan"),mL=j_(Za);var gL,yL={kernelName:va,backendName:"wasm",setupFunc:function(e){hL=e.wasm.cwrap(va,null,["number","number","number","number","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=n,{}=a,o=t.makeOutput(r.shape,r.dtype);if(0===Sr.sizeFromShape(r.shape))return o;let{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Up.calculateShapes(s,i,r.shape),c=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return hL(c,f,W_[s.dtype],l,u,d,g,h,y,m),o}};var AL,xL={kernelName:Ya,backendName:"wasm",setupFunc:function(e){gL=e.wasm.cwrap(Ya,null,["number","array","number","array","number","number"])},kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,i=n.dataIdMap.get(r.dataId).id,{reps:s}=a,o=new Array(r.shape.length);for(let h=0;h<o.length;h++)o[h]=r.shape[h]*s[h];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),d=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(d.dataId).id;return gL(i,l,r.shape.length,u,o.length,W_[d.dtype],p),d}};var bL,vL={kernelName:Ja,backendName:"wasm",setupFunc:function(e){AL=e.wasm.cwrap(Ja,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a,o=n.dataIdMap.get(r.dataId).id,l=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=i;let d=n.makeOutput(u,r.dtype),p=n.dataIdMap.get(d.dataId).id,h=n.makeOutput(u,"int32"),c=n.dataIdMap.get(h.dataId).id;return AL(o,l,r.shape.length,W_[r.dtype],i,s,p,c),[d,h]}};var wL={kernelName:Qa,backendName:"wasm",setupFunc:function(e){bL=e.wasm.cwrap(Qa,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])},kernelFunc:function(e){let t,{backend:n,inputs:a,attrs:r}=e,{image:i,transforms:s}=a,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=r,[p,h,c,f]=i.shape,[m,g]=null!=d?d:[h,c],y=[p,m,g,f],A=new Uint8Array(new Int32Array(Sr.computeStrides(i.shape)).buffer),x=new Uint8Array(new Int32Array(Sr.computeStrides(y)).buffer),b=n.makeOutput(y,i.dtype),v=n.dataIdMap.get(b.dataId).id,w=n.dataIdMap.get(i.dataId).id,k=n.dataIdMap.get(s.dataId).id,I="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return bL(w,k,s.shape[0]>1,p,m,g,f,c,h,A,i.shape.length-1,x,y.length-1,I,t,u,v),b}};var kL={kernelName:tr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:i}=t,{outputValues:s,outputShape:o,indices:l}=kb(a.readSync(i.dataId),r,i.shape,i.dtype);return[a.makeOutput(o,i.dtype,void 0,s),a.makeOutput([l.length],"int32",void 0,l)]}};var IL={kernelName:nr,backendName:"wasm",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r.shape[i],o=r.shape.length,l=new Array(o-1),u=0;for(let c=0;c<o;c++)c!==i&&(l[u++]=r.shape[c]);let d=new Array(s),p=new Array(o).fill(0),h=r.shape.slice();h[i]=1;for(let c=0;c<d.length;c++)p[i]=c,d[c]=EP({inputs:{x:r},attrs:{begin:p,size:h},backend:n});return d.map(e=>{let{dataId:t,dtype:n}=e;return{dataId:t,dtype:n,shape:l}})}};var SL={kernelName:ir,backendName:"wasm",kernelFunc:function(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}},NL=[H_,q_,X_,K_,J_,Q_,lP,uP,hP,cP,fP,mP,gP,yP,AP,bP,SP,wP,IP,RP,FP,_P,PP,OP,LP,WP,BP,GP,jP,XP,ZP,JP,tO,nO,aO,iO,oO,uO,pO,cO,mO,yO,xO,vO,kO,IO,SO,NO,CO,TO,EO,$O,_O,OO,DO,zO,WO,VO,GO,jO,XO,KO,ZO,nP,YO,JO,QO,tD,nD,aD,iD,oD,sD,lD,uD,dD,pD,cD,mD,yD,AD,bD,wD,ID,ND,TD,ED,FD,_D,OD,BD,VD,UD,GD,qD,KD,YD,JD,QD,ez,nz,rz,iz,oz,uz,dz,pz,hz,cz,fz,TP,gz,Az,bz,wz,Iz,Nz,Cz,Tz,Ez,Mz,_z,Pz,Oz,Dz,zz,Lz,$P,LD,Wz,Vz,Gz,jz,Kz,Yz,Jz,eL,tL,nL,aL,iL,sL,oL,lL,dL,pL,cL,fL,mL,yL,xL,vL,wL,iP,kL,IL,SL];for(let Z2 of NL)xr(Z2);var CL=Ve();CL.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(di){return!1}}),CL.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(CL.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(di){return!1}});var TL=v(L()),RL=v(W()),EL=v(B()),$L=TL.default||TL,ML=EL.default||EL,FL=class extends U{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(GL),HL=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new V(this,ts())}write(e,t,n){let a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=Sr.now();return e(),{kernelMs:Sr.now()-t}}move(e,t,n,a,r){let i=this.dataIdNextNumber++;if("string"===a){let s=t;return void this.dataIdMap.set(e,{id:i,stringBytes:s,shape:n,dtype:a,memoryOffset:null,refCount:r})}let s=Sr.sizeFromShape(n),o=s*Sr.bytesPerElement(a),l=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(i,s,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:a,dtype:r,shape:i,stringBytes:s}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=s.length)?s.slice(t,n):s;t=t||0,n=n||Sr.sizeFromShape(i);let o=Sr.bytesPerElement(r);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(a+t*o,a+n*o).buffer,r)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,a){let r;if(null==n)r=this.write(null!=a?a:null,e,t);else{let a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=Sr.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap(e){let{shape:t,dtype:n,dataId:a}=e,r=this.wasm.HEAPU8.buffer,{memoryOffset:i}=this.dataIdMap.get(a),s=Sr.sizeFromShape(t);switch(n){case"float32":return new Float32Array(r,i,s);case"int32":return new Int32Array(r,i,s);case"bool":return new Uint8Array(r,i,s);default:throw new Error(`Unknown dtype ${n}`)}}};function _L(e,t,n){if(null!=DL)return DL;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=LL&&null!=LL[a]?LL[a]:n+a}async function PL(){let[e,t]=await Promise.all([Ve().getAsync("WASM_HAS_SIMD_SUPPORT"),Ve().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,a)=>{let r={locateFile:(n,a)=>{if(n.endsWith(".worker.js")){let e=RL.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?_L(e,t,null!=zL?zL:a):a+n}};BL&&(r.instantiateWasm=function(e){return(t,n)=>(Sr.fetch(e,{credentials:"same-origin"}).then(a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then(e=>{WebAssembly.instantiate(e,t).then(e=>{n(e.instance,e.module)})})}),{})}(_L(e,t,null!=zL?zL:"")));let i,s=!1;r.onAbort=()=>{s||WL||(WL=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==DL?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+$L.toString()],{type:"text/javascript"}),i=$L(r)):i=ML(r),i.then(e=>{s=!0,WL=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}).catch(a)})}var OL=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],DL=null,zL=null,LL={},WL=!1,BL=!1;function VL(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Qi("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),WL)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");DL=e,BL=t}function UL(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(WL)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)zL=e;else{LL=e;let t=OL.filter(e=>null==LL[e]);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}BL=t}var GL=-1,HL=-1;function jL(e){GL=e}function qL(){if(-1===HL)throw new Error("WASM backend not initialized.");return HL}var XL="4.22.0";fs("wasm",async()=>{let{wasm:e}=await PL();return new FL(e)},2);var KL=Ve();KL.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15),KL.registerFlag("WEBGPU_CPU_FORWARD",()=>!0),KL.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1),KL.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0),KL.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1),KL.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3),KL.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1),KL.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0),KL.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1),KL.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1),KL.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1),KL.registerFlag("WEBGPU_PRINT_SHADER",()=>""),KL.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);var ZL=class{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}},YL=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){let n,a=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],i=JL(e,t);return r?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(n=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e)):(n=this.device.createBuffer({size:e,usage:t,mappedAtCreation:a}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(n),this.numUsedBuffers++,this.numBytesUsed+=e,n}releaseBuffer(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(0===this.freeBuffers.size)return;let n=e.size,a=JL(n,e.usage),r=this.usedBuffers.get(a),i=r.indexOf(e);if(i<0)throw new Error("Cannot find the buffer in buffer manager");r[i]=r[r.length-1],r.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function JL(e,t){return`${e}_${t}`}var QL=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,a){let r=e*t*tW(n),i=eW(e,t,n,a);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=r,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let e=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(e),e}this.numBytesAllocated+=r;let s=this.device.createTexture({size:[e,t],format:n,usage:a});return this.usedTextures.get(i).push(s),s}releaseTexture(e){if(0===this.freeTextures.size)return;let t=e.width,n=e.height,a=e.format,r=eW(t,n,a,e.usage);this.freeTextures.has(r)||this.freeTextures.set(r,[]),this.freeTextures.get(r).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(r),s=i.indexOf(e);if(s<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1);let o=t*n*tW(a);this.numBytesUsed-=o}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function eW(e,t,n,a){return`${e}_${t}_${n}_${a}`}function tW(e){if("rgba8unorm"===e)return 16;throw new Error(`${e} is not supported!`)}function nW(e,t){if(Math.max(...e)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");let n=e.length,a=e.map(e=>`${t}.${"xyzwuv"[e]}`),r=new Array(n-1);r[n-2]=a[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${a[i+1]})`;return r}var aW,rW=(e,t,n)=>"int32"===n?`atomicAdd(${e}, bitcast<i32>(${t}));`:`\n          {\n            var oldValue = 0;\n            loop {\n              let newValueF32 = bitcast<f32>(oldValue) + (${t});\n              let newValue = bitcast<i32>(newValueF32);\n              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);\n              if res.exchanged {\n                break;\n              }\n              oldValue = res.old_value;\n            }\n          }`;!function(e){e[e.FROM_PIXELS=0]="FROM_PIXELS",e[e.DRAW=1]="DRAW"}(aW||(aW={}));var iW=(e,t,n,a,r)=>{let i=function(e,t,n){let a=[],r=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,a.push(`\n\n      var<private> localId: vec3<u32>;\n      var<private> localIndex: u32;\n      var<private> globalId: vec3<u32>;\n      var<private> numWorkgroups: vec3<u32>;\n      var<private> workgroupId: vec3<u32>;\n\n      // Only used when the y/z dimension of workgroup size is 1.\n      fn getGlobalIndex() -> i32 {\n        ${mW(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +\n                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +\n                localIndex);\n        `}\n      }\n    `),null!=n.pixelsOpType){let r=n.pixelsOpType===aW.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${gW(t.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${gW(e[0].dtype,n.outputComponent)}>;`,i=3===t.shape.length?"vec2<i32>":"i32";a.push(`\n        struct Uniform {\n          outShapeStrides : ${i},\n          size            : i32,\n          numChannels     : i32,\n          alpha           : f32,\n        };\n\n        ${r}\n        @group(0) @binding(2) var<uniform> uniforms: Uniform;\n      `);let s=yW(n);return[pW,a.join("\n"),cW(t.shape),n.getUserCode(),dW(s,n)].join("\n")}let i,s,o="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach((t,n)=>{let a=oW(e[n].shape.length);o+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${a}, `,i=e[n].shape.length-1,s=oW(i),o+=`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides: ${s}, `});let l=oW(t.shape.length);o+=`outShape : ${l}, `,i=t.shape.length-1,s=oW(i),o+=`\n         outShapeStrides: ${s}, `,n.size&&(o+="size : i32, "),n.uniforms&&(o+=n.uniforms),o+="};",o=function(e){let t=/(\w+)\s*:\s*vec(5|6)/g;e=e.replace(t,e=>"@align(16) "+e);let n=/vec(5|6)\s*,\s*(\w+)/g;return e=e.replace(n,(e,t,n)=>`vec${t}, @align(16) ${n}`),e}(o),a.push(o),n.atomic?a.push("\n      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;\n    "):a.push(`\n      @group(0) @binding(0) var<storage, read_write> result: array<${gW(t.dtype,n.outputComponent)}>;\n    `),n.variableNames.forEach((t,r)=>{a.push(`\n      @group(0) @binding(${1+r}) var<storage, read> ${t}: array<${n.variableComponents?gW(e[r].dtype,n.variableComponents[r]):gW(e[r].dtype,n.outputComponent)}>;\n        `)}),""!==o&&a.push(`\n      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;\n      `);let u=function(e,t){let{x:n,y:a=[],z:r=[]}=t,i=e.length,s=n.length+a.length+r.length;if(s!==i)return"";if(n.length===i)return`fn getOutputCoords() -> ${oW(i)}{\n    let globalIndex = getGlobalIndex();\n    return getCoordsFromIndex(globalIndex);\n  }\n  `;let o="",l=[n,a,r];for(let h=0;h<l.length;h++){let e=l[h];if(0!==e.length)if(1===e.length)o+=`let d${e[0]} = i32(globalId[${h}]);`;else{let t=nW(e,"uniforms.outShape");o+=`var index${h} = i32(globalId[${h}]);`;for(let n=0;n<t.length;n++)o+=`let d${e[n]} = index${h} / ${t[n]};`,n===t.length-1?o+=`let d${e[n+1]} = index${h} - d${e[n]} * ${t[n]};`:o+=`index${h} = index${h} - d${e[n]} * ${t[n]};`}}let u=[];for(let h=0;h<s;h++)u.push(`d${h}`);let d=oW(s),p=`fn getOutputCoords() -> ${d} {\n  ${o}\n`;return 0===u.length?p+=`return ${d}(0); }`:p+=`return ${d}(${u.join(",")}); }`,p}(t.shape,n.dispatchLayout),d=[pW,a.join("\n")+hW,cW(t.shape),u,fW(t.shape.length)];n.atomic||d.push(function(e,t,n){let a=e.length,r=gW(t,n),i=`fn setOutputAtIndex(flatIndex : i32, value : ${sW(n)}) {\n      result[flatIndex] = ${r}(value);\n    }\n\n    fn setOutputAtIndexI32(flatIndex : i32, value : ${sW(n,"i32")}) {\n      result[flatIndex] = ${r}(value);\n    }\n    `;if(a>=2){let e=["d0","d1","d2","d3","d4","d5"].slice(0,a),t=oW(a);i+=`\n      fn setOutputAtCoords(${e.map(e=>`${e} : i32`).join(", ")}, value : ${sW(n)}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndex(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n      fn setOutputAtCoordsI32(${e.map(e=>`${e} : i32`).join(", ")}, value : ${sW(n,"i32")}) {\n        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));\n        setOutputAtIndexI32(flatIndex${1===n?"":` / ${n}`}, value);\n      }\n    `}return i}(t.shape,t.dtype,n.outputComponent)),n.variableNames.forEach((t,n)=>{d.push(`${cW(e[n].shape,t)}`)});let p=e.map((e,a)=>function(e,t,n,a){let r=function(e,t){let n=e.name,a=e.shape.length,r=oW(a),i="get"+n.charAt(0).toUpperCase()+n.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,a),o=s.map(e=>`${e} : i32`).join(", ");if(a<1)return`\n      fn ${i}() -> ${sW(t)} {\n        return ${sW(t)}(${n}[0]);\n      }\n    `;let l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,u=`${a}D`;return 0===a&&(u="1D"),`\n    fn ${i}(${o}) -> ${sW(t)} {\n      return ${sW(t)}(${n}[getIndexFromCoords${u}(${r}(${s.join(",")}),\n        ${l})${1===t?"":` / ${t}`}]);\n    }\n   `}(e,n);return e.shape.length<=t.length&&(r+=function(e,t,n,a){let r=e.name,i=r.charAt(0).toUpperCase()+r.slice(1),s="get"+i+"ByOutput",o=e.shape.length,l=t.length,u=oW(l);if(Sr.arraysEqual(e.shape,t)&&a)return`\n    fn ${s}Index(globalIndex : i32) -> ${sW(n)} {\n      return ${sW(n)}(${r}[globalIndex]);\n    }\n\n    fn ${s}Coords(coords : ${u}) -> ${sW(n)} {\n      return ${sW(n)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${1===n?"":` / ${n}`}]);\n    }\n    `;let d=Jf.getBroadcastDims(e.shape,t),p=l-o,h="";if(0===o)return`\n    fn ${s}Index(globalIndex : i32) -> ${sW(n)}{\n      return get${i}();\n    }\n\n    fn ${s}Coords(coords : ${u}) -> ${sW(n)}{\n      return get${i}();\n    }\n  `;h=l<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${lW(e+p)} = 0;`).join("\n");let c="";if(l<2&&o>0)c="coords";else if(l>1){c=`${oW(o)}(${e.shape.map((e,t)=>`coords.${lW(t+p)}`).join(", ")})`}else c="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return`\n  fn ${s}Index(globalIndex : i32) -> ${sW(n)} {\n    var coords = getCoordsFromIndex(globalIndex);\n    ${h}\n    return ${sW(n)}(${r}[getIndexFromCoords${m}(${c}, ${f})${1===n?"":` / ${n}`}]);\n  }\n\n  fn ${s}Coords(coordsIn : ${u}) -> ${sW(n)} {\n    var coords = coordsIn;\n    ${h}\n    return ${sW(n)}(${r}[getIndexFromCoords${m}(${c}, ${f})${1===n?"":` / ${n}`}]);\n  }\n`}(e,t,n,a)),r}(e,t.shape,n.variableComponents?n.variableComponents[a]:n.outputComponent,n.dispatchLayout.x.length===t.shape.length)).join("\n");d.push(p),d.push(n.getUserCode());let h=yW(n);return d.push(dW(h,n)),d.join("\n")}(n,{dtype:a.dtype,shape:a.shape},t),s=e.createShaderModule({code:i,label:t.constructor.name}),o=Ve().get("WEBGPU_PRINT_SHADER");if(""!==o){o=o.toLowerCase();let e=o.split(",");("all"===o||e.some(e=>t.shaderKey.toLowerCase().includes(e)))&&(console.group(t.shaderKey),console.debug(i),console.groupEnd())}return r?e.createComputePipelineAsync({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},sW=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"f32";switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component ${t} is not supported.`)}};function oW(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function lW(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function uW(){let e;switch(arguments.length){case 0:e="\n        fn main()\n      ";break;case 1:e=`\n        fn main(${arguments.length<=0?void 0:arguments[0]} : i32)\n      `;break;default:throw Error("Unreachable")}return e}function dW(e,t){let n;return n=`\n     ${function(e){return`\n  @compute @workgroup_size(${e.workgroupSize[0]}, ${e.workgroupSize[1]}, ${e.workgroupSize[2]})\n`}(t)}\n      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,\n                @builtin(global_invocation_id) GlobalId : vec3<u32>,\n                @builtin(local_invocation_index) LocalIndex: u32,\n                @builtin(workgroup_id) WorkgroupId : vec3<u32>,\n                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {\n        localId = LocalId;\n        localIndex = LocalIndex;\n        globalId = GlobalId;\n        numWorkgroups = NumWorkgroups;\n        workgroupId = WorkgroupId;\n        ${e?"main(getGlobalIndex());":"main();"};\n      }\n    `,n}var pW="\n  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};\n  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) && all(coord < shape);\n  }\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) && all(coord < shape);\n  }\n\n  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {\n    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;\n  }\n  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {\n    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);\n    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;\n  }\n\n  // NaN defination in IEEE 754-1985 is :\n  //   - sign = either 0 or 1.\n  //   - biased exponent = all 1 bits.\n  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).\n  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers\n  fn isnan(val: f32) -> bool {\n    let floatToUint: u32 = bitcast<u32>(val);\n    return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n  }\n  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {\n    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);\n    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);\n  }\n",hW="\n  fn isinf(val: f32) -> bool {\n    return abs(val) == uniforms.INFINITY;\n  }\n";function cW(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=e.length,a=""!==t?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=""!==t?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${a}(index : i32) -> i32 { return index; }`;let i,s=Sr.computeStrides(e),o=oW(n),l=[];for(let u=0;u<n;u++)l.push(`d${u}`);return 1===s.length?`    fn ${a}(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};\n      return vec2<i32>(d0, d1);\n    }`:(i="var index2 = index;"+s.map((e,t)=>`${`let ${l[t]} = index2 / uniforms.${r}.${lW(t)}`}; ${t===s.length-1?`let ${l[t+1]} = index2 - ${l[t]} * uniforms.${r}.${lW(t)}`:`index2 = index2 - ${l[t]} * uniforms.${r}.${lW(t)}`};`).join(""),`\n    fn ${a}(index : i32) -> ${o} {\n      ${i}\n      return ${o}(${l.join(",")});\n    }\n  `)}function fW(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputIndexFromCoords(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;case 5:t+="\n        fn getOutputIndexFromCoords(coords : vec5) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u;\n        }\n        ";break;case 6:t+="\n        fn getOutputIndexFromCoords(coords : vec6) -> i32 {\n          return coords.x * uniforms.outShapeStrides.x +\n              coords.y * uniforms.outShapeStrides.y +\n              coords.z * uniforms.outShapeStrides.z +\n              coords.w * uniforms.outShapeStrides.w +\n              coords.u * uniforms.outShapeStrides.u +\n              coords.v;\n        }\n        ";break;default:Sr.assert(!1,()=>`Unsupported ${e}D shape`)}return t}function mW(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function gW(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if("float32"===e)return sW(t,"f32");if("int32"===e||"bool"===e)return sW(t,"i32");throw new Error(`type ${e} is not supported.`)}function yW(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}var AW={};b(AW,{GPUBytesPerElement:()=>CW,MatMulProgramType:()=>xW,assertNotComplex:()=>RW,computeDispatch:()=>wW,computeWorkPerThreadForConv2d:()=>SW,computeWorkgroupInfoForMatMul:()=>kW,computeWorkgroupSizeForConv2d:()=>IW,flatDispatchLayout:()=>NW,isWebGPUSupported:()=>TW,tilesFitEvenlyIntoShape:()=>vW});var xW,bW=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function vW(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((t,n)=>t%e[n]===0)}function wW(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],[r,i,s]=[Math.ceil(bW(e.x.map(e=>t[e]))/(n[0]*a[0])),e.y?Math.ceil(bW(e.y.map(e=>t[e]))/(n[1]*a[1])):1,e.z?Math.ceil(bW(e.z.map(e=>t[e]))/(n[2]*a[2])):1];return[r,i,s]}function kW(e,t,n){let a=[8,8,1],r=[4,4,1];return arguments.length>3&&void 0!==arguments[3]&&arguments[3]||(e<=8&&(r[1]=1),t<=16&&n<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:r}}function IW(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[8,8,1];let n=bW(e.x.map(e=>t[e])),a=bW(e.y.map(e=>t[e]));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function SW(e,t){if(arguments.length>2&&void 0!==arguments[2]&&arguments[2])return[4,4,1];let n=bW(e.x.map(e=>t[e])),a=bW(e.y.map(e=>t[e]));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function NW(e){return{x:e.map((e,t)=>t)}}function CW(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function TW(){return!("undefined"==typeof globalThis||!globalThis.navigator||!globalThis.navigator.gpu)}function RW(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&Sr.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}!function(e){e[e.MatMulReduceProgram=0]="MatMulReduceProgram",e[e.MatMulSplitKProgram=1]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=3]="MatMulPackedProgram",e[e.MatMulMax=4]="MatMulMax"}(xW||(xW={}));var EW,$W=Ve().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),MW=class e extends U{nextDataId(){return e.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!TW())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new ZL(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new YL(this.device),this.textureManager=new QL(this.device),this.tensorMap=new V(this,ts()),Ve().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);return t?n.refCount=0:n.refCount--,!(n.refCount>0)&&(null!=n.complexTensorInfos&&(this.disposeData(n.complexTensorInfos.real.dataId),this.disposeData(n.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(t&&t.resource){if(t.external)return void(t.resource=null);t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.tensorMap.set(a,{dtype:n,shape:t,values:e,refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:a,shape:n,values:t,refCount:r})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,n)=>{this.pipelineCache[t]=e[n]})}async getBufferData(e){if(Ve().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let t=e.size,n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let a=n.getMappedRange().slice(0);return n.unmap(),null!=n&&this.bufferManager.releaseBuffer(n),Ve().getBool("WEBGPU_USE_PROFILE_TOOL")&&(Sr.assert(void 0!==this.dummyContext,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),a}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n,complexTensorInfos:a}=t;if(null!=n||"string"===t.dtype)return n;if("complex64"===t.dtype){let t=this.readSync(a.real.dataId),n=this.readSync(a.imag.dataId),r=Sr.convertBackendValuesAndArrayBuffer(Jf.mergeRealAndImagArrays(t,n).buffer,"float32");return this.convertAndCacheOnCPU(e,r),r}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let r=["opaque","premultiplied"],i=t.resource,s=i.size;Sr.assert(s%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let o=s/4,l=new ArrayBuffer(s),u=256,d=256,p=r.map(e=>new OffscreenCanvas(u,d)),h=new OffscreenCanvas(u,d);this.endComputePassEncoder(),p.map((e,t)=>{let n=e.getContext("webgpu");return n.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:r[t]}),n.getCurrentTexture()}).map((e,t)=>{let n=(n,a,s)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:1024,offset:s},{texture:e},{width:n,height:a}),this.submitQueue();let o=h.getContext("2d",{willReadFrequently:!0});o.clearRect(0,0,n,a),o.drawImage(p[t],0,0);let u=o.getImageData(0,0,n,a).data,d=r[t],c=new Uint8ClampedArray(l,s,n*a*4);for(let e=0;e<c.length;e+=4)if("premultiplied"===d)c[e+3]=u[e+3];else{let t=u[e];c[e]=u[e+2],c[e+1]=u[e+1],c[e+2]=t}},a=Math.floor(o/(u*d)),s=u,c=d,f=0;for(let r=0;r<a;r++)n(s,c,f),f+=u*d*4;let m=o%(u*d);c=Math.floor(m/u),c>0&&(n(s,c,f),f+=c*(4*u)),s=m%u,s>0&&n(s,1,f)});let c=Sr.convertBackendValuesAndArrayBuffer(l,t.dtype);return this.convertAndCacheOnCPU(e,c),c}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t,n=this.tensorMap.get(e),{values:a}=n;if(null!=a)return a;if("complex64"===n.dtype){let e=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),a=e[0],r=e[1];t=Jf.mergeRealAndImagArrays(a,r)}else{let e=await this.getBufferData(n.resource);t=Sr.convertBackendValuesAndArrayBuffer(e,n.dtype)}return this.convertAndCacheOnCPU(e,t),t}copyBuffer(e){let t=e.size,n=e.usage,a=this.bufferManager.acquireBuffer(t,n);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,a,0,t),this.submitQueue(),a}createTensorFromGPUData(e,t,n){let a=e.buffer;if("complex64"===n)throw new Error("Cannot write to a complex64 dtype. ");let r={id:this.nextDataId()};this.tensorMap.set(r,{dtype:n,shape:t,values:null,refCount:1,external:e.zeroCopy});let i=this.tensorMap.get(r),s=CW(i.dtype)*Sr.sizeFromShape(i.shape);if(e.buffer.size<s)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${s})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(a=this.copyBuffer(a)),i.resource=a,ts().makeTensorFromDataId(r,t,n,this)}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:a,shape:r,resource:i}=t;if("complex64"===a)throw new Error("Does not support reading buffer for complex64 dtype.");if(null==i)throw null!=n?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let s=i,o=s.size,l=s.usage,u=this.bufferManager.acquireBuffer(o,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(i,0,u,0,o),this.submitQueue();let d=this.makeTensorInfo(r,a),p=ts().makeTensorFromTensorInfo(d);return this.tensorMap.get(d.dataId).resource=u,{tensorRef:p,buffer:u}}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map(e=>Sr.decodeString(e));return mo(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return mo(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=Sr.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=Sr.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,a&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return s.kernelMs=Sr.sum(o),s.getExtraProfileInfo=()=>o.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}makeTensorInfo(e,t,n){return"string"===t&&null!=n&&n.length>0&&Sr.isString(n[0])&&(n=n.map(e=>Sr.encodeString(e))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){let t=this.tensorMap.get(e);if(null!=t.resource)return;let n,a=CW(t.dtype)*Sr.sizeFromShape(t.shape),r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(n=this.bufferManager.acquireBuffer(a,r,!0),"unmapped"===n.mapState){let e=this.bufferManager.acquireBuffer(a,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),r=e.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(r).set(t.values):new Float32Array(r).set(t.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,a),this.stagingPendingDisposal.push(e)}else{let e=n.getMappedRange();"int32"===t.dtype||"bool"===t.dtype?new Int32Array(e).set(t.values):new Float32Array(e).set(t.values),n.unmap()}t.values=null}else n=this.bufferManager.acquireBuffer(a,r);t.resource=n}makeUniforms(e){let t=0,n=0,a=[],r=1;e.forEach(e=>{let i;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:i=4;break;case 2:i=8;break;case 3:case 4:case 5:case 6:i=16;break;default:Sr.assert(!1,()=>`Unsupported ${e.data.length}D shape`)}(5===n||6===n)&&(i=16),i>r&&(r=i),t=Math.ceil(t/i)*i,n=e.data.length,a.push(t),t+=4*e.data.length}),t=Math.ceil(t/r)*r;let i=new ArrayBuffer(t);e.forEach((e,t)=>{let n=a[t];"int32"===e.type?new Int32Array(i,n,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(i,n,e.data.length).set(e.data):new Float32Array(i,n,e.data.length).set(e.data)});let s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,i,0,t),this.uniformPendingDisposal.push(s),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,n,a,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),0===Sr.sizeFromShape(r.shape))return this.tensorMap.get(r.dataId).values=Sr.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=((e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,a=t.dispatchLayout,r=t.dispatch;if(r.every(e=>e<=n))return r;Sr.assert(r[0]>n&&void 0===a.y&&void 0===a.z,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r[0]));return i>n?(i=Math.ceil(Math.cbrt(r[0])),Sr.assert(i<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]})(this.device,e);let i=t.map((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}});e.shaderKey=function(e,t,n){let a=e.shaderKey;if(null!=e.pixelsOpType)return a;let r=[],i=[];t.forEach(e=>{r.push(e.shape),i.push(e.dtype)}),r.push(n.shape),i.push(n.dtype);let s=t.map(e=>Jf.getBroadcastDims(e.shape,n.shape)),o=t.map(e=>Sr.arraysEqual(e.shape,n.shape)).join("_"),l=s.map(e=>e.join("_")).join(";"),u=mW(e)?"flatDispatch":"";return a+="_"+(e.workgroupSize?e.workgroupSize.join(","):"")+r.map(e=>e.length).join(",")+i.join(",")+e.variableNames.join(",")+l+o+u,a}(e,i,r);let s=Ve().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=iW(this.device,e,i,r,s)),e.pipeline=this.pipelineCache[e.shaderKey],s||this.recordAndSubmit(e,r,t,a),r}recordAndSubmit(e,t,n,a){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let r=[],i=[],s="int32";if(null==e.pixelsOpType){r.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),i=n.concat(t).map(e=>e.shape);let e="int32";i.map(t=>{r.push({type:e,data:t});let n=Sr.computeStrides(t);r.push({type:e,data:n})})}else{let e=Sr.computeStrides(t.shape);r.push({type:s,data:e})}if(e.size){let t=Sr.sizeFromShape(e.outputShape);r.push({type:s,data:[e.outputComponent?t/e.outputComponent:t]})}a&&(r=[...r,...a]);let o=[this.tensorToBinding(t),...n.map(e=>this.tensorToBinding(e)),this.makeUniforms(r)];n.forEach(e=>{this.commandQueueOwnedIds.add(e.dataId)}),this.commandQueueOwnedIds.add(t.dataId);let l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:o.map((e,t)=>({binding:t,resource:e}))}),u=null!=this.activeTimers;this.ensureCommandEncoderReady();let d={};u&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(u||Ve().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===aW.DRAW)&&(this.endComputePassEncoder(),u?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);let t=new BigUint64Array(e.getMappedRange()),n=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),n}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:$W;return Ve().getBool("WEBGPU_CPU_FORWARD")&&e.every(e=>null==this.tensorMap.get(e.dataId).resource&&Sr.sizeFromShape(e.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}};MW.nextDataId=0,TW()&&fs("webgpu",async()=>{let e={powerPreference:Ve().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n={},a=[];t.features.has("timestamp-query")&&a.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&a.push(["bgra8unorm-storage"]),n.requiredFeatures=a;let r=t.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};let i=await t.requestDevice(n),s="info"in t?t.info:"requestAdapterInfo"in t?await t.requestAdapterInfo():void 0;return new MW(i,s)},3),function(e){e[e.ADD=0]="ADD",e[e.ATAN2=1]="ATAN2",e[e.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",e[e.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",e[e.DIV=4]="DIV",e[e.ELU_DER=5]="ELU_DER",e[e.EQUAL=6]="EQUAL",e[e.FLOOR_DIV=7]="FLOOR_DIV",e[e.GREATER=8]="GREATER",e[e.GREATER_EQUAL=9]="GREATER_EQUAL",e[e.LESS=10]="LESS",e[e.LESS_EQUAL=11]="LESS_EQUAL",e[e.LOGICAL_AND=12]="LOGICAL_AND",e[e.LOGICAL_OR=13]="LOGICAL_OR",e[e.MAX=14]="MAX",e[e.MIN=15]="MIN",e[e.MOD=16]="MOD",e[e.MUL=17]="MUL",e[e.NOT_EQUAL=18]="NOT_EQUAL",e[e.POW=19]="POW",e[e.PRELU=20]="PRELU",e[e.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",e[e.SUB=22]="SUB"}(EW||(EW={}));var FW;function _W(e,t){let n;do{switch(e){case EW.ATAN2:n="let resultTemp = atan2(a, b);";break;case EW.MAX:n="let resultTemp = max(a, b);";break;case EW.MIN:n="let resultTemp = min(a, b);";break;case EW.MOD:n=t?"\n  let isNaN = !vec4<bool>(b);\n  var resultTemp = vec4<f32>(a % b);\n  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {\n    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];\n  }\n  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {\n    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];\n  }\n  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {\n    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];\n  }\n  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {\n    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];\n  }\n":"\n  let isNaN = b == 0.;\n  var resultTemp = a % b;\n  resultTemp = select((resultTemp + b) % b, resultTemp,\n      (a < 0. && b < 0.) || (a >= 0. && b > 0.));\n";break;case EW.NOT_EQUAL:n=t?"\n  var resultTemp = vec4<f32>(a != b);\n  let valueForNaN = 1.0;\n":"\n  var resultTemp = f32(a != b);\n  let valueForNaN = 1.0;\n";break;case EW.POW:n=t?"\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);\n":"\n  let isNaN = a < 0.0 && floor(b) < b;\n  if (b == 0.0) {\n    return 1.0;\n  }\n  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),\n      round(abs(b) % 2.0) != 1.0);\n";break;default:continue}let a,r,i;return t?(a="isnanVec4",r="vec4<f32>",i="vec4<bool>"):(a="isnan",r="f32",i="bool"),`\n      let aIsNaN = ${a}(a);\n      let aPostLegalization = select(a, ${r}(42), aIsNaN);\n      let bIsNaN = ${a}(b);\n      let bPostLegalization = select(b, ${r}(42), bIsNaN);\n      let isNaN = false;\n      let valueForNaN = uniforms.NAN;\n      {\n        let a = aPostLegalization;\n        let b = bPostLegalization;\n        ${n}\n        return select(\n            resultTemp, ${r}(valueForNaN),\n            ${i}(isNaN) | aIsNaN | bIsNaN);\n      }\n    `}while(0);switch(e){case EW.ADD:n="let resultTemp = a + b;";break;case EW.COMPLEX_MULTIPLY_IMAG:n="let resultTemp = areal * bimag + aimag * breal;";break;case EW.COMPLEX_MULTIPLY_REAL:n="let resultTemp = areal * breal - aimag * bimag;";break;case EW.DIV:n="let resultTemp = a / b;";break;case EW.ELU_DER:n="let resultTemp = select(a * (b + 1.0), a, b >= b - b);";break;case EW.EQUAL:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a == b);\n";break;case EW.FLOOR_DIV:n="\n  let remainder =\n      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));\n  let quotient = (a - remainder) / b;\n  let resultTemp =\n      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));\n";break;case EW.GREATER:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a > b);\n";break;case EW.GREATER_EQUAL:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a >= b);\n";break;case EW.LESS:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a < b);\n";break;case EW.LESS_EQUAL:n="\n  let zero = sign(a) * 0 + 0;\n  let one = sign(b) * 0 + 1;\n  let resultTemp = select(zero, one, a <= b);\n";break;case EW.LOGICAL_AND:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(a >= 1.0 && b >= 1.0);";case EW.LOGICAL_OR:return t?"return min(vec4<f32>(a >= vec4<f32>(1.0)) +\n  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));":"return f32(a >= 1.0 || b >= 1.0);";case EW.MUL:n="let resultTemp = a * b;";break;case EW.PRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return b * a; }  return a;";case EW.SQUARED_DIFFERENCE:n="let resultTemp = (a - b) * (a - b);";break;case EW.SUB:n="let resultTemp = a - b;"}return`\n    ${n}\n    return resultTemp;\n  `}!function(e){e[e.ABS=0]="ABS",e[e.ACOS=1]="ACOS",e[e.ACOSH=2]="ACOSH",e[e.ASIN=3]="ASIN",e[e.ASINH=4]="ASINH",e[e.ATAN=5]="ATAN",e[e.ATANH=6]="ATANH",e[e.CEIL=7]="CEIL",e[e.COS=8]="COS",e[e.COSH=9]="COSH",e[e.ELU=10]="ELU",e[e.ERF=11]="ERF",e[e.EXP=12]="EXP",e[e.EXPM1=13]="EXPM1",e[e.FLOOR=14]="FLOOR",e[e.IS_FINITE=15]="IS_FINITE",e[e.IS_INF=16]="IS_INF",e[e.IS_NAN=17]="IS_NAN",e[e.LINEAR=18]="LINEAR",e[e.LOG=19]="LOG",e[e.LOG1P=20]="LOG1P",e[e.LOGICAL_NOT=21]="LOGICAL_NOT",e[e.NEG=22]="NEG",e[e.RELU=23]="RELU",e[e.RELU6=24]="RELU6",e[e.LEAKYRELU=25]="LEAKYRELU",e[e.RECIPROCAL=26]="RECIPROCAL",e[e.ROUND=27]="ROUND",e[e.RSQRT=28]="RSQRT",e[e.SELU=29]="SELU",e[e.SIGMOID=30]="SIGMOID",e[e.SIGN=31]="SIGN",e[e.SIN=32]="SIN",e[e.SINH=33]="SINH",e[e.SOFTPLUS=34]="SOFTPLUS",e[e.SQRT=35]="SQRT",e[e.SQUARE=36]="SQUARE",e[e.STEP=37]="STEP",e[e.TAN=38]="TAN",e[e.TANH=39]="TANH",e[e.TO_INT=40]="TO_INT"}(FW||(FW={}));var PW=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  let p = ${Jf.ERF_P};\n  let a1 = ${Jf.ERF_A1};\n  let a2 = ${Jf.ERF_A2};\n  let a3 = ${Jf.ERF_A3};\n  let a4 = ${Jf.ERF_A4};\n  let a5 = ${Jf.ERF_A5};\n\n  let sign = sign(a);\n  let absA = abs(a);\n  let t = 1.0 / (1.0 + p * absA);\n  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));\n`,OW=`\n  if (a >= 0.0) {\n    return ${Jf.SELU_SCALE} * a;\n  } else {\n    return ${Jf.SELU_SCALEALPHA} * (exp(a) - 1.0);\n  }\n`;function DW(e,t){switch(e){case FW.ABS:return"return abs(a);";case FW.ACOS:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return acos(a);\n";case FW.ACOSH:return"\n  if (a < 1.) {\n    return uniforms.NAN;\n  }\n  return acosh(a);\n";case FW.ASIN:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  return asin(a);\n";case FW.ASINH:return"return asinh(a);";case FW.ATAN:return"\n  if (isnan(a)) {\n    return uniforms.NAN;\n  }\n  return atan(a);\n";case FW.ATANH:return"\n  if (abs(a) > 1.) {\n    return uniforms.NAN;\n  }\n  if (a == 1.) {\n    return uniforms.INFINITY;\n  }\n  if (a == -1.) {\n    return -uniforms.INFINITY;\n  }\n  return atanh(a);\n";case FW.COS:return"return cos(a);";case FW.COSH:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case FW.CEIL:return"return ceil(a);";case FW.ELU:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case FW.ERF:return PW;case FW.EXP:return"return exp(a);";case FW.EXPM1:return"return exp(a) - 1.0;";case FW.FLOOR:return"return floor(a);";case FW.IS_FINITE:return"return f32(!isnan(a) && !isinf(a));";case FW.IS_INF:return"return f32(isinf(a));";case FW.IS_NAN:return"return f32(isnan(a));";case FW.LINEAR:return"return a;";case FW.LOG:return"if (a < 0.0) { return uniforms.NAN; }\n  return log(a);";case FW.LOG1P:return"\n  if (isnan(a)) { return a; }\n  return log(1.0 + a);\n";case FW.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case FW.NEG:return"return -a;";case FW.LEAKYRELU:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n":"if (a < 0.0) { return uniforms.alpha * a; } return a;";case FW.RECIPROCAL:return"return 1.0 / a;";case FW.RELU:return t?"\n  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));\n":"return select(a, 0.0, a < 0.0);";case FW.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case FW.ROUND:return"return round(a);";case FW.RSQRT:return"return inverseSqrt(a);";case FW.SELU:return OW;case FW.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case FW.SIGN:return"return sign(a);";case FW.SIN:return"return sin(a);";case FW.SINH:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case FW.SOFTPLUS:return"\n  let epsilon = 1.1920928955078125e-7;\n  let threshold = log(epsilon) + 2.0;\n\n  let too_large = a > -threshold;\n  let too_small = a < threshold;\n  let exp_a = exp(a);\n\n  if (too_large) {\n    return a;\n  } else if (too_small) {\n    return exp_a;\n  } else {\n    return log(exp_a + 1.0);\n  }\n";case FW.SQRT:return"return sqrt(a);";case FW.SQUARE:return"return a * a;";case FW.STEP:return"\n  if (isnan(a)) {\n    return a;\n  }\n\n  return select(uniforms.stepAlpha, 1.0, a > 0.0);\n";case FW.TAN:return"return tan(a);";case FW.TANH:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case FW.TO_INT:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function zW(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:3;if(null===e)return"";let r="";if("linear"===e)r=DW(FW.LINEAR);else if("relu"===e)r=DW(FW.RELU,n);else if("elu"===e)r=DW(FW.ELU,n);else if("relu6"===e)r=DW(FW.RELU6,n);else if("prelu"===e)r=_W(EW.PRELU,n);else if("sigmoid"===e)r=DW(FW.SIGMOID,n);else{if("leakyrelu"!==e)throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);r=DW(FW.LEAKYRELU,n)}let i=sW(n?4:1),s="";return s=t?`\n      fn activation(a : ${i}, coords : vec${a}<i32>) -> ${i} {\n        let b = getPreluActivationWeightsByOutputCoords(coords);\n        ${r}\n      }`:`\n      fn activation(a : ${i}, coords : vec${a}<i32>) -> ${i} {\n        ${r}\n      }`,s}function LW(e,t){return`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      ${t?"value = activation(value, coords);":""}\n      `}function WW(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],r=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;Sr.assert(e&&1===r||!e,()=>`transposeA ${e} is not compatible with component size ${r}`);let i=`\n      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}\n\n    `,s=t?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`\n  fn mm_readA(batch: i32, row: i32, col: i32) -> ${sW(r)} {\n    var value = ${sW(r)}(0.0);\n    ${n&&a?i:`\n    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}\n    {\n      ${i}\n    }\n    `}\n    return value;\n  }\n\n  fn mm_readB(batch: i32, row: i32, col: i32) -> ${sW(r)} {\n    var value = ${sW(r)}(0.0);\n    ${s}\n    return value;\n  }\n  `}function BW(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:1;return`\n  ${WW(n,a,r,i,arguments.length>6&&void 0!==arguments[6]&&arguments[6],s)}\n  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${sW(s)}) {\n    ${r&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}\n    {\n      var value = valueIn;\n      let coords = vec3<i32>(batch, row, col);\n      ${LW(e,t)}\n      setOutputAtCoords(coords[0], coords[1], coords[2], value);\n    }\n  }\n  `}function VW(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=t[1]*e[1],l=t[0]*e[0],u=n?o:a,d=n?a:o,p=u/t[0],h=a/t[1],c=e[1],f=e[0];return Sr.assert((n&&4===p&&4===e[1]||!n&&(3===p||4===p))&&u%t[0]===0&&a%t[1]===0&&4===e[0],()=>`If transposeA ${n} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n          Otherwise, innerElementSize ${p} must be 3 or 4.\n      tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${a} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`),`\n  var<workgroup> mm_Asub : array<array<vec${p}<f32>, ${u/p}>, ${d}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/e[0]}>, ${a}>;\n\n  ${uW()} {\n    let localRow = i32(localId.y);\n    let tileRow = localRow * ${c};\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * ${c};\n    let globalCol = i32(globalId.x) * ${f};\n    let batch = ${r?"0":"i32(globalId.z)"};\n    let batchA = ${r||!s?"batch":"batch % uniforms.aShape[0]"};\n    let batchB = ${r||!s?"batch":"batch % uniforms.bShape[0]"};\n    let globalRowStart = i32(workgroupId.y) * ${o};\n\n    let numTiles = ${r?`${Math.ceil(i/a)}`:`(uniforms.dimInner - 1) / ${a} + 1`};\n    var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};\n\n    var acc: array<vec4<f32>, ${c}>;\n\n    // Loop over shared dimension.\n    let tileRowB = localRow * ${h};\n    for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${c}; innerRow++) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            ${((e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol * ${t});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRow + innerRow,\n          kStart + inputCol * ${t});\n        `)(n,p)}\n        }\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < ${h}; innerRow++) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);\n        }\n        kStart = kStart + ${a};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        ${((e,t,n,a)=>{if(e)return`\n      for (var k = 0; k < ${a}; k++) {\n        let BCached0 = mm_Bsub[k][tileCol];\n        let ACached0 = mm_Asub[k][localRow];\n        for (var i = 0; i < ${n}; i++) {\n          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);\n        }\n      }`;{let e="",r="";for(let n=0;n<t;n++)e+=`let BCached${n} = mm_Bsub[k * ${t} + ${n}][tileCol];`,r+=`acc[i] = fma(BCached${n}, vec4<f32>(ACached[${n}]), acc[i]);`;return`\n      for (var k = 0; k < ${a/t}; k++) {\n        ${e}\n        for (var i = 0; i < ${n}; i++) {\n          let ACached = mm_Asub[tileRow + i][k];\n          ${r}\n        }\n      }`}})(n,p,c,a)}\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < ${c}; innerRow++) {\n        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n    }\n  }`}var UW=e=>e?"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          kStart + inputRow,\n          globalRowStart + inputCol);\n        ":"\n        mm_Asub[inputRow][inputCol] = mm_readA(batchA,\n          globalRowStart + inputRow,\n          kStart + inputCol);\n        ";function GW(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:32,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:32,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7],l=e[1]*t[1],u=e[0]*t[0],d=n?l:a,p=n?a:l;Sr.assert(p%t[1]===0&&d%t[0]===0&&a%t[1]===0,()=>`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}, tileInner ${a} must be divisible by workgroupSize[1]${t[1]}`);let h=p/t[1],c=d/t[0],f=a/t[1],m=e[1],g=e[0],y=s?`\n      let localRow = i32(localId.y);\n      let localCol = i32(localId.x);\n      let globalRowStart = i32(workgroupId.y) * ${l};\n      let globalColStart = i32(workgroupId.x) * ${u};\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n          for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n            ${UW(n)}\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var inputRow = localRow; inputRow < ${a}; inputRow = inputRow + ${t[1]}) {\n              for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {\n            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n              kStart + inputRow,\n              globalColStart + inputCol);\n          }\n        }\n        kStart = kStart + ${a};\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        var BCached : array<f32, ${g}>;\n        for (var k = 0; k < ${a}; k++) {\n          for (var inner = 0; inner < ${g}; inner++) {\n            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n          }\n          for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n            for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n              acc[innerRow][innerCol] =\n                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n            }\n          }\n        }\n        workgroupBarrier();\n      }\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          let gCol = globalColStart + localCol + innerCol * ${t[0]};\n          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n        }\n      }\n      `:`\n  let tileRow = i32(localId.y) * ${m};\n  let tileCol = i32(localId.x) * ${g};\n\n  let globalRow = i32(globalId.y) * ${m};\n  let globalCol = i32(globalId.x) * ${g};\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let tileRowA = i32(localId.y) * ${h};\n  let tileColA = i32(localId.x) * ${c};\n  let tileRowB = i32(localId.y) * ${f};\n  // Loop over shared dimension.\n  for (var t = 0; t < numTiles; t++) {\n    // Load one tile of A into local memory.\n    for (var innerRow = 0; innerRow < ${h}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${c}; innerCol++) {\n        let inputRow = tileRowA + innerRow;\n        let inputCol = tileColA + innerCol;\n        ${UW(n)}\n      }\n    }\n\n    // Load one tile of B into local memory.\n    for (var innerRow = 0; innerRow < ${f}; innerRow++) {\n      for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n        let inputRow = tileRowB + innerRow;\n        let inputCol = tileCol + innerCol;\n        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,\n          kStart + inputRow,\n          globalCol + innerCol);\n      }\n    }\n    kStart = kStart + ${a};\n    workgroupBarrier();\n\n    // Compute acc values for a single thread.\n    var BCached : array<f32, ${g}>;\n    for (var k = 0; k < ${a}; k++) {\n      for (var inner = 0; inner < ${g}; inner++) {\n        BCached[inner] = mm_Bsub[k][tileCol + inner];\n      }\n\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        ${(e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];")(n)}\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] =\n              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);\n        }\n      }\n    }\n\n    workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n    for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n      mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n          acc[innerRow][innerCol]);\n    }\n  }\n  `;return`\n    var<workgroup> mm_Asub : array<array<f32, ${d}>, ${p}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${u}>, ${a}>;\n\n    ${uW()} {\n      let batch = ${r?"0":"i32(globalId.z)"};\n      let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};\n      let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};\n      let numTiles = ${r?`${Math.ceil(i/a)}`:`(uniforms.dimInner - 1) / ${a} + 1`};\n      var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};\n\n      var acc : array<array<f32, ${g}>, ${m}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${m}; innerRow++) {\n        for (var innerCol = 0; innerCol < ${g}; innerCol++) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n      ${y}\n    }\n  `}var HW=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let l=n?e[1]:e[2];if(this.isVec4=(l%4===0&&!n||t[1]%4===0&&n)&&t[2]%4===0&&!a,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!n,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let e=kW(t[1],l,t[2],n);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let u=null!=r,d=null!=s;u&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=o,this.transposeA=n,this.transposeB=a,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${n}_${a}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,n){let a=this.workgroupSize[1]*this.elementsPerThread[1],r=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=r,[e%a===0,t%r===0,n%this.tileInner===0]}getUserCode(){return`\n      ${zW(this.activation,this.hasPreluActivationWeights,this.isVec4)}\n      ${BW(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}\n      ${this.isVec4?VW(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Sr.assert(1===e[1]&&1===e[2],()=>`A linear work group size is required. But got ${e}.`);let n=4*e[0];return`\n    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;\n\n    ${uW()} {\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;\n      let batch = i32(globalId.z);\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t++) {\n        // Load one tile of A into local memory.\n        let colA = t * ${n} + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(${(e=>e?"\n      mm_readA(batchA, colA, globalRow),\n      mm_readA(batchA, colA + 1, globalRow),\n      mm_readA(batchA, colA + 2, globalRow),\n      mm_readA(batchA, colA + 3, globalRow)\n  ":"\n      mm_readA(batchA, globalRow, colA),\n      mm_readA(batchA, globalRow, colA + 1),\n      mm_readA(batchA, globalRow, colA + 2),\n      mm_readA(batchA, globalRow, colA + 3)\n  ")(t)});\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${n/4}; k++) {\n          let rowB = t * ${n} + k * 4;\n          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),\n                              mm_readB(batchB, rowB + 1, globalCol),\n                              mm_readB(batchB, rowB + 2, globalCol),\n                              mm_readB(batchB, rowB + 3, globalCol));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      mm_write(batch, globalRow, globalCol, acc);\n    }\n  `}(this.workgroupSize,this.transposeA):GW(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}\n    `}};var jW=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize);let s=null!=a,o=null!=i;s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=s,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){return`\n      ${zW(this.activation,this.hasPreluActivationWeights)}\n      ${BW(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){return`\n    var<workgroup> sumValues : array<f32, ${e}>;\n    ${uW()} {\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let batchA = batch % uniforms.aShape[0];\n      let batchB = batch % uniforms.bShape[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + ${e}) {\n        let dataA = mm_readA(batchA, row, k);\n        let dataB = mm_readB(batchB, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = ${e/2}u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  `}(this.workgroupSize[0])}\n    `}};var qW=class{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workgroupSize[0]),Math.ceil(n[1]/this.workgroupSize[1]),n[0]];let l=null!=i;l&&this.variableNames.push("bias");let u=null!=o;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=a,this.transposeB=r,this.addBias=l,this.activation=s,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${a}_${r}`}getUserCode(){return`\n      ${zW(this.activation,this.hasPreluActivationWeights)}\n      ${BW(this.addBias,this.activation,this.transposeA,this.transposeB)}\n      ${function(e){let t=e[1],n=e[0],a=t>n?t:n;return`\n  var<workgroup> mm_Asub : array<array<f32, ${a}>, ${t}>;\n  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${a}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Read data from global memory to registers firstly, then store them into\n  // shared memory, so it is instruction-Level parallelism for arithmetic\n  // operations and others handle IO operations between barrier api, makes ALU\n  // and load/store units work simultaneously, could improves the performance.\n  ${uW()} {\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n    let batch = i32(globalId.z);\n    let batchA = batch % uniforms.aShape[0];\n    let batchB = batch % uniforms.bShape[0];\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = 0;\n    var regA = mm_readA(batchA, globalRow, globalColA);\n    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n    globalColA = globalColA + ${a};\n    globalRowB = globalRowB + ${a};\n\n    for (var t = 0; t < numTiles; t = t + 1) {\n      mm_Asub[tileRow][tileCol] = regA;\n      mm_Bsub[2 * tileRow][tileCol] = regB0;\n      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;\n\n      workgroupBarrier();\n\n      regA = mm_readA(batchA, globalRow, globalColA);\n      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);\n      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);\n      globalColA = globalColA + ${a};\n      globalRowB = globalRowB + ${a};\n\n      for (var k = 0; k < ${a}; k = k + 1) {\n        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];\n      }\n      workgroupBarrier();\n    }\n\n    mm_write(batch, globalRow, globalCol, acc);\n  }\n  `}(this.workgroupSize)}\n    `}},XW=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,Sr.assert(1===e[0],()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let r=(n&&this.outputShape[1]%4===0||!n&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=r?4:1,r||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=wW(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=n,this.transposeB=a,this.shaderKey=`matMulSplitK_${n}_${a}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`\n      ${WW(!1,this.transposeB,!1,!1,!1,e)}\n      fn mm_write(batch: i32, row : i32, col : i32, value : ${sW(e)}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n          let coords = vec3<i32>(batch, row, col);\n          let flatIndex = getOutputIndexFromCoords(coords);\n          // The problem is that we should initialize output to zero before using.\n          // Otherwise, the original value will be added to the result.\n          for (var i = 0; i < ${e}; i = i + 1) {\n            ${rW("&result[flatIndex + i]",""+(e>1?"value[i]":"value"),"float32")}\n          }\n        }\n      }\n      ${4===e?VW(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):GW(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}\n    `}},KW=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=a,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`\n    ${zW(this.activation,this.hasPreluActivationWeights)}\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        var value = getXByOutputIndex(index);\n        ${LW(this.addBias,this.activation)}\n        setOutputAtIndex(index, value);\n      }\n    }\n    `}},ZW=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        setOutputAtIndex(index, uniforms.value);\n      }\n    }\n  `}};function YW(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:i}=n;if(i=i||Sr.inferDtype(r),"string"===i){let e=Sr.getArrayFromDType(i,Sr.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,i,e)}{let e=new ZW(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],i,n)}}var JW={kernelName:en,backendName:"webgpu",kernelFunc:YW};function QW(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,i=Sr.sizeFromShape(a.shape),s=Sr.inferFromImplicitShape(r,i),o=Sr.sizeFromShape(s);return Sr.assert(i===o,()=>`The new shape (${s}) has ${o} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:s,dtype:a.dtype}}var eB={kernelName:pa,backendName:"webgpu",kernelFunc:QW};function tB(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:i,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}=e,d=t.shape.length,p=n.shape.length,h=a?t.shape[d-2]:t.shape[d-1],c=r?n.shape[p-1]:n.shape[p-2],f=a?t.shape[d-1]:t.shape[d-2],m=r?n.shape[p-2]:n.shape[p-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),A=Sr.sizeFromShape(g),x=Sr.sizeFromShape(y),b=Ll.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);Sr.assert(h===c,()=>`Error in matMul: inner shapes (${h}) and (${c}) of Tensors with shapes ${t.shape} and ${n.shape} and transposeA=${a} and transposeB=${r} must match.`);let v,w,k=a?[A,h,f]:[A,f,h],I=r?[x,m,c]:[x,c,m],S=QW({inputs:{x:t},backend:i,attrs:{shape:k}}),N=QW({inputs:{x:n},backend:i,attrs:{shape:I}}),C=[S,N],T=Math.max(A,x),R=[S,N],E=[{type:"int32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[h]}],$=[T,f,m],M=Ve().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(M<0){let e=Ve().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:i.thresholdToIncreaseWorkgroups,n=T*Math.ceil(f/32)*Math.ceil(m/32);M=n<=t||f<=8&&n<=2*t?T*f*m<=128?xW.MatMulReduceProgram:1===T&&c>=2e3?xW.MatMulSplitKProgram:xW.MatMulSmallOutputSizeProgram:xW.MatMulPackedProgram}switch(M){case xW.MatMulReduceProgram:v=new jW($,a,r,s,u,o);break;case xW.MatMulSplitKProgram:if(w=YW({backend:i,attrs:{shape:$,value:0,dtype:t.dtype}}),v=new XW($,c,a,r),s||u){w=i.runWebGPUProgram(v,R,t.dtype,E,w);let e=new KW(w.shape,s,u,o),n=null,a=[w];s&&a.push(s),o&&a.push(o),"leakyrelu"===u&&(n=[{type:"float32",data:[l]}],e.uniforms+=" alpha : f32,");let r=i.runWebGPUProgram(e,a,w.dtype,n);C.push(w);let d=QW({inputs:{x:r},backend:i,attrs:{shape:b}});C.push(r);for(let t of C)i.disposeData(t.dataId);return d}break;case xW.MatMulSmallOutputSizeProgram:v=new qW(k,I,$,a,r,s,u,o);break;case xW.MatMulPackedProgram:let e=i.adapterInfo.isIntel();v=new HW(k,$,a,r,s,u,o,e);break;default:throw new Error(`Unsupported MatMulProgramType ${M}.`)}s&&R.push(s),o&&R.push(o),"leakyrelu"===u&&(E.push({type:"float32",data:[l]}),v.uniforms+=" alpha : f32,"),w=i.runWebGPUProgram(v,R,t.dtype,E,w);let F=QW({inputs:{x:w},backend:i,attrs:{shape:b}});C.push(w);for(let _ of C)i.disposeData(_.dataId);return F}var nB={kernelName:ur,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:p}=a;return tB({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:p,activation:d})}},aB=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=Jf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${_W(this.op,!1)}\n      }\n\n      ${uW("index")} {\n        if(index < uniforms.size) {\n          let areal = getARealByOutputIndex(index);\n          let aimag = getAImagByOutputIndex(index);\n          let breal = getBRealByOutputIndex(index);\n          let bimag = getBImagByOutputIndex(index);\n          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},rB=class{constructor(e,t,n){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=Jf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=NW(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&n.length>1&&t[0]<128,this.useSharedMemoryWithB=n.length<=1&&t.length>1&&n[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let a=t.length>0&&t[t.length-1]%4===0,r=n.length>0&&n[n.length-1]%4===0;a&&r?(this.outputComponent=4,this.variableComponents=[4,4]):a&&(Sr.isScalarShape(n)||1===n[n.length-1])||r&&(Sr.isScalarShape(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=a?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e,t=4===this.outputComponent?"vec4<f32>":"f32",n=`\n    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {\n      ${_W(this.op,4===this.outputComponent)}\n    };\n    `;if("shared"===this.type){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",a=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);\n          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];\n          let b = getBByOutputIndex(index);`;e=`\n        ${n}\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        ${uW("index")} {\n          // Fill in the shared memory buffer.\n          let localIndex = i32(localId.x);\n          if(localIndex < ${this.lastDimensionSize}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);\n          }\n          workgroupBarrier();\n\n          if(index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            ${a}\n            setOutputAtIndex(index, binaryOperation(a, b));\n          }\n        }\n        `}else e=`\n       ${n}\n       ${uW("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index * ${this.outputComponent});\n           let a = ${t}(getAByOutputCoords(coords));\n           let b = ${t}(getBByOutputCoords(coords));\n           setOutputAtIndex(index, binaryOperation(a, b));\n         }\n       }\n       `;return e}};function iB(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var sB={kernelName:dn,backendName:"webgpu",kernelFunc:iB};function oB(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,i=n.makeTensorInfo(a.shape,"complex64"),s=n.tensorMap.get(i.dataId),o=iB({inputs:{x:a},backend:n}),l=iB({inputs:{x:r},backend:n});return s.complexTensorInfos={real:o,imag:l},i}var lB={kernelName:bt,backendName:"webgpu",kernelFunc:oB},uB=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";this.variableNames=["A"],this.size=!0;this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==n&&(this.uniforms=n),this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${DW(this.op,!1)}\n      }\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let a = getAByOutputIndex(index);\n          setOutputAtIndex(index, unaryOperation(a));\n        }\n      }\n      `}};function dB(e){let{opType:t,cpuKernelImpl:n,dtype:a}=e;return e=>{let{inputs:r,backend:i}=e,{x:s}=r,o=i,l=a||s.dtype;if(o.shouldExecuteOnCPU([s])&&null!=n){let e=o.tensorMap.get(s.dataId),t=n(e.values,l);return o.makeTensorInfo(s.shape,l,t)}let u=new uB(s.shape,t);return o.runWebGPUProgram(u,[s],l)}}function pB(e){let{opType:t,cpuKernelImpl:n,supportsComplex:a=!1,dtype:r}=e;return e=>{let{inputs:i,backend:s}=e,{a:o,b:l}=i,u=s;if(a&&"complex64"===o.dtype){let e,n,a=u.tensorMap.get(o.dataId),r=u.tensorMap.get(l.dataId);if(t!==EW.MUL)[e,n]=[[a.complexTensorInfos.real,r.complexTensorInfos.real],[a.complexTensorInfos.imag,r.complexTensorInfos.imag]].map(e=>{let[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:o.shape},i={dataId:a.dataId,dtype:a.dtype,shape:l.shape},s=new rB(t,o.shape,l.shape);return u.runWebGPUProgram(s,[r,i],yi(n.dtype,a.dtype))});else{let t=new aB(EW.COMPLEX_MULTIPLY_REAL,o.shape,l.shape),i=new aB(EW.COMPLEX_MULTIPLY_IMAG,o.shape,l.shape),s=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l.shape},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l.shape}];e=u.runWebGPUProgram(t,s,"float32"),n=u.runWebGPUProgram(i,s,"float32")}let i=oB({inputs:{real:e,imag:n},backend:u});return u.disposeData(e.dataId),u.disposeData(n.dataId),i}let d=r||yi(o.dtype,l.dtype);if(("string"===o.dtype||"string"===l.dtype||u.shouldExecuteOnCPU([o,l]))&&null!=n){let e=u.tensorMap.get(o.dataId).values,t=u.tensorMap.get(l.dataId).values,a="string"===o.dtype?Jf.fromUint8ToStringArray(e):e,r="string"===o.dtype?Jf.fromUint8ToStringArray(t):t,[i,s]=n(o.shape,l.shape,a,r,d);return u.makeTensorInfo(s,d,i)}let p=new rB(t,o.shape,l.shape);return u.runWebGPUProgram(p,[o,l],d)}}var{addImpl:hB,castImpl:cB,ceilImpl:fB,concatImpl:mB,equalImpl:gB,expImpl:yB,expm1Impl:AB,floorImpl:xB,floorDivImpl:bB,gatherNdImpl:vB,gatherV2Impl:wB,greaterEqualImpl:kB,greaterImpl:IB,lessEqualImpl:SB,lessImpl:NB,logImpl:CB,maxImpl:TB,maximumImpl:RB,minimumImpl:EB,multiplyImpl:$B,negImpl:MB,notEqualImpl:FB,prodImpl:_B,rangeImpl:PB,rsqrtImpl:OB,scatterImpl:DB,simpleAbsImpl:zB,sliceImpl:LB,stridedSliceImpl:WB,stringNGramsImpl:BB,subImpl:VB,tileImpl:UB,topKImpl:GB,transposeImpl:HB,uniqueImpl:jB}=Jy,qB={kernelName:"Abs",backendName:"webgpu",kernelFunc:dB({opType:FW.ABS,cpuKernelImpl:zB})},XB=dB({opType:FW.ACOS}),KB={kernelName:Xe,backendName:"webgpu",kernelFunc:XB},ZB=dB({opType:FW.ACOSH}),YB={kernelName:Ke,backendName:"webgpu",kernelFunc:ZB},JB={kernelName:"Add",backendName:"webgpu",kernelFunc:pB({opType:EW.ADD,cpuKernelImpl:hB,supportsComplex:!0})},QB=class{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)});let t=this.variableNames.map(e=>`v${e}`).join(" + ");return`\n      ${uW("index")} {\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputAtIndex(flatIndex, ${t});\n          }\n        }\n      }\n    `}};var eV={kernelName:Ye,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,a=t;if(1===a.length)return iB({inputs:{x:a[0]},backend:n});let r=a.map(e=>e.dtype).reduce((e,t)=>yi(e,t)),i=a.map(e=>e.shape),s=new QB(i);return n.runWebGPUProgram(s,a,r)}},tV=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){Sr.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let e=this.workgroupSize[0];return`\n      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;\n      ${uW()} {\n        var x = i32(workgroupId.x) * ${e} + i32(localId.x);\n        var y = i32(workgroupId.y) * ${e} + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] = f32(A[y * width + x]);\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * ${e} + i32(localId.x);\n        y = i32(workgroupId.x) * ${e} + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputAtIndex((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}},nV=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=oW(this.outputShape.length),t=aV(this.newDim);return`\n      ${uW("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}};function aV(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]=`coords.${lW(a)}`;return n.join()}function rV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:i}=a,s=n,o=r.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=r.shape[i[d]];if(n.shouldExecuteOnCPU([r])){let e=s.tensorMap.get(r.dataId).values,t=HB(e,r.shape,r.dtype,i,l);return n.makeTensorInfo(l,r.dtype,t)}if(2===r.shape.length&&Sr.arraysEqual(i,[1,0])){let e=new tV(r.shape,i);return s.runWebGPUProgram(e,[r],r.dtype)}let u=new nV(r.shape,i);return s.runWebGPUProgram(u,[r],r.dtype)}var iV={kernelName:er,backendName:"webgpu",kernelFunc:rV},sV=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[a]=Jf.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===a.length?[1]:a,e.inSize>=32768&&n>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",n=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isnan(candidate)) {\n          bestValue = uniforms.NAN;\n         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let a="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${n}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       ${uW("index")} {\n         let outputIndex = index / ${n};\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), ${n}u);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + ${n}) {\n           let candidate = f32(x[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), ${n}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${a}\n        }\n       }\n     `}},oV={mean:"float32",all:"bool",any:"bool"};function lV(e,t,n,a,r){let i=e.shape.length,s=[],o=Sr.parseAxisParam(t,e.shape),l=o,u=Jf.getAxesPermutation(l,i),d=e;null!=u&&(d=rV({inputs:{x:e},attrs:{perm:u},backend:r}),l=Jf.getInnerMostAxes(l.length,i),s.push(d)),Jf.assertAxesAreInnerMostDims(a,l,i);let p,[h,c]=Jf.computeOutAndReduceShapes(d.shape,l),f=h;if(n&&(f=Jf.expandShapeToKeepDim(h,o)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([d])){let t=Sr.sizeFromShape(c),n={windowSize:t,inSize:t,batchSize:Sr.sizeFromShape(d.shape)/t,outSize:1},i=oV[a]||Ai(e.dtype),o=[{type:"int32",data:[t]}],l=new sV(n,a,r.device.limits.maxComputeWorkgroupSizeX),u=r.runWebGPUProgram(l,[d],i,o);s.push(u),p=QW({inputs:{x:u},attrs:{shape:f},backend:r})}else{let t=r.tensorMap.get(d.dataId).values;switch(a){case"max":let n=TB(t,Sr.sizeFromShape(c),f,e.dtype);p=r.makeTensorInfo(f,e.dtype,n);break;case"prod":let{outVals:i,outShape:s,outDtype:o}=_B(d.shape,d.dtype,t,l);p=r.makeTensorInfo(s,o,i);break;default:throw new Error(`${a} CPU implementation is not yet supported.`)}}return s.forEach(e=>r.disposeData(e.dataId)),p}var uV={kernelName:"All",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:i,axis:s}=a;return lV(r,s,i,"all",n)}};var dV={kernelName:"Any",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:i,axis:s}=a;return lV(r,s,i,"any",n)}},pV=class{constructor(e,t,n){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let a=[t];this.op="min"===n?"<":">";let[r,i]=Jf.computeOutAndReduceShapes(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=NW(this.outputShape),Sr.sizeFromShape(i)<32?(this.type="plain",this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=wW(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${lW(this.inputShape.length-1)}`,n=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${lW(t)},`;return e};return"shared"===this.type?`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      \n      var<workgroup> xBestIndices : array<i32, ${e}>;\n      var<workgroup> xBestValues : array<f32, ${e}>;\n    \n\n      ${uW("index")} {\n        let outputIndex = index / ${e};\n        let reduceLength = ${t()};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n        let outputCoords = getCoordsFromIndex(outputIndex);\n        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;\n            k = k + ${e}) {\n          let candidate = getX(${n()} k);\n          if (!isnan(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(reduceLength), ${e}u);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `:`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let outputCoords = getCoordsFromIndex(index);\n          var bestIndex = 0;\n          var bestValue = getX(${n()} 0);\n          let reduceLength = ${t()};\n          for (var i = 1; i < reduceLength; i++) {\n            let candidate = getX(${n()} i);\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              bestIndex = i;\n            }\n          }\n          setOutputAtIndexI32(index, bestIndex);\n        }\n      }\n      `}};var hV={kernelName:et,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=Sr.parseAxisParam(i,r.shape),o=Jf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=rV({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Jf.getInnerMostAxes(s.length,l.shape.length)),Jf.assertAxesAreInnerMostDims("argMax",[s[0]],l.shape.length);let d=new pV(l.shape,s[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],h=n.runWebGPUProgram(d,[l],"int32",p);return u.forEach(e=>n.disposeData(e.dataId)),h}};var cV={kernelName:tt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i}=a,s=Sr.parseAxisParam(i,r.shape),o=Jf.getAxesPermutation(s,r.shape.length),l=r,u=[];null!=o&&(l=rV({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),s=Jf.getInnerMostAxes(s.length,l.shape.length)),Jf.assertAxesAreInnerMostDims("argMin",[s[0]],l.shape.length);let d=new pV(l.shape,s[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],h=n.runWebGPUProgram(d,[l],"int32",p);return u.forEach(e=>n.disposeData(e.dataId)),h}},fV=dB({opType:FW.ASIN}),mV={kernelName:nt,backendName:"webgpu",kernelFunc:fV},gV=dB({opType:FW.ASINH}),yV={kernelName:at,backendName:"webgpu",kernelFunc:gV},AV=dB({opType:FW.ATAN}),xV={kernelName:rt,backendName:"webgpu",kernelFunc:AV},bV=pB({opType:EW.ATAN2}),vV={kernelName:st,backendName:"webgpu",kernelFunc:bV},wV=dB({opType:FW.ATANH}),kV={kernelName:it,backendName:"webgpu",kernelFunc:wV},IV=class{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.strides;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}},SV=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool2D_${t}_${n}_${a}_${r}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue = resultValue + value; count = count + 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};\n      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, d);\n              ${e}\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}},NV=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=n,this.flattenPositions=a,this.includeBatchIndex=r,this.shaderKey=`pool3D_${t}_${n}_${a}_${r}`}getUserCode(){let e;e="avg"===this.poolType?"resultValue += value; count += 1.0;":this.computePositions?`let currMaxValue = mix(value, maxValue, maxValueFound);\n      if (value >= currMaxValue) {\n        maxValue = value;\n        maxValueFound = 1.0;\n        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};\n      }`:"resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let batch = coords.x;\n          let ch = coords.u;\n\n          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n          let xDCorner = xCorner.x;\n          let xRCorner = xCorner.y;\n          let xCCorner = xCorner.z;\n\n          ${this.computePositions?"var maxValue = 0.0;\n            var maxValueFound = 0.0;\n            var maxPosition = 0;":`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}\n\n          var count = 0.0;\n          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {\n            let xD = xDCorner + wD;\n            if (xD < 0 || xD >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {\n              let xR = xRCorner + wR;\n              if (xR < 0 || xR >= uniforms.convDims.y) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {\n                let xC = xCCorner + wC;\n                if (xC < 0 || xC >= uniforms.convDims.z) {\n                  continue;\n                }\n\n                let value = getX(batch, xD, xR, xC, ch);\n                ${e}\n              }\n            }\n          }\n\n          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}\n        }\n      }\n    `}};function CV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:i,keepDims:s}=a;return lV(r,i,s,"max",n)}var TV={kernelName:"Max",backendName:"webgpu",kernelFunc:CV};function RV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:i,axis:s}=a;return lV(r,s,i,"mean",n)}var EV={kernelName:zn,backendName:"webgpu",kernelFunc:RV};function $V(e,t,n,a){if(1===t.filterWidth&&1===t.filterHeight&&Sr.arraysEqual(t.inShape,t.outShape))return iB({inputs:{x:e},backend:a});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){let r,i=e.shape.length,s=QW({inputs:{x:e},backend:a,attrs:{shape:[e.shape[i-3]*e.shape[i-2],e.shape[i-1]]}});"avg"===n?r=RV({inputs:{x:s},backend:a,attrs:{axis:0,keepDims:!1}}):(Sr.assert("max"===n,()=>`Invalid pool type ${n}`),r=CV({inputs:{x:s},backend:a,attrs:{reductionIndices:0,keepDims:!1}}));let o=QW({inputs:{x:r},backend:a,attrs:{shape:t.outShape}});return a.disposeData(s.dataId),a.disposeData(r.dataId),o}let r,i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?r=new IV(t):("avg"===n?r=new SV(t,"avg"):(Sr.assert("max"===n,()=>`Invalid pool type ${n}`),r=new SV(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),a.runWebGPUProgram(r,[e],e.dtype,i)}var MV={kernelName:ot,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;return $V(r,Jf.computePool2DInfo(r.shape,i,s,1,o,l),"avg",n)}};var FV={kernelName:ut,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=Jf.computePool3DInfo(r.shape,i,s,[1,1,1],o,u,l),p=new NV(d,"avg"),h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[r],r.dtype,h)}},_V=class{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n\n            dotProd = dotProd + dyValue * uniforms.avgMultiplier;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},PV=class{constructor(e){this.variableNames=["dy"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              dotProd += dyValue * uniforms.avgMultiplier;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}};var OV={kernelName:dt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Jf.computePool3DInfo(s.shape,o,l,1,u,d),h=new PV(p),c=1/(p.filterDepth*p.filterHeight*p.filterWidth),f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"float32",data:[c]}];return n.runWebGPUProgram(h,[r],s.dtype,f)}};var DV={kernelName:lt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i;RW([r,i],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,d=Jf.computePool2DInfo(s.shape,o,l,1,u),p=new _V(d),h=1/(d.filterHeight*d.filterWidth),c=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(p,[r],s.dtype,c)}};var zV={kernelName:pt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:i}=t,{transposeA:s,transposeB:o}=a;return tB({a:r,b:i,transposeA:s,transposeB:o,backend:n})}},LV=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${oW(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e,t=oW(this.rank),n=function(e){if(1===e)return"sourceLoc";if(e<=6)return WV.slice(0,e).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map((e,t)=>"sourceLoc = uniforms.start + coords;"):this.outputShape.map((e,t)=>`sourceLoc.${WV[t]} = uniforms.start.${lW(t)} + coords.${WV[t]};`),`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          var sourceLoc : ${t};\n          let coords = getCoordsFromIndex(index);\n          ${e.join("\n")}\n          setOutputAtIndex(index, getSource(${n}));\n        }\n      }\n    `}},WV=["x","y","z","w","u","v"];function BV(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:i,size:s}=a,[o,l]=Nf.parseSliceParams(r,i,s);if(Nf.assertParamsValid(r,o,l),n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.tensorMap.get(r.dataId),t=LB(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}if(0===Sr.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);let u=new LV(o,l),d=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[r],r.dtype,d)}var VV={kernelName:Sa,backendName:"webgpu",kernelFunc:BV},UV={kernelName:ht,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,crops:s}=a;Sr.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=i.reduce((e,t)=>e*t),l=Jf.getReshaped(r.shape,i,o),u=Jf.getPermuted(l.length,i.length),d=Jf.getReshapedPermuted(r.shape,i,o),p=Jf.getSliceBeginCoords(s,i.length),h=Jf.getSliceSize(d,s,i.length),c=[],f=QW({inputs:{x:r},backend:n,attrs:{shape:l}}),m=rV({inputs:{x:f},backend:n,attrs:{perm:u}}),g=QW({inputs:{x:m},backend:n,attrs:{shape:d}}),y=BV({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>n.disposeData(e.dataId)),y}},GV=`\n  fn bincount_write(index: i32, value: f32) {\n    ${rW("&result[index]","value","float32")}\n  }\n`,HV=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=n,n&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`\n    ${this.binaryOutput?"\n  fn bincount_write(index: i32, value: f32) {\n    atomicStore(&result[index], bitcast<i32>(value));\n  }\n":GV}\n  ${uW("index")} {\n    ${1===this.rank?`if (index < uniforms.xShape) {\n      let indexVal = i32(getX(index));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};\n        bincount_write(indexVal, value);\n      }\n    }`:`let coord = getCoordsFromIndex(index);\n    if (coordsInBounds2D(coord, uniforms.xShape)) {\n      let indexVal = i32(getX(coord[0], coord[1]));\n      if (indexVal < uniforms.binCountSize) {\n        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};\n        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);\n      }\n    }`}\n  }\n  `}};var jV={kernelName:ct,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s}=a,o=Sr.sizeFromShape(r.shape),l=Sr.sizeFromShape(i.shape)>0,u=[s],d=i.dtype,p=YW({backend:n,attrs:{shape:u,value:0,dtype:d}}),h=new HV([o],l),c=[{type:"int32",data:[s]}],f=l?[r,i]:[r];return n.runWebGPUProgram(h,f,d,c,p)}},qV=class{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`\n  ${uW("index")} {\n    if (index < uniforms.size) {\n      var s0 = 1.0;\n      var s1 = 1.0;\n      let indexS0 = index - uniforms.size + uniforms.s0Size;\n      let indexS1 = index - uniforms.size + uniforms.s1Size;\n      if (indexS0 >= 0) {\n        s0 = getS0(indexS0);\n      }\n      if (indexS1 >= 0) {\n        s1 = getS1(indexS1);\n      }\n\n      if (s0 == 1.0) {\n        setOutputAtIndex(index, s1);\n      } else if (s1 == 1.0) {\n        setOutputAtIndex(index, s0);\n      } else if (s0 != s1) {\n        setOutputAtIndex(index, uniforms.NAN);\n      } else {\n        setOutputAtIndex(index, s0);\n      }\n    }\n  }\n  `}};var XV={kernelName:gt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t;if(n.shouldExecuteOnCPU([a,r])){let e=n.tensorMap.get(a.dataId),t=n.tensorMap.get(r.dataId),i=e.values,s=t.values,o=Jf.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}let i=Sr.sizeFromShape(a.shape),s=Sr.sizeFromShape(r.shape),o=Math.max(i,s),l=new qV(o),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return n.runWebGPUProgram(l,[a,r],"int32",u)}},KV=pB({opType:EW.NOT_EQUAL,dtype:"bool",cpuKernelImpl:FB}),ZV={kernelName:jn,backendName:"webgpu",kernelFunc:KV};function YV(e){let{inputs:t,backend:n}=e,{input:a}=t;return iB({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}var JV={kernelName:la,backendName:"webgpu",kernelFunc:YV};var QV={kernelName:yt,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:a,attrs:r}=t,{x:i}=n,{dtype:s}=r;if("complex64"===s){if("complex64"===i.dtype)return iB({inputs:{x:i},backend:a});let t=od(i.shape),n=e({inputs:{x:i},backend:a,attrs:{dtype:"float32"}}),r=oB({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===i.dtype){let t=YV({inputs:{input:i},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:s}});return a.disposeData(t.dataId),n}if(!Sr.hasEncodingLoss(i.dtype,s)){let e=iB({inputs:{x:i},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(a.shouldExecuteOnCPU([i])){let e=a.tensorMap.get(i.dataId).values,[t,n,r]=cB(e,i.shape,i.dtype,s);return a.makeTensorInfo(t,n,r)}if("int32"===s)return function(e,t){let n=new uB(e.shape,FW.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(i,a);if("bool"===s){let e=a.makeTensorInfo([],"bool",Sr.getTypedArrayFromDType("bool",1)),t=KV({inputs:{a:i,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},eU=dB({opType:FW.CEIL,cpuKernelImpl:fB}),tU={kernelName:At,backendName:"webgpu",kernelFunc:eU},nU=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`\n      ${uW("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          var clampedValue = clamp(\n              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));\n          clampedValue = select(clampedValue, value, isnanVec4(value));\n          setOutputAtIndex(index, clampedValue);\n        }\n      }\n    `}},aU=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`\n      ${uW("index")} {\n        if(index < uniforms.size) {\n          let value = getAByOutputIndex(index);\n          if (isnan(value)) {\n            setOutputAtIndex(index, value);\n            return;\n          }\n          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    `}};var rU={kernelName:xt,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{clipValueMin:s,clipValueMax:o}=r,l=[{type:"float32",data:[s]},{type:"float32",data:[o]}];return t=Sr.sizeFromShape(i.shape)%4===0?new nU(i.shape):new aU(i.shape),a.runWebGPUProgram(t,[i],i.dtype,l)}},iU=class{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let re = abs(getRealByOutputIndex(index));\n        let im = abs(getImagByOutputIndex(index));\n        let mx = max(re, im);\n\n        // The length function in wgsl may be not underflow-safe on some GPUs.\n        // So the safe solution is to ensure underflow-safety in all cases.\n        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));\n      }\n    }\n  `}};function sU(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var oU={kernelName:vt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.tensorMap.get(a.dataId),i=new iU(a.shape),s=[sU(a,r.complexTensorInfos.real),sU(a,r.complexTensorInfos.imag)];return n.runWebGPUProgram(i,s,s[0].dtype)}},lU=class{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=Jf.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let a=1;a<this.offsetLength;a++)e.push(`else if (yC < uniforms.offset${[a]}){ setOutputAtCoords(coords.x, coords.y, getT${a}(yR, yC - uniforms.offset${a-1})); }`);let t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`\n      ${uW("index")} {\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}};function uU(e){let{inputs:t,backend:n}=e,{input:a}=t;return iB({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}var dU={kernelName:hn,backendName:"webgpu",kernelFunc:uU};function pU(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map(e=>YV({inputs:{input:e},backend:n})),r=e.map(e=>uU({inputs:{input:e},backend:n})),i=pU(a,t,n),s=pU(r,t,n),o=oB({inputs:{real:i,imag:s},backend:n});return a.forEach(e=>n.disposeData(e.dataId)),r.forEach(e=>n.disposeData(e.dataId)),n.disposeData(i.dataId),n.disposeData(s.dataId),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map(e=>{let a=[-1,Sr.sizeFromShape(e.shape.slice(t))];return QW({inputs:{x:e},backend:n,attrs:{shape:a}})}),i=r.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),s=Jf.computeOutShape(r.map(e=>e.shape),1),o=1===r[0].shape[0],l=mB(i,s,a,o),u=Jf.computeOutShape(e.map(e=>e.shape),t),d=n.makeTensorInfo(u,a,l);return r.forEach(e=>n.disposeData(e.dataId)),d}let i=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>i){let a=[];for(let s=0;s<e.length;s+=i){let r=e.slice(s,s+i);a.push(pU(r,t,n))}let r=pU(a,t,n);for(let e of a)n.disposeData(e.dataId);return r}let{tensors2D:s,outShape:o}=function(e,t,n){let a=Jf.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>QW({inputs:{x:e},backend:n,attrs:{shape:[Sr.sizeFromShape(e.shape.slice(0,t)),Sr.sizeFromShape(e.shape.slice(t))]}})),outShape:a}}(e,t,n),l=s.map(e=>e.shape),u=new lU(l),d=[],p=new Array(l.length-1);if(p.length>0){p[0]=l[0][1],d.push({type:"int32",data:[p[0]]});for(let e=1;e<p.length;e++)p[e]=p[e-1]+l[e][1],d.push({type:"int32",data:[p[e]]})}let h=n.runWebGPUProgram(u,s,s[0].dtype,d);s.forEach(e=>n.disposeData(e.dataId));let c=QW({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeData(h.dataId),c}function hU(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,i=Sr.parseAxisParam(r,t[0].shape)[0],s=t.map(e=>e.shape);Jf.assertParamsConsistent(s,i);let o=Jf.computeOutShape(t.map(e=>e.shape),i);if(0===Sr.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter(e=>Sr.sizeFromShape(e.shape)>0);return 1===l.length?iB({inputs:{x:l[0]},backend:n}):pU(l,i,n)}var cU={kernelName:wt,backendName:"webgpu",kernelFunc:hU};var fU=class{constructor(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=IW(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=SW(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),r&&(this.variableNames.push("bias"),this.variableComponents.push(4)),s&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=r,this.activation=i,this.hasPreluActivationWeights=s,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=a%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?VW(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):GW(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`\n    ${function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:null,s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:4,l=arguments.length>8&&void 0!==arguments[8]?arguments[8]:4,u=arguments.length>9&&void 0!==arguments[9]?arguments[9]:4,d=e?"\n      let coord = vec4<i32>(batch, xRow, xCol, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, xRow, xCol);\n      ",p=e?"\n      let coords = vec4<i32>(\n        batch,\n        row / outWidth,\n        row % outWidth,\n        col);\n      ":"\n      let coords = vec4<i32>(\n        batch,\n        row,\n        col / outWidth,\n        col % outWidth);\n      ",h=e?"uniforms.xShape[1]":"uniforms.xShape[2]",c=e?"uniforms.xShape[2]":"uniforms.xShape[3]",f=e?"row":"col",m=e?"col":"row",g=`\n      let inChannels = uniforms.wShape[2];\n      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n      let outRow = ${f} / outWidth;\n      let outCol = ${f} % outWidth;\n\n      let WRow = ${m} / (uniforms.filterDims[1] * inChannels);\n      let WCol = ${m} / inChannels % uniforms.filterDims[1];\n      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];\n      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];\n      let xCh = ${m} % inChannels;\n      var resData = ${sW(o)}(0.0);\n      // The bounds checking is always needed since we use it to pad zero for\n      // the 'same' padding type.\n      if (xRow >= 0 && xRow < ${h} && xCol >= 0 && xCol < ${c}) {\n        ${d}\n        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);\n        ${(e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}\n      }\n      return resData;`,y=e?t&&a?`\n      ${g}`:`\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        ${g}\n      }\n      return ${sW(o)}(0.0);`:a&&n?`\n      ${g}`:`\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {\n        ${g}\n      }\n      return ${sW(o)}(0.0);`,A=`${(e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(l)}`,x=sW(u),b=sW(e?o:l),v=sW(e?l:o);return`\n      ${zW(i,s,4===u,4)}\n      fn mm_readA(batch: i32, row : i32, col : i32) -> ${b} {\n        ${e?y:A}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> ${v} {\n        ${e?A:y}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${x}) {\n        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)\n        {\n        var value = valueIn;\n        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};\n        ${p}\n        ${LW(r,i)}\n        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}\n    ${e}\n  `}},mU=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`\n       ${zW(this.activation,this.hasPreluActivationWeights,!1,4)}\n       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{\n         let coords = vec4<i32>(batch, row, col, chan);\n         if (coordsInBounds4D(coords, uniforms.xShape)) {\n           return  getX(batch, row, col, chan);\n         } else {\n          return 0.0;\n         }\n       }\n       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n         let coords = vec4<i32>(row, col, xChannel, outChannel);\n         if(coordsInBounds4D(coords, uniforms.wShape)) {\n           return getW(row, col, xChannel, outChannel);\n          } else {\n            return 0.0;\n          }\n       }\n       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {\n         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}\n         if (coordsInBounds4D(coords, uniforms.outShape)) {\n           var value = valueIn;\n           ${LW(this.addBias,this.activation)}\n           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);\n         }\n       }\n       ${uW("index")} {\n         let coords = getOutputCoords();\n         let batch = coords[0];\n         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}\n         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}\n         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}\n         var acc : f32 = 0.0;\n         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];\n             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];\n             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {\n               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}\n               let f = readFilt(row, col, xChannel, outChannel);\n               acc = acc + v * f;\n             }\n           }\n         }\n         writeResult(batch, outRow, outCol, outChannel, acc);\n       }\n     `}},gU=class{constructor(e,t){this.variableNames=["x"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,\n       inChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?"coords[1]":"coords[2]",a=this.isChannelsLast?"coords[2]":"coords[1]",r=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`\n    ${uW("index")} {\n      let coords = getCoordsFromIndex(index);\n      if(index < uniforms.size) {\n        let batch = coords[0];\n        let row = ${n};\n        let col = ${a};\n        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];\n        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);\n        var value = 0.0;\n        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {\n          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -\n              uniforms.pads[1];\n          let xCol = offsetX + uniforms.dilations[1] * ((col %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n          let ch = col % uniforms.inChannels;\n          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {\n            value = ${r};\n          }\n        }\n        setOutputAtIndex(index, value);\n      }\n    }\n   `}};function yU(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function AU(e){let{x:t,filter:n,convInfo:a,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}=e,u=null!=i,d=null!=s,p="channelsLast"===a.dataFormat,h=p&&a.filterHeight===a.inHeight&&a.filterWidth===a.inWidth&&"VALID"===a.padInfo.type,c=Ve().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(h||1===a.filterHeight&&1===a.filterWidth&&1===a.dilationHeight&&1===a.dilationWidth&&1===a.strideHeight&&1===a.strideWidth&&("SAME"===a.padInfo.type||"VALID"===a.padInfo.type)))return function(e){let t,n,{x:a,filter:r,convInfo:i,backend:s,bias:o=null,preluActivationWeights:l=null,leakyreluAlpha:u=0,activation:d=null}=e,p="channelsLast"===i.dataFormat,h=!p,c=[];if(p&&i.filterHeight===i.inHeight&&i.filterWidth===i.inWidth&&"VALID"===i.padInfo.type){let e=i.inHeight*i.inWidth*i.inChannels;t=QW({inputs:{x:a},backend:s,attrs:{shape:[1,i.batchSize,e]}}),n=QW({inputs:{x:r},backend:s,attrs:{shape:[1,e,i.outChannels]}})}else t=QW({inputs:{x:a},backend:s,attrs:{shape:p?[i.batchSize,i.inHeight*i.inWidth,i.inChannels]:[i.batchSize,i.inChannels,i.inHeight*i.inWidth]}}),n=QW({inputs:{x:r},backend:s,attrs:{shape:[1,i.inChannels,i.outChannels]}});if(c.push(t),c.push(n),null!=l){let e=yU(l.shape,p);null!=e&&(l=QW({inputs:{x:l},backend:s,attrs:{shape:e}}),c.push(l))}if(null!=o){let e=yU(o.shape,p);null!=e&&(o=QW({inputs:{x:o},backend:s,attrs:{shape:e}}),c.push(o))}let f=tB({a:p?t:n,b:p?n:t,transposeA:h,transposeB:!1,backend:s,bias:o,activation:d,preluActivationWeights:l,leakyreluAlpha:u}),m=QW({inputs:{x:f},backend:s,attrs:{shape:i.outShape}});c.push(f);for(let g of c)s.disposeData(g.dataId);return m}({x:t,filter:n,convInfo:a,backend:r,bias:i,activation:l,preluActivationWeights:s,leakyreluAlpha:o});let f=Ve().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:r.thresholdToIncreaseWorkgroups,g=a.batchSize*Math.ceil(a.outHeight*a.outWidth/32)*Math.ceil(a.outChannels/32);if(Ve().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return function(e){let{x:t,filter:n,convInfo:a,backend:r,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:l=null}=e,{filterWidth:u,filterHeight:d,inChannels:p,strideWidth:h,strideHeight:c,padInfo:f,outWidth:m,outHeight:g,dilationWidth:y,dilationHeight:A,dataFormat:x}=a,b="channelsLast"===x,v=u*d*p,w=g*m,k=b?[a.batchSize,w,v]:[a.batchSize,v,w],I=new gU(k,b),S=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[c,h]},{type:"int32",data:[A,y]},{type:"int32",data:[m]},{type:"int32",data:[p*u]},{type:"int32",data:[p]}],N=r.runWebGPUProgram(I,[t],t.dtype,S),C=[];C.push(N);let T=QW({inputs:{x:n},backend:r,attrs:{shape:[1,v,-1]}});if(C.push(T),null!=s){let e=yU(s.shape,b);null!=e&&(s=QW({inputs:{x:s},backend:r,attrs:{shape:e}}),C.push(s))}if(null!=i){let e=yU(i.shape,b);null!=e&&(i=QW({inputs:{x:i},backend:r,attrs:{shape:e}}),C.push(i))}let R=tB({a:b?N:T,b:b?T:N,transposeA:!b,transposeB:!1,backend:r,bias:i,activation:l,preluActivationWeights:s,leakyreluAlpha:o}),E=QW({inputs:{x:R},backend:r,attrs:{shape:a.outShape}});C.push(R);for(let $ of C)r.disposeData($.dataId);return E}({x:t,filter:n,convInfo:a,backend:r,bias:i,preluActivationWeights:s,leakyreluAlpha:o,activation:l});let y,A=[a.padInfo.top,a.padInfo.left],x=[{type:"int32",data:[a.filterHeight,a.filterWidth]},{type:"int32",data:[...A]},{type:"int32",data:[a.strideHeight,a.strideWidth]},{type:"int32",data:[a.dilationHeight,a.dilationWidth]}];if(c)y=new mU(a,u,l,d);else{let e=p?a.outHeight*a.outWidth:a.outChannels,t=p?a.outChannels:a.outHeight*a.outWidth,n=a.filterHeight*a.filterWidth*a.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]});let i=r.adapterInfo.isIntel();y=new fU(a,e,t,n,u,l,d,i)}let b=[],v=[t,n];u&&(!p&&1===i.shape.length&&(i=QW({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}}),b.push(i)),v.push(i)),d&&(!p&&1===s.shape.length&&(s=QW({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),b.push(s)),v.push(s)),"leakyrelu"===l&&(x.push({type:"float32",data:[o]}),y.uniforms+=" alpha : f32,");let w=r.runWebGPUProgram(y,v,t.dtype,x);for(let k of b)r.disposeData(k.dataId);return w}var xU={kernelName:kt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=n,p=Jf.convertConv2DDataFormat(l);return AU({x:r,filter:i,convInfo:Jf.computeConv2DInfo(r.shape,i.shape,s,u,o,d,!1,p),backend:a})}},bU=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1,a=`\n    ${uW()} {\n      let batch = i32(globalId.z) / uniforms.outShape[1];\n      let r = i32(globalId.z) % uniforms.outShape[1];\n      let c = i32(globalId.y) * ${this.workPerThread};\n      let d1 = i32(globalId.x) * 4;\n\n      let dyCorner = vec2<i32>(r, c) - uniforms.pads;\n\n      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n      // ? = to be determined. : = across all values in that axis.\n      var dotProd: array<vec4<f32>, ${this.workPerThread}>;\n      for (var i = 0; i < ${this.workPerThread}; i++) {\n        dotProd[i] = vec4<f32>(0.0);\n      }\n      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);\n        let wRPerm = uniforms.filterDims.x - 1 - wR;\n        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||\n            fract(dyR) > 0.0) {\n          continue;\n        }\n        let idyR = i32(dyR);\n\n        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);\n          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);\n          let wCPerm = uniforms.filterDims.y - 1 - wC;\n          var bDyCVal = true;\n          var bDyCVal2 = true;\n          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC) > 0.0) {\n            bDyCVal = false;\n          }\n          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||\n              fract(dyC2) > 0.0) {\n            bDyCVal2 = false;\n          }\n\n          let idyC = i32(dyC);\n          let idyC2 = i32(dyC2);\n          if (bDyCVal && bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n              xValue = getDy(batch, idyR, idyC2, d2);\n              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),\n                                                  dot(xValue, wValue1),\n                                                  dot(xValue, wValue2),\n                                                  dot(xValue, wValue3));\n            }\n          } else if (bDyCVal) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[0] = dotProd[0] + tmpval;\n            }\n          } else if (bDyCVal2) {\n            let d2Length = uniforms.outBackprop[3];\n            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {\n              let wValue0 = getW(wRPerm, wCPerm, d1, d2);\n              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);\n              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);\n              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);\n              var xValue =  getDy(batch, idyR, idyC2, d2);\n              let tmpval = vec4<f32>(dot(xValue, wValue0),\n                                     dot(xValue, wValue1),\n                                     dot(xValue, wValue2),\n                                     dot(xValue, wValue3));\n              dotProd[1] = dotProd[1] + tmpval;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n        let coords = vec4<i32>(batch, r, c + i, d1);\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n        }\n      }\n    }\n    `;return this.isVec4?`\n    ${a}\n    `:`\n    ${uW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${n}];\n\n        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};\n              let wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd = dotProd + xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},vU=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`\n    ${uW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let d2 = coords[3];\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b = b + 1) {\n          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              if (${this.isChannelsLast}) {\n                let dyValue = getDy(b, yR, yC, d2);\n                let xValue = getX(b, xR, xC, d1);\n                dotProd = dotProd + xValue * dyValue;\n              } else {\n                let dyValue = getDy(b, d2, yR, yC);\n                let xValue = getX(b, d1, xR, xC);\n                dotProd = dotProd + xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},wU=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,\n       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`\n    ${uW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wF = coords.x;\n        let wR = coords.y;\n        let wC = coords.z;\n        let d1 = coords.w;\n        let d2 = coords.u;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yF = 0; yF < uniforms.outDepth; yF++) {\n            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];\n            if (xF < 0 || xF >= uniforms.inDepth) {\n              continue;\n            }\n\n            for (var yR = 0; yR < uniforms.outHeight; yR++) {\n              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];\n              if (xR < 0 || xR >= uniforms.inHeight) {\n                continue;\n              }\n\n              for (var yC = 0; yC < uniforms.outWidth; yC++) {\n                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];\n                if (xC < 0 || xC >= uniforms.inWidth) {\n                  continue;\n                }\n\n                let dyValue = getDy(b, yF, yR, yC, d2);\n                let xValue = getX(b, xF, xR, xC, d1);\n                dotProd += xValue * dyValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}},kU=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`\n    ${uW("index")} {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let d1 = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyFCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);\n          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {\n            continue;\n          }\n          let idyF = i32(dyF);\n\n          let wFPerm = uniforms.filterDims[0] - 1 - wF;\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            let wRPerm = uniforms.filterDims[1] - 1 - wR;\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let wCPerm = uniforms.filterDims[2] - 1 - wC;\n\n              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {\n                let xValue = getDy(batch, idyF, idyR, idyC, d2);\n                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n  `}};var IU={kernelName:It,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=a,p=Jf.convertConv2DDataFormat(l),h=Jf.computeConv2DInfo(r.shape,d,s,1,o,u,!1,p),c=new vU(h),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]}];return n.runWebGPUProgram(c,[r,i],r.dtype,f)}};var SU=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,Sr.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=IW(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=SW(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?VW(this.elementsPerThread,this.workgroupSize):GW(this.elementsPerThread,this.workgroupSize);return`\n    ${function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:4,t=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n        \n      let outRow = row / uniforms.outShape[2];\n      let outCol = row % uniforms.outShape[2];\n\n      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n        return ${sW(e)}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n        return ${sW(e)}(0.0);\n      }\n      let coord = vec4<i32>(\n          batch,\n          i32(xR),\n          i32(xC),\n          col % uniforms.outBackprop[3]);\n      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];\n      }\n      return ${sW(e)}(0.0);`;return`\n  fn mm_readA(batch: i32, row : i32, col : i32) -> ${sW(e)} {\n    ${t}\n  }\n\n  fn mm_readB(batch: i32, row : i32, col : i32) -> ${sW(e)} {\n    let coordX = uniforms.filterDims.x - 1 -\n        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let coordY = uniforms.filterDims.y - 1 -\n        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n        coordX >= 0 && coordY >= 0) {\n      let rowInner = row % uniforms.outBackprop[3];\n      let coord = vec4<i32>(coordX, coordY, col, rowInner);\n      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return"\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];\n            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];\n            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];\n            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];\n            return vec4<f32>(v0, v1, v2, v3);\n            ";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(e)}\n    }\n    return ${sW(e)}(0.0);\n  }\n\n  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${sW(e)}) {\n    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;\n    }\n  }`}(this.isVec4?4:1)}\n    ${e}\n    `}};var NU={kernelName:St,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{dy:i,filter:s}=n,{inputShape:o,strides:l,pad:u,dataFormat:d,dimRoundingMode:p}=r,h=Jf.convertConv2DDataFormat(d),c=Jf.computeConv2DInfo(o,s.shape,l,1,u,p,!1,h),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}];if(Ve().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==c.dataFormat)t=new bU(c);else{t=new SU(c);let e=c.inHeight*c.inWidth,n=c.inChannels,a=c.filterHeight*c.filterWidth*c.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[n]},{type:"uint32",data:[a]})}return a.runWebGPUProgram(t,[i,s],"float32",f)}},CU=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords.x;\n        let d2 = coords.u;\n\n        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;\n        let xFCorner = xFRCCorner.x;\n        let xRCorner = xFRCCorner.y;\n        let xCCorner = xFRCCorner.z;\n\n        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;\n        let inputDepthVec4Remainder = uniforms.xShape.u % 4;\n\n        var dotProd = 0.0;\n        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {\n          let xF = xFCorner + wF * uniforms.dilations[0];\n          if (xF < 0 || xF >= uniforms.xShape.y) {\n            continue;\n          }\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let xR = xRCorner + wR * uniforms.dilations[1];\n            if (xR < 0 || xR >= uniforms.xShape.z) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let xC = xCCorner + wC * uniforms.dilations[2];\n              if (xC < 0 || xC >= uniforms.xShape.w) {\n                continue;\n              }\n\n              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {\n                let xValues = vec4<f32>(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                let wValues = vec4<f32>(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (inputDepthVec4Remainder == 1) {\n                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2);\n              } else if (inputDepthVec4Remainder == 2) {\n                let xValues = vec2<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)\n                );\n                let wValues = vec2<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (inputDepthVec4Remainder == 3) {\n                let xValues = vec3<f32>(\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)\n                );\n                let wValues = vec3<f32>(\n                  getW(wF, wR, wC, inputDepthNearestVec4, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),\n                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }`}};var TU={kernelName:Nt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=Jf.computeConv3DInfo(r.shape,i.shape,s,l,o),d=[u.padInfo.front,u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationDepth,u.dilationHeight,u.dilationWidth]}],h=new CU(u),c=yi(r.dtype,i.dtype);return n.runWebGPUProgram(h,[r,i],c,p)}};var RU={kernelName:Ct,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,pad:o,filterShape:l}=a,u=Jf.computeConv3DInfo(r.shape,l,s,1,o),d=new wU(u),p=[{type:"int32",data:[u.padInfo.front,u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.batchSize]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.inDepth]},{type:"int32",data:[u.inHeight]},{type:"int32",data:[u.inWidth]}];return n.runWebGPUProgram(d,[r,i],i.dtype,p)}};var EU,$U={kernelName:Tt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,pad:o,inputShape:l}=a,u=Jf.computeConv3DInfo(l,i.shape,s,1,o),d=new kU(u),p=[{type:"int32",data:[u.filterDepth,u.filterHeight,u.filterWidth]},{type:"int32",data:[u.filterDepth-1-u.padInfo.front,u.filterHeight-1-u.padInfo.top,u.filterWidth-1-u.padInfo.left]},{type:"int32",data:[u.strideDepth,u.strideHeight,u.strideWidth]},{type:"int32",data:[u.outDepth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"int32",data:[u.outChannels]}];return n.runWebGPUProgram(d,[r,i],r.dtype,p)}},MU={kernelName:"Cos",backendName:"webgpu",kernelFunc:dB({opType:FW.COS})},FU=dB({opType:FW.COSH}),_U={kernelName:Et,backendName:"webgpu",kernelFunc:FU},PU=class{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,s,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${i});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${a};\n        let width_scale = ${s};\n        let in_y = ${r};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputAtIndex(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputAtIndex(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    }\n    `}},OU={kernelName:Ft,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:i,boxInd:s}=t,{cropSize:o,method:l,extrapolationValue:u}=a,d=new PU(r.shape[3],i.shape,o,l),p=[{type:"float32",data:[u]}];return n.runWebGPUProgram(d,[r,i,s],"float32",p)}};!function(e){e.Prod="*",e.Sum="+"}(EU||(EU={}));var DU=class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=n,this.reverse=a,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===EU.Prod?"1.0":"0.0",n=this.exclusive?t:`getX(${zU(e,"coords",this.op)})`,a=this.outputShape[this.outputShape.length-1],r="",i="";return this.exclusive?(r=this.reverse?"end != "+(a-1):"end != 0",i=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${a}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`\n      ${uW("index")} {\n       if (index < uniforms.size) {\n         var coords = getCoordsFromIndex(index);\n\n         let end = ${LU(e,"coords",this.op)};\n         var val = ${n};\n         let pow2 = i32(pow(2.0, uniforms.index));\n         if (${r}) {\n           let idx = ${i};\n           ${LU(e,"coords",this.op)} = idx;\n           val ${this.op}= getX(${zU(e,"coords",this.op)});\n         }\n         setOutputAtIndex(index, val);\n       }\n      }\n    `}};function zU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function LU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function WU(e,t,n,a,r,i){let s=t.shape.length,o=Jf.getAxesPermutation([a],s),l=t;null!=o&&(l=rV({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=Jf.getInnerMostAxes(1,s)[0];if(u!==s-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let d=l.shape[u],p=iB({inputs:{x:l},backend:n});for(let h=0;h<=Math.ceil(Math.log2(d))-1;h++){let t=new DU(e,l.shape,!1,i),a=p,r=[{type:"float32",data:[h]}];p=n.runWebGPUProgram(t,[p],p.dtype,r),n.disposeData(a.dataId)}if(r){let t=new DU(e,l.shape,r,i),a=p,s=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(t,[p],p.dtype,s),n.disposeData(a.dataId)}if(null!=o){let e=rV({inputs:{x:p},backend:n,attrs:{perm:Jf.getUndoAxesPermutation(o)}});return n.disposeData(p.dataId),n.disposeData(l.dataId),e}return p}var BU={kernelName:$t,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return WU(EU.Prod,r,n,i,s,o)}};var VU={kernelName:Mt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,exclusive:s,reverse:o}=a;return WU(EU.Sum,r,n,i,s,o)}};var UU={kernelName:_t,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:i}=t,{size:s,binaryOutput:o}=a,l=1===r.shape.length,u=Sr.sizeFromShape(i.shape)>0,d=i.dtype,p=l?[r.shape[0]]:[r.shape[0],r.shape[1]],h=YW({backend:n,attrs:{shape:l?[s]:[r.shape[0],s],value:0,dtype:d}}),c=new HV(p,u,o),f=[{type:"int32",data:[s]}],m=u?[r,i]:[r];return n.runWebGPUProgram(c,m,d,f,h)}},GU=class{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputAtIndex(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};var HU={kernelName:Pt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:i,dataFormat:s}=a,o=r.shape[0],l=("NHWC"===s?r.shape[1]:r.shape[2])*i,u=("NHWC"===s?r.shape[2]:r.shape[3])*i,d=("NHWC"===s?r.shape[3]:r.shape[1])/(i*i),p=[{type:"int32",data:[i]}],h=new GU("NHWC"===s?[o,l,u,d]:[o,d,l,u],s);return n.runWebGPUProgram(h,[r],r.dtype,p)}},jU=class{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null,i=arguments.length>5&&void 0!==arguments[5]&&arguments[5];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=a,this.activation=r,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],n=this.workgroupSize[1]+this.filterHeight-1,a=this.workgroupSize[0]+this.filterWidth-1;return`\n      ${zW(this.activation,this.hasPreluActivation,!1,4)}\n\n      var<workgroup> mm_Asub : array<array<f32, ${a}>, ${n}>;\n      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;\n      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {\n        var value = 0.0;\n        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])\n        {\n          value = getX(batch, channel, row, col);\n        }\n        return value;\n      }\n\n      ${uW()} {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;\n        let channelMul = uniforms.wShape[3];\n        let d1 = coords[1] / channelMul;\n        let q = coords[1] % channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n\n        let localRow = i32(localId.y);\n        let localCol = i32(localId.x);\n\n        // Load one tile of X into local memory.\n        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workgroupSize[1]}) {\n          for (var inputCol = localCol; inputCol < ${a}; inputCol = inputCol + ${this.workgroupSize[0]}) {\n            let rowOffset = inputRow - localRow;\n            let colOffset = inputCol - localCol;\n            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);\n          }\n        }\n\n        // Load one tile of W into local memory.\n        var wIndex = i32(localIndex);\n        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}\n\n        {\n          let wRow = wIndex / ${this.filterWidth};\n          let wCol = wIndex % ${this.filterWidth};\n          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);\n        }\n\n        workgroupBarrier();\n\n        var value = 0.0;\n        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {\n          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {\n            let xVal = mm_Asub[localRow + wR][localCol + wC];\n            let wVal = mm_Bsub[wR][wC];\n            value = fma(xVal, wVal, value);\n          }\n        }\n        ${LW(this.addBias,this.activation)}\n        if (coordsInBounds4D(coords, uniforms.outShape)) {\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}},qU=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let r=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=NW(r),this.dispatch=wW(this.dispatchLayout,r,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),Sr.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,n=this.convInfo.strideWidth;return`\n      ${zW(this.activation,this.hasPreluActivation,!0,4)}\n      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {\n        var value = vec4<f32>(0.0);\n        if (col >=0 && col < uniforms.inDims[1]) {\n          value = getX(batch, row, col, channel);\n        }\n        return value;\n      }\n\n      ${uW("index")} {\n        let width0 = uniforms.outShape[3] / ${this.outputComponent};\n        let d1 = (index % width0) * ${this.outputComponent};\n        var index1 = index / width0;\n        let width1 = uniforms.virtualWidth / ${this.workPerThread};\n        let c = (index1 % width1) * ${this.workPerThread};\n        index1 = index1 / width1;\n        let r = index1 % uniforms.outShape[1];\n        let batch = index1 / uniforms.outShape[1];\n\n        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${n}) - uniforms.pads;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n        var xVals : array<vec4<f32>, ${e}>;\n        var dotProd : array<vec4<f32>, ${this.workPerThread}>;\n        for (var i = 0; i < ${this.workPerThread}; i++) {\n          dotProd[i] = vec4<f32>(0.0);\n        }\n\n        // Use constant instead of uniform can give better performance.\n        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {\n          let xR = xRCorner + wR;\n          if (xR >=0 && xR < uniforms.inDims[0]) {\n            for (var i = 0; i < ${e}; i++) {\n              xVals[i] = readX(batch, xR, xCCorner + i, d1);\n            }\n            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {\n              let wValue = getW(wR, wC, d1, 0);\n              for (var i = 0; i < ${this.workPerThread}; i++) {\n                dotProd[i] = fma(xVals[i * ${n} + wC], wValue, dotProd[i]);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d1);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            var value = dotProd[i];\n            ${LW(this.addBias,this.activation)}\n            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n          }\n        }\n      }\n    `}},XU=class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,\n      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`\n      ${zW(this.activation,this.hasPreluActivation,!1,4)}\n\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;\n          let d2 = coords[${this.isChannelsLast?3:1}];\n          let channelMul = uniforms.wShape[3];\n          let d1 = d2 / channelMul;\n          let q = d2 % channelMul;\n\n          let inputRowStart = xRCCorner.x;\n          let inputColStart = xRCCorner.y;\n          let inputRowEnd = inputRowStart + uniforms.filterHeight *\n              uniforms.dilations[0];\n          let inputColEnd = inputColStart + uniforms.filterWidth *\n              uniforms.dilations[1];\n\n          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get\n          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all\n          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.\n          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.\n          var value = 0.0;\n\n          // Extract if checking out of for loop for performance.\n          if (inputRowStart >= 0 && inputColStart >= 0 &&\n            inputRowEnd < uniforms.inDims[0] &&\n                inputColEnd < uniforms.inDims[1]) {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            } else {\n              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n                let xR = inputRowStart + wR * uniforms.dilations[0];\n\n                if (xR < 0 || xR >= uniforms.inDims[0]) {\n                  continue;\n                }\n\n                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                  let xC = inputColStart + wC * uniforms.dilations[1];\n\n                  if (xC < 0 || xC >= uniforms.inDims[1]) {\n                    continue;\n                  }\n\n                  let xVal = ${e};\n                  let wVal = getW(wR, wC, d1, q);\n                  value = value + xVal * wVal;\n                }\n              }\n            }\n            ${LW(this.addBias,this.activation)}\n          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n        }\n      }\n    `}};var KU={kernelName:Ot,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=a,p=Jf.convertConv2DDataFormat(l),h=u;null==h&&(h=[1,1]);let c,f=Jf.computeConv2DInfo(r.shape,i.shape,s,h,o,d,!0,p),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],g="channelsLast"===f.dataFormat;return!g&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?c=new jU(f.outShape,f.filterHeight,f.filterWidth):g&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4===0?(c=new qU(f),m.push({type:"int32",data:[c.virtualWidth]})):(c=new XU(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(c,[r,i],r.dtype,m)}},ZU=class{constructor(e){this.variableNames=["x","dy"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,\n      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let wR = coords[0];\n        let wC = coords[1];\n        let d1 = coords[2];\n        let dm = coords[3];\n        let d2 = d1 * uniforms.channelMul + dm;\n\n        var dotProd = 0.0;\n        for (var b = 0; b < uniforms.batchSize; b++) {\n          for (var yR = 0; yR < uniforms.outHeight; yR++) {\n            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];\n\n            if (xR < 0 || xR >= uniforms.inHeight) {\n              continue;\n            }\n\n            for (var yC = 0; yC < uniforms.outWidth; yC++) {\n              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];\n\n              if (xC < 0 || xC >= uniforms.inWidth) {\n                continue;\n              }\n\n              let dyValue = getDy(b, yR, yC, d2);\n              let xValue = getX(b, xR, xC, d1);\n              dotProd += xValue * dyValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},YU=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32, channelMul : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d1 = coords[3];\n        let dyCorner = coords.yz - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n\n          let idyR = i32(dyR);\n          let wRPerm = uniforms.filterDims[0] - 1 - wR;\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n\n            let idyC = i32(dyC);\n            let wCPerm = uniforms.filterDims[1] - 1 - wC;\n\n            for (var dm = 0; dm < uniforms.channelMul; dm++) {\n              let d2 = d1 * uniforms.channelMul + dm;\n              let xValue = getDy(batch, idyR, idyC, d2);\n              let wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}};var JU={kernelName:Dt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=a,p=Jf.computeConv2DInfo(r.shape,d,s,o,l,u,!0),h=new ZU(p),c=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outChannels/p.inChannels]}];return n.runWebGPUProgram(h,[r,i],"float32",c)}};var QU={kernelName:zt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:i}=t,{strides:s,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=a,p=Jf.computeConv2DInfo(d,i.shape,s,o,l,u,!0),h=new YU(p),c=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.outChannels/p.inChannels]}];return n.runWebGPUProgram(h,[r,i],r.dtype,c)}},eG=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);\n          setOutputAtIndex(index, value);\n        }\n      }\n    `}};var tG={kernelName:Lt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],i=Sr.sizeFromShape(a.shape),s=QW({inputs:{x:a},backend:n,attrs:{shape:[i]}}),o=new eG(i),l=n.runWebGPUProgram(o,[s],s.dtype),u=QW({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeData(s.dataId),n.disposeData(l.dataId),u}},nG=class{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`\n       ${uW("index")} {\n         if (index < uniforms.size) {\n           let neg_infinity = -3.4e38;\n           let coords = getOutputCoords();\n           let batch = coords.x;\n           let d1 = coords.w;\n           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;\n           let hBeg = outTopLeftCorner.x;\n           let wBeg = outTopLeftCorner.y;\n\n           var curVal = neg_infinity;\n           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {\n             let hIn = hBeg + h * uniforms.dilations[0];\n\n             if (hIn >= 0 && hIn < uniforms.xShape[1]) {\n               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {\n                 let wIn = wBeg + w * uniforms.dilations[1];\n\n                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {\n                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);\n                   if (val > curVal) {\n                     curVal = val;\n                   }\n                 }\n               }\n             }\n           }\n\n           setOutputAtIndex(index, curVal);\n         }\n       }\n     `}};var aG={kernelName:Wt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i}=t,{strides:s,pad:o,dilations:l}=a,u=Jf.computeDilation2DInfo(r.shape,i.shape,s,o,"NHWC",l),d=[u.padInfo.top,u.padInfo.left],p=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]}],h=new nG(u);return n.runWebGPUProgram(h,[r,i],r.dtype,p)}},rG=class{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(e.outShape),this.dispatch=wW(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw new Error(`Dilation2DBackpropInput only supports float32 and int32\n          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`\n       ${uW("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var xRMax = 0;\n           var xCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     xRMax = xR;\n                     xCMax = xC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.xShape[3] *\n               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));\n           let value = getDy(b, r, c, d);\n           ${rW("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}},iG=class{constructor(e,t,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=NW(e.outShape),this.dispatch=wW(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`Dilation2DBackpropFilter only supports float32 and int32\n          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`\n       ${uW("index")} {\n         if (index < uniforms.dySize) {\n           let coords = getDyCoordsFromIndex(index);\n           let b = coords[0];\n           let r = coords[1];\n           let c = coords[2];\n           let d = coords[3];\n\n           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;\n           var curVal = -3.4e38;  // neg_infinity\n           var wRMax = 0;\n           var wCMax = 0;\n\n           // In the case of multiple argmax branches, we only back-propagate\n           // along the last branch, i.e., the one with largest value of\n           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling\n           // backward routines.\n           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {\n             let xR = dyCorner.x + wR * uniforms.dilations[0];\n\n             if (xR >= 0 && xR < uniforms.xShape[1]) {\n               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {\n                 let xC = dyCorner.y + wC * uniforms.dilations[1];\n\n                 if (xC >= 0 && xC < uniforms.xShape[2]) {\n                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);\n                   if (val > curVal) {\n                     curVal = val;\n                     wRMax = wR;\n                     wCMax = wC;\n                   }\n                 }\n               }\n             }\n           }\n\n           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);\n           let value = getDy(b, r, c, d);\n           ${rW("&result[flatIndexIn]","value",this.type)}\n         }\n       }\n     `}};var sG={kernelName:Vt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a,d=Jf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=i.dtype,h=new iG(d,i.shape,p),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[Sr.sizeFromShape(d.outShape)]}],f=YW({backend:n,attrs:{shape:i.shape,value:0,dtype:p}});return n.runWebGPUProgram(h,[r,i,s],p,c,f)}};var oG={kernelName:Bt,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,dy:s}=t,{strides:o,pad:l,dilations:u}=a,d=Jf.computeDilation2DInfo(r.shape,i.shape,o,l,"NHWC",u),p=r.dtype,h=new rG(d,p),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[Sr.sizeFromShape(d.outShape)]}],f=YW({backend:n,attrs:{shape:d.inShape,value:0,dtype:p}});return n.runWebGPUProgram(h,[r,i,s],p,c,f)}},lG=class{constructor(e,t,n){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=aW.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=n,this.shaderKey=`draw_${t}_${n}`}getUserCode(){let e,t="float32"===this.type?"value":"value / 255.0";return e=`\n      if (uniforms.numChannels == 1) {\n        rgba[0] = ${t};\n        rgba[1] = ${t};\n        rgba[2] = ${t};\n      } else {\n        rgba[d] = ${t};\n      }`,`\n       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;\n       ${uW("index")} {\n         if (index < uniforms.size) {\n           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);\n           for (var d = 0; d < uniforms.numChannels; d = d + 1) {\n             let value = f32(inBuf[index * uniforms.numChannels + d]);\n             ${e}\n           }\n           rgba.x = rgba.x * rgba.w;\n           rgba.y = rgba.y * rgba.w;\n           rgba.z = rgba.z * rgba.w;\n           let coords = getCoordsFromIndex(index);\n           textureStore(outImage, vec2<i32>(coords.yx), rgba);\n         }\n       }\n      `}};var uG={kernelName:Ut,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:i,options:s}=a,[o,l]=r.shape.slice(0,2),{imageOptions:u}=s||{},d=(null==u?void 0:u.alpha)||1,p=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",h=[o,l],c=new lG(h,r.dtype,p);i.width=l,i.height=o;let f,m="webgpu",g=i.getContext(m);g||(f=new OffscreenCanvas(l,o),g=f.getContext(m));let y=3===r.shape.length?r.shape[2]:1;g.configure({device:n.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let A="int32",x=n.makeTensorInfo(h,A),b=n.tensorMap.get(x.dataId);b.resource=g.getCurrentTexture(),b.external=!0;let v=[{type:"uint32",data:[y]},{type:"float32",data:[d]}];if(n.runWebGPUProgram(c,[r],A,v,x),f){let e=i.getContext("2d");if(!e)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(f,0,0)}return n.disposeData(x.dataId),r}},dG=pB({opType:EW.MUL,cpuKernelImpl:$B,supportsComplex:!0}),pG={kernelName:Gn,backendName:"webgpu",kernelFunc:dG};function hG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return lV(r,i,s,"sum",n)}var cG={kernelName:"Sum",backendName:"webgpu",kernelFunc:hG};var fG={kernelName:Ht,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,i=t,{allDims:s,summedDims:o,idDims:l}=Jf.decodeEinsumEquation(r,i.length);Jf.checkEinsumDimSizes(s.length,l,i);let{path:u,steps:d}=Jf.getEinsumComputePath(o,l),p=d.length,h=null,c=s.length,f=[];for(let m=0;m<p;++m){for(let e of d[m]){let t,{permutationIndices:a,expandDims:r}=Jf.getEinsumPermutation(c,l[e]);Jf.isIdentityPermutation(a)?t=i[e]:(t=rV({inputs:{x:i[e]},backend:n,attrs:{perm:a}}),f.push(t));let s=t.shape.slice();for(let e=0;e<r.length;++e)s.splice(r[e],0,1);Sr.arraysEqual(t.shape,s)||(t=QW({inputs:{x:t},backend:n,attrs:{shape:s}}),f.push(t)),null===h?h=t:(h=dG({inputs:{a:t,b:h},backend:n}),f.push(h))}m<p-1&&(u[m]>=0&&(h=hG({inputs:{x:h},backend:n,attrs:{axis:u[m]-(s.length-c),keepDims:!1}}),f.push(h)),c--)}for(let m of f)m!==h&&n.disposeData(m.dataId);return h}},mG={kernelName:"Elu",backendName:"webgpu",kernelFunc:dB({opType:FW.ELU})},gG={kernelName:qt,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,i=new rB(EW.ELU_DER,a.shape,r.shape);return n.runWebGPUProgram(i,[a,r],a.dtype)}},yG=pB({opType:EW.EQUAL,dtype:"bool",cpuKernelImpl:gB}),AG={kernelName:Kt,backendName:"webgpu",kernelFunc:yG},xG={kernelName:"Erf",backendName:"webgpu",kernelFunc:dB({opType:FW.ERF})},bG={kernelName:"Exp",backendName:"webgpu",kernelFunc:dB({opType:FW.EXP,cpuKernelImpl:yB,dtype:"float32"})};function vG(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:i}=t,s=i.shape.length,o=i.shape.slice(),l=r;return r<0&&(Sr.assert(-(s+1)<=r,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),l=s+r+1),o.splice(l,0,1),QW({inputs:{x:i},backend:a,attrs:{shape:o}})}var wG={kernelName:Yt,backendName:"webgpu",kernelFunc:vG},kG=dB({opType:FW.EXPM1,cpuKernelImpl:AB}),IG={kernelName:Jt,backendName:"webgpu",kernelFunc:kG},SG=class{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`\n    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {\n      ${"real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}\n    }\n\n    fn mulMatDFT(batch: i32, index: i32) -> f32 {\n      let indexRatio = f32(index) / f32(uniforms.realShape[1]);\n      let exponentMultiplierTimesIndexRatio =\n          uniforms.exponentMultiplier * indexRatio;\n\n      var result = 0.0;\n\n      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {\n        // x = (-2|2 * PI / N) * index * i;\n        let x = exponentMultiplierTimesIndexRatio * f32(i);\n        let expR = cos(x);\n        let expI = sin(x);\n        let real = getReal(batch, i);\n        let imag = getImag(batch, i);\n\n        result = result +\n            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;\n      }\n\n      return result;\n    }\n\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));\n      }\n    }\n  `}};function NG(e,t,n){let a=n.tensorMap.get(e.dataId),r=Sr.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],s=[],o=QW({inputs:{x:e},backend:n,attrs:{shape:[r/i,i]}});s.push(o);let l=o.shape,u=new SG("real",l),d=new SG("imag",l),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:l},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:l}],h=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?l[1]:1]}],c=n.runWebGPUProgram(u,p,"float32",h);s.push(c);let f=n.runWebGPUProgram(d,p,"float32",h);s.push(f);let m=oB({inputs:{real:c,imag:f},backend:n});s.push(m);let g=QW({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return s.forEach(e=>n.disposeData(e.dataId)),g}var CG,TG={kernelName:"FFT",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return NG(a,!1,n)}},RG=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputAtIndex(index, outputValue);\n        }\n      }\n    `}},EG={kernelName:tn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{image:a}=t,r=n,i=new RG(a.shape);return r.runWebGPUProgram(i,[a],a.dtype)}},$G=dB({opType:FW.FLOOR,cpuKernelImpl:xB}),MG={kernelName:nn,backendName:"webgpu",kernelFunc:$G},FG=pB({opType:EW.FLOOR_DIV,cpuKernelImpl:bB,dtype:"int32"}),_G={kernelName:an,backendName:"webgpu",kernelFunc:FG},PG=class{constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.pixelsOpType=aW.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};\n      ${uW("index")} {\n        let flatIndex = index * uniforms.numChannels;\n        if (flatIndex < uniforms.size) {\n          let coords = getCoordsFromIndex(flatIndex);\n          let values = ${e};\n          for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n            result[flatIndex + i] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}},OG={kernelName:or,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:i}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let s="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&r instanceof OffscreenCanvas,u="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,[d,p]=s?[r.videoWidth,r.videoHeight]:[r.width,r.height],h=[p,d,i],c=Ve().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,f=s||o;if(u||l||f){let e;if(c)e=n.device.importExternalTexture({source:r});else{if(f){let e=Ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==CG||e!==DG)&&(DG=e,CG=document.createElement("canvas").getContext("2d",{willReadFrequently:DG})),CG.canvas.width=d,CG.canvas.height=p,CG.drawImage(r,0,0,d,p),r=CG.canvas}let t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,a=n.textureManager.acquireTexture(h[1],h[0],"rgba8unorm",t);n.queue.copyExternalImageToTexture({source:r},{texture:a},[h[1],h[0]]),e=a}let t=Sr.sizeFromShape(h),a=Sr.computeStrides(h),s=new PG(h,i,c),o=[{type:"uint32",data:[t]},{type:"uint32",data:[i]},{type:"uint32",data:[...a]}],l=n.makeTensorInfo([p,d],"int32");n.tensorMap.get(l.dataId).resource=e;let u=n.runWebGPUProgram(s,[l],"int32",o);return n.disposeData(l.dataId),u}let m=r.data,g=m;if(null!=i&&4!==i){g=new Uint8Array(r.width*r.height*i);let e=m.length,t=0;for(let n=0;n<e;n++)n%4<i&&(g[t++]=m[n])}let y=n.makeTensorInfo(h,"int32",new Int32Array(g));return n.uploadToGPU(y.dataId),y}},DG=Ve().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");var zG=class{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],Jf.assertAndGetBroadcastShape(e,t),Jf.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=a&&(Jf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=r&&(Jf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`\n      ${uW("index")} {\n        if (index < uniforms.size)\n        {\n          let xValue = getXByOutputIndex(index);\n          let meanValue = getMeanByOutputIndex(index);\n          let varianValue = getVarianceByOutputIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}},LG={kernelName:rn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{x:r,scale:i,offset:s,mean:o,variance:l}=t,{varianceEpsilon:u}=n,d=a,p=[r,o,l],h=null;null!=s&&(h=s.shape,p.push(s));let c=null;null!=i&&(c=i.shape,p.push(i));let f=new zG(r.shape,o.shape,l.shape,h,c),m=[{type:"float32",data:[u]}];return d.runWebGPUProgram(f,p,r.dtype,m)}};var WG={kernelName:dr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:d,dilations:p,dimRoundingMode:h,activation:c,leakyreluAlpha:f}=a,m=Jf.convertConv2DDataFormat(d);return AU({x:r,filter:i,convInfo:Jf.computeConv2DInfo(r.shape,i.shape,l,p,u,h,!1,m),backend:n,bias:s,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}};var BG={kernelName:pr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:i,bias:s,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:c}=a,f=d;null==f&&(f=[1,1]),Sr.assert(Jf.eitherStridesOrDilationsAreOne(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);let m=Jf.computeConv2DInfo(r.shape,i.shape,l,f,u,p,!0),g=[r,i],y=null!=s,A=null!=o;y&&g.push(s),A&&g.push(o);let x,b=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&1===m.dilationHeight&&1===m.dilationWidth&&m.inChannels%4===0?(x=new qU(m,y,h,A),b.push({type:"int32",data:[x.virtualWidth]})):(x=new XU(m,y,h,A),b.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),"leakyrelu"===h&&(b.push({type:"float32",data:[c]}),x.uniforms+=" alpha : f32,"),n.runWebGPUProgram(x,g,"float32",b)}},VG=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${oW(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputAtIndex(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}};var UG={kernelName:on,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,i=r.shape,s=i[i.length-1],o=Sr.sizeFromShape(a.shape),[l,u,d,p]=Jf.prepareAndValidate(a,r),h=QW({inputs:{x:r},backend:n,attrs:{shape:[u,s]}}),c=QW({inputs:{x:a},backend:n,attrs:{shape:[Sr.sizeFromShape(a.shape)/d,d]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),i=vB(e,t,a.dtype,u,s,d,p,a.shape,o);return n.makeTensorInfo(l,a.dtype,i.values)}let f=new VG(s,[u,d]),m=[{type:"int32",data:[s]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[c,h],c.dtype,m),y=QW({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(h.dataId),n.disposeData(c.dataId),n.disposeData(g.dataId),y}},GG=class{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e.length;a++)2===a?n.push("indexZ"):n.push(`${t[a]}`);return n.join()}(this.aShape);return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let indexZ = i32(getIndices(resRC.x, resRC.z));\n          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);\n          setOutputAtIndex(index, inBounds * getA(${e}));\n        }\n      }\n    `}};function HG(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:i}=t,{axis:s,batchDims:o}=a,l=Sr.parseAxisParam(s,r.shape)[0],u=Jf.segment_util.collectGatherOpShapeInfo(r,i,l,o),d=Sr.sizeFromShape(i.shape),p=[],h=QW({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=QW({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,d/u.batchSize]}});p.push(h),p.push(c);let f=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])){let e=n.tensorMap.get(c.dataId).values,t=mo(c.shape,c.dtype,e),a=n.tensorMap.get(h.dataId).values,r=mo(h.shape,h.dtype,a),i=wB(r,t,f);return p.forEach(e=>n.disposeData(e.dataId)),n.makeTensorInfo(u.outputShape,i.dtype,i.values)}let m=new GG(h.shape,f),g=n.runWebGPUProgram(m,[h,c],h.dtype);p.push(g);let y=QW({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return p.forEach(e=>n.disposeData(e.dataId)),y}var jG={kernelName:sn,backendName:"webgpu",kernelFunc:HG},qG=pB({opType:EW.GREATER,cpuKernelImpl:IB,dtype:"bool"}),XG={kernelName:ln,backendName:"webgpu",kernelFunc:qG},KG=pB({opType:EW.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:kB}),ZG={kernelName:un,backendName:"webgpu",kernelFunc:KG};var YG={kernelName:pn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{input:a}=t;return NG(a,!0,n)}},JG=dB({opType:FW.IS_FINITE,dtype:"bool"}),QG={kernelName:cn,backendName:"webgpu",kernelFunc:JG},eH=dB({opType:FW.IS_INF,dtype:"bool"}),tH={kernelName:fn,backendName:"webgpu",kernelFunc:eH},nH=dB({opType:FW.IS_NAN,dtype:"bool"}),aH={kernelName:mn,backendName:"webgpu",kernelFunc:nH};var rH={kernelName:gn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:i}=a,s=[{type:"float32",data:[i]}],o=new uB(r.shape,FW.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(o,[r],"float32",s)}},iH=pB({opType:EW.LESS,dtype:"bool",cpuKernelImpl:NB}),sH={kernelName:yn,backendName:"webgpu",kernelFunc:iH},oH=pB({opType:EW.LESS_EQUAL,dtype:"bool",cpuKernelImpl:SB}),lH={kernelName:An,backendName:"webgpu",kernelFunc:oH},uH=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);\n        }\n      }\n    `}};var dH={kernelName:xn,backendName:"webgpu",kernelFunc:function(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:i}=n,s=(r-a)/(i-1),o=new uH(i),l=[{type:"float32",data:[a]},{type:"float32",data:[s]}];return t.runWebGPUProgram(o,[],"float32",l)}},pH={kernelName:"Log",backendName:"webgpu",kernelFunc:dB({opType:FW.LOG,cpuKernelImpl:CB})},hH=dB({opType:FW.LOG1P}),cH={kernelName:vn,backendName:"webgpu",kernelFunc:hH},fH=pB({opType:EW.LOGICAL_AND,dtype:"bool"}),mH={kernelName:wn,backendName:"webgpu",kernelFunc:fH},gH=dB({opType:FW.LOGICAL_NOT}),yH={kernelName:kn,backendName:"webgpu",kernelFunc:gH},AH=pB({opType:EW.LOGICAL_OR}),xH={kernelName:In,backendName:"webgpu",kernelFunc:AH},bH="\n  var powValue = 0.0;\n  let basis = uniforms.bias + uniforms.alpha * sum;\n  if (uniforms.beta == 0.5) {\n    powValue = inverseSqrt(basis);\n  } else if (uniforms.beta == 1.0) {\n    powValue = 1.0 / basis;\n  } else {\n    powValue = exp(log(basis) * (-uniforms.beta));\n  }\n",vH=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n        let d = coords[3];\n\n        let x = getX(b, r, c, d);\n        var sum = 0.0;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let idx = d + i;\n          if (idx >= 0 && idx < uniforms.xShape[3]) {\n            let z = getX(b, r, c, idx);\n            sum = sum + z * z;\n          }\n        }\n        ${bH}\n\n        setOutputAtIndex(index, x * powValue);\n      }\n    }\n  `}},wH=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,Sr.assert(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=wW(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`\n    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;\n    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};\n    const maxAllowRadius = ${this.maxAllowRadius};\n\n    ${uW()} {\n      let localDepth = i32(localId.x);\n      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;\n      let xDepth = workgroupDepth + localDepth - maxAllowRadius;\n      let b = i32(globalId.z) / uniforms.xShape[1];\n      let r = i32(globalId.z) - b * uniforms.xShape[1];\n      let c = i32(globalId.y);\n      let d = workgroupDepth + localDepth;\n\n      var x = 0.0;\n      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {\n        x = getX(b, r, c, xDepth);\n      }\n      lrnSub[localDepth] = x;\n      workgroupBarrier();\n\n      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {\n        var sum = 0.0;\n        let index = localDepth + maxAllowRadius;\n        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {\n          let z = lrnSub[index + i];\n          sum = sum + z * z;\n        }\n        ${bH}\n\n        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);\n      }\n    } `}};var kH={kernelName:"LRN",backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{depthRadius:s,bias:o,alpha:l,beta:u}=r;t=s>16?new vH(i.shape):new wH(i.shape,s);let d=[{type:"int32",data:[s]},{type:"float32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]}];return a.runWebGPUProgram(t,[i],i.dtype,d)}},IH=class{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let b = coords[0];\n        let r = coords[1];\n        let c = coords[2];\n\n        let MIN_DEPTH_BEGIN = 0;\n        let MAX_DEPTH_END = uniforms.outShape[3];\n        var result = 0.0;\n        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {\n          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);\n          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);\n\n          var norm = 0.0;\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            } else {\n              break;\n            }\n          }\n\n          norm = uniforms.alpha * norm + uniforms.bias;\n\n          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {\n            if (k < depthBegin) {\n              continue;\n            } else if (k >= depthBegin && k < depthEnd) {\n              var dyi = -2.0 * uniforms.alpha * uniforms.beta\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * uniforms.beta);\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            } else {\n              break;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, result);\n      }\n    }\n  `}};var SH={kernelName:Rn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:i,dy:s}=t,{depthRadius:o,bias:l,alpha:u,beta:d}=a,p=new IH(r.shape),h=[{type:"int32",data:[o]},{type:"float32",data:[l]},{type:"float32",data:[u]},{type:"float32",data:[d]}];return n.runWebGPUProgram(p,[r,i,s],r.dtype,h)}},NH=pB({opType:EW.MAX,cpuKernelImpl:RB}),CH={kernelName:Mn,backendName:"webgpu",kernelFunc:NH};var TH={kernelName:Fn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:l}=a;return $V(r,Jf.computePool2DInfo(r.shape,i,s,1,o,l),"max",n)}};var RH={kernelName:Pn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:i,strides:s,pad:o,dataFormat:l,dimRoundingMode:u}=a,d=Jf.computePool3DInfo(r.shape,i,s,[1,1,1],o,u,l),p=new NV(d,"max"),h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[r],r.dtype,h)}},EH=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,\n       outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords[0];\n        let d = coords[3];\n\n        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;\n        let dyRCorner = dyRCCorner.x;\n        let dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;\n        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {\n          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);\n\n          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n            continue;\n          }\n          let idyR = i32(dyR);\n\n          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {\n            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);\n\n            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n              continue;\n            }\n            let idyC = i32(dyC);\n\n            let dyValue = getDy(batch, idyR, idyC, d);\n            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            let curPosValue = wR * uniforms.filterDims[1] + wC;\n            let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}},$H=class{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,\n      outDepth : i32, outHeight : i32, outWidth : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`\n      ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n        let batch = coords.x;\n        let ch = coords.u;\n\n        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;\n        let dyDCorner = dyCorner.x;\n        let dyRCorner = dyCorner.y;\n        let dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;\n\n        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {\n          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);\n\n          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {\n            continue;\n          }\n          let idyD = i32(dyD);\n\n          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {\n            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);\n\n            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {\n              continue;\n            }\n            let idyR = i32(dyR);\n\n            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {\n              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);\n\n              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {\n                continue;\n              }\n              let idyC = i32(dyC);\n\n              let dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;\n              let mask = select(0.0, 1.0, maxPosValue == curPosValue);\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n\n        setOutputAtIndex(index, dotProd);\n      }\n    }\n    `}};var MH={kernelName:On,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i}=t,s=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=a,p=Jf.computePool3DInfo(s.shape,o,l,[1,1,1],u,d),h=new NV(p,"max",!0),c=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}],f=n.runWebGPUProgram(h,[s],"int32",c),m=new $H(p);c=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];let g=n.runWebGPUProgram(m,[r,f],s.dtype,c);return n.disposeData(f.dataId),g}};var FH={kernelName:_n,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:i,output:s}=t,o=i;RW([i,s],"maxPoolGrad");let{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=a,h=Jf.computePool2DInfo(o.shape,l,u,1,d,p),c=new SV(h,"max",!0),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]}],m=n.runWebGPUProgram(c,[o],"int32",f),g=new EH(h);f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];let y=n.runWebGPUProgram(g,[r,m],o.dtype,f);return n.disposeData(m.dataId),y}};var _H={kernelName:Dn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{filterSize:r,strides:i,pad:s,includeBatchInIndex:o}=a,{x:l}=t;Sr.assert(4===l.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);let u=[1,1];Sr.assert(Jf.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let d=Jf.computePool2DInfo(l.shape,r,i,u,s),p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],h=new SV(d,"max",!1),c=n.runWebGPUProgram(h,[l],l.dtype,p);return h=new SV(d,"max",!0,!0,o),[c,n.runWebGPUProgram(h,[l],"int32",p)]}};var PH={kernelName:"Min",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return lV(r,i,s,"min",n)}},OH=pB({opType:EW.MIN,cpuKernelImpl:EB}),DH={kernelName:Wn,backendName:"webgpu",kernelFunc:OH},zH=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]),this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((e,t)=>`uniforms.pad${t}[0]`).join(","),n=this.xShape.map((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",i=1===e?"outC":"outC[i]",s=oW(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let start = ${s}(${t});\n          let end = ${s}(${n});\n          var outC = getCoordsFromIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${i} < ${a}) {\n              ${i} = ${a} * 2 - ${i} - ${this.offset};\n            } else if(${i} >= ${r}) {\n              ${i} = (${r} - 1) * 2 - ${i} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputAtIndex(index, getX(${o}));\n        }\n      }\n    `}},LH={kernelName:Bn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{paddings:i,mode:s}=n,o=a,l=i.map(e=>({type:"int32",data:[e[0],e[1]]})),u=new zH(r.shape,i,s);return o.runWebGPUProgram(u,[r],r.dtype,l)}},WH={kernelName:"Mod",backendName:"webgpu",kernelFunc:pB({opType:EW.MOD})},BH=class{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {\n      let HASHSCALE1 = 443.8975;\n      let p = resultUV * seed;\n      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);\n      p3 = p3 + dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let coords = getOutputCoords();\n        let batch = coords[0];\n\n        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),\n            f32(coords[0]) / f32(uniforms.outShape[0]));\n        let r = random(uniforms.seed, resUV);\n        var cdf = 0.0;\n        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {\n          cdf = cdf + getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutputAtIndexI32(index, i);\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);\n      }\n    }\n  `}},VH=class{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`\n    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;\n    var<workgroup> rowMaxShared : f32;\n    var<workgroup> rowSumShared : f32;\n    const blockSize = ${this.workgroupSize[0]};\n    ${uW("index")} {\n      let row = index / blockSize;\n      let tid = i32(localId.x);\n      let cols = uniforms.outShape[1];\n\n      var threadMax = -3.402823e+38f;\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = getLogits(row, col);\n        threadMax = max(threadMax, value);\n      }\n      if (tid < cols) {\n        buf[tid] = threadMax;\n      }\n      workgroupBarrier();\n\n      var reduceSize = min(cols, blockSize);\n      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n        reduceSize = currSize + (reduceSize & 1);\n        if (tid < currSize) {\n          buf[tid] = max(buf[tid], buf[tid + reduceSize]);\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowMaxShared = buf[0];\n      }\n      workgroupBarrier();\n\n      var threadSum = 0.0;\n      for (var col = tid; col < cols; col += blockSize) {\n        let subExp = exp(getLogits(row, col) - rowMaxShared);\n        threadSum += subExp;\n      }\n      buf[tid] = threadSum;\n      workgroupBarrier();\n\n      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n        if (tid < currSize) {\n          buf[tid] = buf[tid] + buf[tid + currSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (tid == 0) {\n        rowSumShared = buf[0];\n      }\n      workgroupBarrier();\n\n      for (var col = tid; col < cols; col += blockSize) {\n        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;\n        setOutputAtCoords(row, col, value);\n      }\n  }\n    `}};function UH(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:i}=a,s=QW({inputs:{x:r},backend:n,attrs:{shape:[Sr.sizeFromShape(r.shape)/r.shape[i],r.shape[i]]}}),o=new VH(s.shape),l=n.runWebGPUProgram(o,[s],r.dtype),u=QW({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeData(s.dataId),n.disposeData(l.dataId),u}var GH={kernelName:Pa,backendName:"webgpu",kernelFunc:UH};var HH={kernelName:Un,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:i,seed:s,normalized:o}=a,l=o?r:UH({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],d=l.shape[1],p=new BH(u,i),h=[{type:"float32",data:[s]},{type:"int32",data:[d]}],c=n.runWebGPUProgram(p,[l],"int32",h);return o||n.disposeData(l.dataId),c}};var jH={kernelName:"Neg",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){let e=n.tensorMap.get(a.dataId),[t,r]=MB(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r=new uB(a.shape,FW.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}};var qH={kernelName:qn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),d=n.readSync(i.dataId),{selectedIndices:p}=sg.nonMaxSuppressionV3Impl(u,d,s,o,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}};var XH={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,d=n.readSync(r.dataId),p=n.readSync(i.dataId),h=s,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=sg.nonMaxSuppressionV5Impl(d,p,h,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},KH=class{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`\n      ${uW("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,\n                                      f32(i32(round(getX(coords.x))) == coords.y)));\n        }\n      }\n    `}};var ZH={kernelName:Yn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:i,depth:s,onValue:o,offValue:l}=a,u=Sr.sizeFromShape(r.shape),d=new KH(u,s),p=QW({inputs:{x:r},backend:n,attrs:{shape:[u]}}),h=[{type:"float32",data:[o]},{type:"float32",data:[l]}],c=n.runWebGPUProgram(d,[p],i,h);n.disposeData(p.dataId);let f=QW({inputs:{x:c},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeData(c.dataId),f}};function YH(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=YV({inputs:{input:a},backend:n}),t=YH({inputs:{x:e},backend:n}),r=uU({inputs:{input:a},backend:n}),i=YH({inputs:{x:r},backend:n}),s=oB({inputs:{real:t,imag:i},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),s}return YW({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var JH={kernelName:ir,backendName:"webgpu",kernelFunc:YH};var QH={kernelName:Zn,backendName:"webgpu",kernelFunc:function e(t){let{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){let t=YV({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),i=uU({inputs:{input:r},backend:a}),s=YH({inputs:{x:i},backend:a}),o=oB({inputs:{real:n,imag:s},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(i.dataId),a.disposeData(s.dataId),o}return YW({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};var ej={kernelName:Jn,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return vG({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{Sr.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),Sr.assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=hU({inputs:t.map(e=>{let t=vG({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t}),backend:n,attrs:{axis:r}});return o.forEach(e=>n.disposeData(e.dataId)),l}};function tj(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.length,a=oW(n),r=e.map((e,t)=>`uniforms.pad${t}[0]`).join(","),i=e.map((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${n>1?`[${t}]`:""}`).join(",");return`\n        let start = ${n>1?`${a}(${r})`:`${r}`};\n        let end = ${n>1?`${a}(${i})`:`${i}`};\n        if (${n>1?"any(paddedCoords < start)":"paddedCoords < start"} || ${n>1?"any(paddedCoords >= end)":"paddedCoords >= end"}) {\n          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});\n        } else {\n          let coords = paddedCoords - start;\n          setOutputAtIndex(index, getX(${n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords"}));\n        }\n  `}var nj=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]),this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let paddedCoords = getCoordsFromIndex(index);\n          ${tj(this.xShape)}\n        }\n      }\n    `}},aj={kernelName:Qn,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:i,constantValue:s}=a;if(i.every(e=>Sr.arraysEqual(e,[0,0])))return iB({inputs:{x:r},backend:n});if(0===Sr.sizeFromShape(r.shape)){return YW({backend:n,attrs:{shape:i.map((e,t)=>e[0]+r.shape[t]+e[1]),value:s,dtype:r.dtype}})}let o=[{type:"float32",data:[s]}];i.map(e=>o.push({type:"int32",data:[e[0],e[1]]}));let l=new nj(r.shape,i);return n.runWebGPUProgram(l,[r],r.dtype,o)}},rj={kernelName:"Pow",backendName:"webgpu",kernelFunc:pB({opType:EW.POW})};var ij={kernelName:na,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,i=new rB(EW.PRELU,a.shape,r.shape);return n.runWebGPUProgram(i,[a,r],"float32")}};var sj={kernelName:aa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:i,keepDims:s}=a;return lV(r,i,s,"prod",n)}},oj={kernelName:oa,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:i,dtype:s}=n,o=PB(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},lj=pB({opType:EW.DIV}),uj={kernelName:Gt,backendName:"webgpu",kernelFunc:lj},dj=dB({opType:FW.RECIPROCAL}),pj={kernelName:ua,backendName:"webgpu",kernelFunc:dj},hj=dB({opType:FW.RELU}),cj={kernelName:da,backendName:"webgpu",kernelFunc:hj},fj=dB({opType:FW.RELU6}),mj={kernelName:ga,backendName:"webgpu",kernelFunc:fj},gj=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n        let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}};var yj={kernelName:fa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,size:s,halfPixelCenters:o}=a,[l,u]=s,d=[{type:"float32",data:[i&&l>1?1:0,i&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],p=new gj(r.shape,l,u);return n.runWebGPUProgram(p,[r],"float32",d)}},Aj=class{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,\n       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let dxR = f32(dyR) * uniforms.heightScale;\n              let topDxRIndex = i32(floor(dxR));\n              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));\n              let dxRLerp = dxR - f32(topDxRIndex);\n              let inverseDxRLerp = 1.0 - dxRLerp;\n\n              let dxC = f32(dyC) * uniforms.widthScale;\n              let leftDxCIndex = i32(floor(dxC));\n              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));\n              let dxCLerp = dxC - f32(leftDxCIndex);\n              let inverseDxCLerp = 1.0 - dxCLerp;\n\n              if (r == topDxRIndex && c == leftDxCIndex) {\n                // topLeft\n                accumulator +=\n                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n              }\n\n              if (r == topDxRIndex && c == rightDxCIndex) {\n                // topRight\n                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == leftDxCIndex) {\n                // bottomLeft\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n              }\n\n              if (r == bottomDxRIndex && c == rightDxCIndex) {\n                // bottomRight\n                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}};var xj={kernelName:ma,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,[,o,l]=r.shape,[,u,d]=i.shape,p=[s&&u>1?o-1:o,s&&d>1?l-1:l],h=[s&&u>1?u-1:u,s&&d>1?d-1:d],c=p[0]/h[0],f=p[1]/h[1],m=1/c,g=1/f,y=2*Math.ceil(m)+2,A=2*Math.ceil(g)+2,x=new Aj(r.shape,s),b=[{type:"int32",data:p},{type:"int32",data:h},{type:"float32",data:[c]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[A]}];return n.runWebGPUProgram(x,[i],i.dtype,b)}},bj=class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=a,this.shaderKey=`resizeNearest_${a}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputAtIndex(index, newValue);\n        }\n      }\n    `}};var vj={kernelName:ha,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:s,size:o}=a,[l,u]=o,d=[{type:"float32",data:[i&&l>1?1:0,i&&u>1?1:0]},{type:"float32",data:[i?.5:0]}],p=new bj(r.shape,l,u,s);return n.runWebGPUProgram(p,[r],r.dtype,d)}},wj=class{constructor(e,t){this.variableNames=["dy"],this.uniforms="effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,\n       winHeight : i32, winWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getOutputCoords();\n          let b = coords[0];\n          let d = coords[3];\n          let r = coords[1];\n          let c = coords[2];\n\n          var accumulator = 0.0;\n\n          // Compute bounds for where in dy we will look\n          let startRLerp = floor(f32(r) * uniforms.invHeightScale);\n          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));\n\n          let startCLerp = floor(f32(c) * uniforms.invWidthScale);\n          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));\n\n          // Loop over dy\n          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {\n            let dyR = startDyR + dyROffset;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {\n              continue;\n            }\n\n            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {\n              let dyC = startDyC + dyCOffset;\n\n              // Guard against the window exceeding the bounds of dy\n              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {\n                continue;\n              }\n\n              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *\n                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));\n\n              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *\n                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));\n\n              let sourceNearestRow =\n                  i32(min(f32(uniforms.outShape[1] - 1),\n                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));\n\n              let sourceNearestCol =\n                  i32(min(f32(uniforms.outShape[2] - 1),\n                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));\n\n              if (r == sourceNearestRow && c == sourceNearestCol) {\n                accumulator += getDy(b, dyR, dyC, d);\n              }\n            }\n          }\n          // End loop over dy\n\n          setOutputAtIndex(index, accumulator);\n        }\n      }\n    `}};var kj={kernelName:ca,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:i}=t,{alignCorners:s}=a,[,o,l]=r.shape,[,u,d]=i.shape,p=[s&&u>1?o-1:o,s&&d>1?l-1:l],h=[s&&u>1?u-1:u,s&&d>1?d-1:d],c=1/(p[0]/h[0]),f=1/(p[1]/h[1]),m=2*Math.ceil(c)+2,g=2*Math.ceil(f)+2,y=new wj(r.shape,s),A=[{type:"int32",data:p},{type:"int32",data:h},{type:"float32",data:[c]},{type:"float32",data:[f]},{type:"int32",data:[m]},{type:"int32",data:[g]}];return n.runWebGPUProgram(y,[i],i.dtype,A)}},Ij=class{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`\n      \n      // Using uniform variables as judging conditions, so the function has\n      // coherent execution within all threads.\n      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {\n        var reverseCoords = coords;\n        if (uniforms.axis[0] == 1) {\n          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;\n        }\n        if (uniforms.axis[1] == 1) {\n          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;\n        }\n        if (uniforms.axis[2] == 1) {\n          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;\n        }\n        if (uniforms.axis[3] == 1) {\n          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;\n        }\n\n        return reverseCoords;\n      }\n    \n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let reverseCoords = getReverseCoords(coords);\n          setOutputAtIndex(index, getX(reverseCoords[0],\n              reverseCoords[1], reverseCoords[2], reverseCoords[3]));\n        }\n      }\n    `}};var Sj={kernelName:ya,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:i}=a,s=r.shape.length;if(0===s)return iB({inputs:{x:r},backend:n});let o=r.shape,l=[1,1,1,1];o.forEach((e,t)=>{l[t+4-s]=e});let u=Sr.parseAxisParam(i,r.shape),d=[0,0,0,0];u.forEach(e=>{d[e+4-s]=1});let p=[{type:"int32",data:d}],h=QW({inputs:{x:r},backend:n,attrs:{shape:l}}),c=new Ij(l),f=n.runWebGPUProgram(c,[h],h.dtype,p);n.disposeData(h.dataId);let m=QW({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}},Nj=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="centerX : f32, centerY : f32, sinRadians : f32,\n          cosRadians : f32,",this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        ${uW("index")} {\n          if (index < uniforms.size) {\n            let coords = getCoordsFromIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputAtIndex(index, outputValue);\n          }\n        }\n      `}},Cj={kernelName:lr,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e,{image:r}=t,{radians:i,fillValue:s,center:o}=n,l=a,u=new Nj(r.shape,s),[d,p]=Jf.getImageCenter(o,r.shape[1],r.shape[2]),h=[{type:"float32",data:[d]},{type:"float32",data:[p]},{type:"float32",data:[Math.sin(i)]},{type:"float32",data:[Math.cos(i)]}];return"number"==typeof s?h.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):h.push({type:"float32",data:s}),l.runWebGPUProgram(u,[r],r.dtype,h)}},Tj=dB({opType:FW.ROUND}),Rj={kernelName:Aa,backendName:"webgpu",kernelFunc:Tj},Ej=dB({opType:FW.RSQRT,cpuKernelImpl:OB}),$j={kernelName:xa,backendName:"webgpu",kernelFunc:Ej},Mj=class{constructor(e,t,n,a,r,i,s){let o=!(arguments.length>7&&void 0!==arguments[7])||arguments[7];this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=s,this.sumDupeIndices=o,this.dispatchLayout=NW(e),this.dispatch=wW(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${a}_${this.sliceDimGreaterThanOne}_${s}_${o}_${r.length}`;let l=oW(r.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",a="",r="";1===this.dispatchLayout.x.length?(a="flattenedIndex",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.dispatchLayout.x.length&&(a="vec2<i32>(flattenedIndex, coords[1])",r="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        // N.B. |updates| could be a scalar tensor, conceptually representing a\n        // 2D tensor with all values equal to that. By design, its size must be\n        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|\n        // gives the other.\n        let sliceSize = uniforms.outShape[1];\n        let d0 = index / sliceSize;\n        let d1 = index - d0 * sliceSize;\n        return vec2<i32>(d0, d1);\n      }\n      ");let i=`getUpdates(${Array.from({length:this.updatesRank},(e,t)=>`coords[${t}]`).join(", ")})`;return`\n    ${r}\n      ${uW("index")} {\n        if (index < uniforms.updatesSize) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue =\n              ${gW(this.type)}(${i});\n          let flatIndex = getOutputIndexFromCoords(${a});\n\n          ${this.sumDupeIndices?rW("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}\n        }\n      }`}};var Fj={kernelName:ba,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:i}=t,{shape:s}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Jf.calculateShapes(i,r,s),h=[p/u,u];if(0===p)return n.makeTensorInfo(s,r.dtype);let c=QW({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=QW({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=YW({backend:n,attrs:{shape:h,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[Sr.sizeFromShape(f.shape)]}],A=new Mj(f.shape,o,c.shape.length,f.shape.length,d,h,m),x=n.runWebGPUProgram(A,[f,c],m,y,g),b=QW({inputs:{x:x},backend:n,attrs:{shape:s}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),b}},_j=class{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`\n      fn findBound(batch: i32, value: f32) -> i32 {\n        var left = i32(0);\n        var right = uniforms.numInputs;\n        while (left < right) {\n          var mid = (left + right) / 2;\n          if (getSortedSequence(batch, mid) ${"left"===this.side?"<":"<="} value) {\n            left = mid + 1;\n          } else {\n            right = mid;\n          }\n        }\n        return right;\n      }\n\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let value = getValuesByOutputIndex(index);\n          setOutputAtIndexI32(index, findBound(coords[0], value));\n        }\n      }\n    `}};var Pj={kernelName:wa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:i}=t,{side:s}=a,o=new _j([i.shape[0],i.shape[1]],s),l=[{type:"int32",data:[r.shape[1]]}];return n.runWebGPUProgram(o,[r,i],"int32",l)}},Oj=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push(`${n[e]}`),e<this.cRank&&a.push(`${n[e]}`);e=a.join(),t=r.join()}return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputAtIndex(index, getA(${t}));\n          } else {\n            setOutputAtIndex(index, getB(${t}));\n          }\n        }\n      }\n    `}};var Dj={kernelName:ka,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:i}=t,s=new Oj(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(s,[a,r,i],yi(r.dtype,i.dtype))}},zj=dB({opType:FW.SELU}),Lj={kernelName:Ia,backendName:"webgpu",kernelFunc:zj},Wj=dB({opType:FW.SIGMOID}),Bj={kernelName:Ra,backendName:"webgpu",kernelFunc:Wj},Vj=dB({opType:FW.SIGN}),Uj={kernelName:Ta,backendName:"webgpu",kernelFunc:Vj},Gj={kernelName:"Sin",backendName:"webgpu",kernelFunc:dB({opType:FW.SIN})},Hj=dB({opType:FW.SINH}),jj={kernelName:Ca,backendName:"webgpu",kernelFunc:Hj},qj=dB({opType:FW.SOFTPLUS}),Xj={kernelName:Ea,backendName:"webgpu",kernelFunc:qj},Kj=class{constructor(e,t,n,a,r,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let s=new Array(a.length);for(let o=0;o<s.length;o++)s[o]=a[r[o]];this.outputShape=s,this.newDim=r,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${oW(a.length)}, paddedXShapeStrides : ${oW(i)}, `,n.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${r}`}getUserCode(){let e=oW(this.outputShape.length),t=aV(this.newDim);return`\n      ${cW(this.paddedXShape,"PaddedX")}\n      ${uW("index")} {\n        if(index < uniforms.size) {\n          let coords = getCoordsFromIndex(index);\n          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);\n          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);\n          ${tj(this.xShape,!0)}\n        }\n      }\n    `}},Zj={kernelName:Fa,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:i,paddings:s}=a;Sr.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=i.reduce((e,t)=>e*t),l=[[0,0]];l.push(...s);for(let A=1+i.length;A<r.shape.length;++A)l.push([0,0]);let u=l.map((e,t)=>e[0]+r.shape[t]+e[1]),d=Jf.getReshaped(u,i,o,!1),p=Jf.getPermuted(d.length,i.length,!1),h=Jf.getReshapedPermuted(u,i,o,!1),c=Sr.computeStrides(u),f=new Kj(r.shape,u,l,d,p,c.length),m=[{type:"int32",data:d},{type:"int32",data:c}];l.map(e=>m.push({type:"int32",data:[e[0],e[1]]}));let g=n.runWebGPUProgram(f,[r],r.dtype,m),y=QW({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeData(g.dataId),y}},Yj=class{constructor(e,t,n){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=n,this.dispatchLayout=NW([t]),this.dispatch=wW(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.sparseSize) {\n        let indexInSegmentIds = index / uniforms.segmentSize;\n        let indexInSegment = index % uniforms.segmentSize;\n        let indexInInput = indices[indexInSegmentIds];\n        let segmentId = segmentIds[indexInSegmentIds];\n\n        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];\n        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;\n        ${rW("&result[outIndex]","value",this.type)}\n      }\n    }\n  `}},Jj=class{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=NW(t),this.dispatch=wW(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.segmentIdsShape) {\n        let segmentId = segmentIds[index];\n        ${rW("&result[segmentId]","1","int32")}\n      }\n    }\n  `}},Qj=class{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=NW(e),this.dispatch=wW(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.size) {\n        let segmentId = index / uniforms.segmentSize;\n        let count = sameSegmentIdCount[segmentId];\n        if (count != 0) {\n          ${"float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}\n        }\n      }\n    }\n  `}};function eq(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4?arguments[4]:void 0,s=Sr.sizeFromShape(e.shape)/e.shape[0],o=e.dtype,l=Sr.sizeFromShape(t.shape),u=i.readSync(n.dataId),d=l>0?u[l-1]+1:0,p=e.shape.slice();p[0]=d;let h=l*s,c=YW({backend:i,attrs:{shape:p,value:0,dtype:o}});a=new Yj(p,h,o);let f=[{type:"int32",data:[s]},{type:"int32",data:[h]}],m=i.runWebGPUProgram(a,[e,t,n],o,f,c);if(r)return m;let g=YW({backend:i,attrs:{shape:[d],value:0,dtype:"int32"}});a=new Jj(d,n.shape);let y=i.runWebGPUProgram(a,[n],"int32",null,g),A=YW({backend:i,attrs:{shape:p,value:0,dtype:o}});a=new Qj(p,o),f=[{type:"int32",data:[s]}];let x=i.runWebGPUProgram(a,[m,y],o,f,A);return i.disposeData(m.dataId),i.disposeData(y.dataId),x}var tq={kernelName:za,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;return eq(a,r,i,!1,n)}};var nq={kernelName:La,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:i}=t;return eq(a,r,i,!0,n)}},aq=class{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push(`(${n[r]} % ${t}aShape[${r}])`);return a.join()}(this.rank,"uniforms.");return`\n      ${uW("index")} {\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromIndex(index);\n          setOutputAtIndex(index, getA(${e}));\n        }\n      }\n    `}};function rq(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:i}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map(e=>Sr.decodeString(e)):e,a=mo(r.shape,r.dtype,t),s=UB(a,i);return n.makeTensorInfo(s.shape,s.dtype,s.values)}let s=new aq(r.shape,i);return n.runWebGPUProgram(s,[r],r.dtype)}var iq={kernelName:Ya,backendName:"webgpu",kernelFunc:rq};var sq={kernelName:Wa,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:i,defaultValue:s}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:h}=Jf.calculateShapes(i,r,o),c=!1;if("string"===i.dtype){let e=n.bufferSync(r),t=n.bufferSync(i),a=Sr.decodeString(n.readSync(s.dataId)[0]),f=DB(e,t,o,h,d,u,l,p,a,c);return n.makeTensorInfo(o,f.dtype,f.values)}let f=[h/d,d],m=QW({inputs:{x:r},backend:n,attrs:{shape:[u,l]}}),g=i.shape.length?QW({inputs:{x:i},backend:n,attrs:{shape:[u,d]}}):iB({inputs:{x:i},backend:n}),y=g.dtype,A=n.makeTensorInfo([],y,Sr.makeZerosTypedArray(1,y)),x=QW({inputs:{x:s},backend:n,attrs:{shape:Array(f.length).fill(1)}}),b=rq({inputs:{x:x},backend:n,attrs:{reps:f}}),v=[{type:"int32",data:[l]},{type:"int32",data:p},{type:"int32",data:[Sr.sizeFromShape([u,d])]}];switch(u){case 0:break;case 1:{let e=new Mj([u,d],l,m.shape.length,g.shape.length,p,f,y,c);n.runWebGPUProgram(e,[g,m],y,v,b)}break;default:{let e=new Mj([u,d],l,m.shape.length,A.shape.length,p,f,y,c);n.runWebGPUProgram(e,[A,m],y,v,b)}{let e=new Mj([u,d],l,m.shape.length,g.shape.length,p,f,y);n.runWebGPUProgram(e,[g,m],y,v,b)}}let w=QW({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(x.dataId),n.disposeData(A.dataId),n.disposeData(b.dataId),w}};var oq={kernelName:_a,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:i,axis:s}=a,o=Sr.parseAxisParam(s,r.shape)[0],l=Jf.prepareSplitSize(r,i,o),u=r.shape.length,d=new Array(u).fill(0),p=r.shape.slice();return l.map(e=>{let t=[...p];t[o]=e;let a=BV({inputs:{x:r},backend:n,attrs:{begin:d,size:t}});return d[o]+=e,a})}},lq=dB({opType:FW.SQRT}),uq={kernelName:$a,backendName:"webgpu",kernelFunc:lq},dq={kernelName:Va,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:n}=e,{x:a}=t,r=n,i=new uB(a.shape,FW.SQUARE);return r.runWebGPUProgram(i,[a],a.dtype)}},pq=pB({opType:EW.SQUARED_DIFFERENCE}),hq={kernelName:Ba,backendName:"webgpu",kernelFunc:pq};var cq={kernelName:sr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,i=new uB(r.shape,FW.STEP,"stepAlpha : f32,"),s=[{type:"float32",data:[n.alpha]}];return a.runWebGPUProgram(i,[r],r.dtype,s)}},fq=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=oW(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`)).join(",")}return`\n       ${uW("index")} {\n         if (index < uniforms.size) {\n           let coords = getCoordsFromIndex(index);\n           setOutputAtIndex(index, getX(${e}));\n         }\n       }\n     `}};var mq={kernelName:Ga,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:i}=n,{begin:s,end:o,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:A,begin:x,end:b,strides:v}=Nf.sliceInfo(i.shape,s,o,l,u,d,p,h,c);if(g)t=QW({inputs:{x:i},backend:a,attrs:{shape:m}});else if(y||A){Sr.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=Nf.computeOutShape(x,b,v),n=BV({inputs:{x:i},backend:a,attrs:{begin:x,size:e}});t=QW({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeData(n.dataId)}else if(a.shouldExecuteOnCPU([i])){let e=a.readSync(i.dataId),n=mo(i.shape,i.dtype,e),r=WB(f,n,v,x);t=a.makeTensorInfo(m,i.dtype,r.values)}else{let e=new fq(f),n=[{type:"int32",data:x},{type:"int32",data:v}],r=a.runWebGPUProgram(e,[i],i.dtype,n);t=QW({inputs:{x:r},backend:a,attrs:{shape:m}}),a.disposeData(r.dataId)}return t}};var gq={kernelName:Ha,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:i,leftPad:s,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:d,dataSplits:p}=t,h=n.readSync(d.dataId),c=n.readSync(p.dataId),[f,m]=BB(h,c,r,i,s,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},yq={kernelName:"Sub",backendName:"webgpu",kernelFunc:pB({opType:EW.SUB,cpuKernelImpl:VB,supportsComplex:!0})},Aq={kernelName:"Tan",backendName:"webgpu",kernelFunc:dB({opType:FW.TAN})},xq=dB({opType:FW.TANH}),bq={kernelName:Za,backendName:"webgpu",kernelFunc:xq};var vq={kernelName:va,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:i,updates:s}=t,{}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Jf.calculateShapes(s,i,r.shape),h=[p/u,u];if(0===p)return n.makeTensorInfo(r.shape,i.dtype);let c=[],f=QW({inputs:{x:i},backend:n,attrs:{shape:[l,o]}});c.push(f);let m=QW({inputs:{x:s},backend:n,attrs:{shape:[l,u]}});c.push(m);let g=QW({inputs:{x:r},backend:n,attrs:{shape:h}});c.push(g);let y=rq({inputs:{x:g},backend:n,attrs:{reps:Array(h.length).fill(1)}}),A=new Mj([l,u],o,f.shape.length,m.shape.length,d,h,r.dtype,!1),x=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[Sr.sizeFromShape([l,u])]}],b=n.runWebGPUProgram(A,[m,f],g.dtype,x,y);c.push(b);let v=QW({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return c.forEach(e=>n.disposeData(e.dataId)),v}},wq=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, negativeInf : f32,\n        dir : i32, inc : i32,",this.shaderKey="swap"}getUserCode(){return`\n        ${uW("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}},kq=class{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`\n        ${uW("index")} {\n          if (index < uniforms.size) {\n            let outC = getCoordsFromIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputAtIndex(index, f32(i0));\n            } else {\n              setOutputAtIndex(index, f32(i1));\n            }\n          }\n        }\n      `}};function Iq(e,t){null!==t&&e.disposeData(t.dataId)}function Sq(e){let t=1;for(;t<e;)t*=2;return t}var Nq={kernelName:Ja,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:i,sorted:s}=a,o=r.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let e=n.readSync(r.dataId),[t,a]=GB(e,o,r.dtype,i,s);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===i)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[r,YW({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let u=Sr.sizeFromShape(o)/l,d=QW({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),p=Sq(i),h=Sq(l),c=null,f=()=>null===c?[d,d]:[d,c],m=(e,t,a)=>{let r=f(),i=new wq(a),s=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=c;c=n.runWebGPUProgram(i,r,"int32",s),Iq(n,o)};for(let b=1;b<p;b*=2){let e=2*b;for(let t=b;t>=1;t/=2)m(e,t,[u,h])}for(let b=h;b>p;b/=2){let e=f(),t=new kq([u,b/2]),a=[{type:"int32",data:[l]},{type:"int32",data:[null===c?1:0]},{type:"int32",data:[p]}],r=c;c=n.runWebGPUProgram(t,e,"int32",a),Iq(n,r);let i=p/2,s=2*i;for(let n=i;n>=1;n/=2)m(s,n,c.shape)}let g=c;c=BV({inputs:{x:c},backend:n,attrs:{begin:0,size:[u,i]}}),Iq(n,g);let y=HG({inputs:{x:d,indices:c},backend:n,attrs:{axis:1,batchDims:1}});Iq(n,d);let A=o.slice(0,-1);A.push(i),g=c,c=QW({inputs:{x:c},attrs:{shape:A},backend:n}),Iq(n,g);let x=y;return y=QW({inputs:{x:y},attrs:{shape:A},backend:n}),Iq(n,x),[y,c]}},Cq=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=NW(this.outputShape),this.dispatch=wW(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } else if (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } else if (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          ${uW("index")} {\n            if (index < uniforms.size) {\n              let coords = getCoordsFromIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputAtIndex(index, outputValue);\n            }\n          }\n        `}};var Tq={kernelName:Qa,backendName:"webgpu",kernelFunc:function(e){let t,{inputs:n,backend:a,attrs:r}=e,{image:i,transforms:s}=n,{interpolation:o,fillMode:l,fillValue:u,outputShape:d}=r,[p,h,c,f]=i.shape,[m,g]=null!=d?d:[h,c],y=new Cq([p,m,g,f]),A="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let x=[{type:"int32",data:[A]},{type:"int32",data:[t]},{type:"float32",data:[u]}];return a.runWebGPUProgram(y,[i,s],"float32",x)}};var Rq={kernelName:nr,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:i}=a;i<0&&(i+=r.shape.length);let s=r,o=s.shape.length,l=r.shape[i],u=new Array(o-1),d=0;for(let m=0;m<o;m++)m!==i&&(u[d++]=s.shape[m]);let p=[],h=new Array(o).fill(0),c=s.shape.slice();c[i]=1;let f=new Array(l);for(let m=0;m<f.length;m++){h[i]=m;let e=BV({inputs:{x:s},backend:n,attrs:{begin:h,size:c}}),t=QW({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,p.push(e)}return p.forEach(e=>n.disposeData(e.dataId)),f}},Eq=class{constructor(e,t,n){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=NW(e),this.dispatch=wW(this.dispatchLayout,e,this.workgroupSize),"float32"!==n&&"int32"!==n)throw new Error(`UnsortedSegmentSum only supports float32 and int32\n              types, does not support ${n} type.`);this.type=n,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`\n    ${uW("index")} {\n      if (index < uniforms.xSize) {\n        let coords = getXCoordsFromIndex(index);\n        let b = coords[0];\n        let inCol = coords[1];\n\n        let segmentId = i32(getSegmentIds(inCol));\n        if (segmentId >= 0) {\n          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;\n          let value = getX(b, inCol);\n\n          ${rW("&result[flatIndex]","value",this.type)}\n        }\n      }\n    }\n  `}};var $q={kernelName:ar,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:i}=t,{numSegments:s}=a,o=r.shape.length,l=[],u=0,d=Jf.getAxesPermutation([u],o),p=r;null!=d&&(p=rV({inputs:{x:r},backend:n,attrs:{perm:d}}),l.push(p),u=Jf.getInnerMostAxes(1,o)[0]);let h=Jf.segment_util.computeOutShape(p.shape,u,s),c=Sr.sizeFromShape([p.shape[u]]),f=QW({inputs:{x:p},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=r.dtype,g=[f.shape[0],s],y=YW({backend:n,attrs:{shape:g,value:0,dtype:m}}),A=new Eq(f.shape,g,m),x=[{type:"int32",data:[s]},{type:"int32",data:[Sr.sizeFromShape(f.shape)]}],b=n.runWebGPUProgram(A,[f,i],m,x,y),v=QW({inputs:{x:b},backend:n,attrs:{shape:h}});l.push(b);let w=v;if(null!=d){l.push(v);let e=Jf.getUndoAxesPermutation(d);w=rV({inputs:{x:w},backend:n,attrs:{perm:e}})}return l.forEach(e=>n.disposeData(e.dataId)),w}},Mq=[nB,qB,KB,YB,JB,eV,uV,dV,hV,cV,mV,yV,xV,vV,kV,MV,FV,OV,DV,zV,UV,jV,XV,QV,tU,rU,lB,oU,cU,xU,IU,NU,TU,RU,$U,MU,_U,OU,BU,VU,UU,HU,JU,QU,KU,tG,aG,sG,oG,uG,fG,mG,gG,AG,xG,bG,wG,IG,TG,JW,EG,OG,MG,_G,LG,WG,BG,UG,jG,XG,ZG,sB,YG,dU,QG,tH,aH,rH,sH,lH,dH,cH,pH,mH,yH,xH,kH,SH,TV,CH,TH,FH,RH,MH,_H,EV,PH,DH,LH,WH,HH,pG,jH,qH,XH,ZV,ZH,QH,ej,aj,rj,ij,sj,oj,JV,uj,pj,cj,mj,eB,yj,xj,vj,kj,Sj,Cj,Rj,$j,Fj,Pj,Dj,Lj,Bj,Uj,Gj,jj,VV,cq,mq,gq,GH,Xj,Zj,tq,nq,sq,oq,uq,dq,hq,yq,cG,Aq,bq,vq,iq,Nq,Tq,iV,Rq,$q,JH];for(let Z2 of Mq)xr(Z2);var Fq="4.22.0",_q={tfjs:Fq,"tfjs-core":Fq,"tfjs-converter":"4.22.0","tfjs-backend-cpu":"4.22.0","tfjs-backend-webgl":"4.22.0","tfjs-backend-wasm":"4.22.0","tfjs-backend-webgpu":"4.22.0"},Pq=void 0;function Oq(){const e=new Date,t=`${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}:${e.getSeconds().toString().padStart(2,"0")}.${e.getMilliseconds().toString().padStart(3,"0")}`;for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];a&&console.log(t,"Human:",...a)}var Dq=()=>"undefined"!==typeof performance?performance.now():parseInt((Number(process.hrtime.bigint())/1e3/1e3).toString());function zq(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"config",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];for(const r of Object.keys(t))if("object"===typeof t[r])zq(e[r],t[r],r,a);else{const i=e&&"undefined"!==typeof e[r];i||a.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});const s=e&&typeof e[r]===typeof t[r];i&&!s&&a.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&"config"===n&&a.length>0&&Oq("invalid configuration",a),a}function Lq(){const e=e=>e&&"object"===typeof e;for(var t=arguments.length,n=new Array(t),a=0;a<t;a++)n[a]=arguments[a];return n.reduce((t,n)=>(Object.keys(n||{}).forEach(a=>{const r=t[a],i=n[a];Array.isArray(r)&&Array.isArray(i)?t[a]=r.concat(...i):e(r)&&e(i)?t[a]=Lq(r,i):t[a]=i}),t),{})}var Wq={backend:"",modelBasePath:"",cacheModels:!0,validateModels:!0,wasmPath:"",wasmPlatformFetch:!1,debug:!1,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,flags:{},softwareKernels:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,autoBrightness:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!1,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,minSize:0,iouThreshold:.1,scale:1.4,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json",keepInvalid:!1},attention:{enabled:!1,modelPath:"facemesh-attention.json"},iris:{enabled:!0,scale:2.3,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-lite.json"}},object:{enabled:!1,modelPath:"centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"rvm.json",ratio:.5,mode:"default"}},Bq=(e,t,n)=>{const a=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(a,(e,t)=>(n[t]=0,e))},Vq=class{constructor(e,t,n){o(this,"uniform",{}),o(this,"attribute",{}),o(this,"gl"),o(this,"id"),o(this,"compile",(e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(Oq(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)||"unknown"}`),null)):(Oq("filter: could not create shader"),null)}),this.gl=e;const a=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),a&&r)if(this.id)if(this.gl.attachShader(this.id,a),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),Bq(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);Bq(t,"uniform",this.uniform),Bq(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else Oq(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)||"unknown"}`);else Oq("filter: could not create webgl program")}};function Uq(){let e=0,t=null,n=!1,a=-1,r=[null,null],i=[],s=null,o=null;const l=tX(100,100),u={},d=1,p=l.getContext("webgl");if(!p)return void Oq("filter: cannot get webgl context");function h(e){return r[e]=r[e]||function(e,t){const n=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,n);const a=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,a);const r=p.createTexture();return p.bindTexture(p.TEXTURE_2D,r),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,e,t,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,r,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:n,texture:r}}(l.width,l.height),r[e]}function c(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!o)return;let i=null,s=null,l=!1;i=0===e?t:h(a).texture||null,e++,!n||r&d?(a=(a+1)%2,s=h(a).fbo||null):(s=null,l=e%2===0),p.bindTexture(p.TEXTURE_2D,i),p.bindFramebuffer(p.FRAMEBUFFER,s),p.uniform1f(o.uniform.flipY,l?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function f(e){if(u[e])return o=u[e],p.useProgram((o?o.id:null)||null),o;if(o=new Vq(p,"\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",e),!o)return Oq("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return p.enableVertexAttribArray(o.attribute.pos),p.vertexAttribPointer(o.attribute.pos,2,p.FLOAT,!1,n,0*t),p.enableVertexAttribArray(o.attribute.uv),p.vertexAttribPointer(o.attribute.uv,2,p.FLOAT,!1,n,2*t),u[e]=o,o}this.gl=p;const m={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=f(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n":"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n");n&&(p.uniform1fv(n.uniform.m,t),c())},brightness:e=>{const t=(e||0)+1;m.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);m.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{m.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);m.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{m.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),a=.213,r=.715,i=.072;m.colorMatrix([a+.787*t+n*-a,r+t*-r+n*-r,i+t*-i+.928*n,0,0,a+t*-a+.143*n,r+t*(1-r)+.14*n,i+t*-i+-.283*n,0,0,a+t*-a+-.787*n,r+t*-r+n*r,i+.928*t+n*i,0,0,0,0,0,1,0])},desaturateLuminance:()=>{m.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{m.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{m.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{m.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{m.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{m.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{m.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{m.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/l.width,a=1/l.height,r=f("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n");r&&(p.uniform1fv(r.uniform.m,t),p.uniform2f(r.uniform.px,n,a),c())},detectEdges:()=>{m.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{m.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{m.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;m.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;m.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/l.width,n=e/7/l.height,a=f("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n");a&&(p.uniform2f(a.uniform.px,0,n),c(d),p.uniform2f(a.uniform.px,t,0),c())},pixelate:e=>{const t=e/l.width,n=e/l.height,a=f("\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n");a&&(p.uniform2f(a.uniform.size,t,n),c())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=m[e];i.push({func:n,args:t})},this.reset=function(){i=[]},this.get=function(){return i},this.apply=function(a){!function(e,t){if(e!==l.width||t!==l.height){if(l.width=e,l.height=t,!s){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);s=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,s),p.bufferData(p.ARRAY_BUFFER,e,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,l.width,l.height),r=[null,null]}}(a.width,a.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,a);for(let e=0;e<i.length;e++){n=e===i.length-1;const t=i[e];t.func.apply(this,t.args||[])}return l},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function Gq(e){const t=4===e.shape.length?Mp(e):e,n=Rp(t,3,2),a=[ou(n[0]),ou(n[1]),ou(n[2])],r=[su(n[0]),su(n[1]),su(n[2])],i=await Promise.all(r.map(e=>e.data())),s=Math.max(i[0][0],i[1][0],i[2][0]),o=(s>1?255:1)/s;let l;if(o>1){const e=[ju(n[0],a[0]),ju(n[1],a[1]),ju(n[2],a[2])],i=[ju(r[0],a[0]),ju(r[1],a[1]),ju(r[2],a[2])],s=[wo(e[0],o),wo(e[1],o),wo(e[2],o)],u=Fp([s[0],s[1],s[2]],2);l=Yo(u,[1,t.shape[0]||0,t.shape[1]||0,3]),is([...e,...i,...s,u])}else l=yu(t,0);return is([...n,...a,...r,n,t,e]),l}var Hq,jq,qq,Xq,Kq=3840,Zq=null,Yq=null,Jq=null,Qq={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function eX(){Qq.inputSum=0,Qq.cacheDiff=1,Qq.sumMethod=0,Qq.inputTensor=void 0}function tX(e,t){let n;if(iX.browser)if(iX.worker){if("undefined"===typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else if("undefined"!==typeof document)n=document.createElement("canvas"),n.width=e,n.height=t;else{if("undefined"===typeof navigator||"ReactNative"!==navigator.product)throw new Error("canvas error: attempted to run in browser but DOM is not defined");if("undefined"!==typeof iX.Canvas)n=new iX.Canvas(e,t);else{if("undefined"===typeof globalThis.Canvas)throw new Error("canvas error: attempted to use canvas in react-native without canvas support installed");n=new globalThis.Canvas(e,t)}}else"undefined"!==typeof iX.Canvas?n=new iX.Canvas(e,t):"undefined"!==typeof globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function nX(e,t){const n=t||tX(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function aX(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];var a,r,i;if(!e)return t.debug&&Oq("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof si)&&!("undefined"!==typeof Image&&e instanceof Image)&&!("undefined"!==typeof globalThis.Canvas&&e instanceof globalThis.Canvas)&&!("undefined"!==typeof ImageData&&e instanceof ImageData)&&!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap)&&!("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)&&!("undefined"!==typeof HTMLMediaElement&&e instanceof HTMLMediaElement)&&!("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)&&!("undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement)&&!("undefined"!==typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type not recognized");if(e instanceof si){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=yu(e,0);else if(4===e.shape[2]){const t=kp(e,[0,0,0],[-1,-1,3]);n=yu(t,0),is(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=yo(e):4===e.shape[3]&&(n=Ip(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape.toString()}`);if("int32"===n.dtype){const e=go(n,"float32");is(n),n=e}return{tensor:n,canvas:t.filter.return?Yq:null}}if("undefined"!==typeof e.readyState&&e.readyState<=2)return t.debug&&Oq("input stream is not ready"),{tensor:null,canvas:Zq};const s=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,o=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!s||!o)return t.debug&&Oq("cannot determine input dimensions"),{tensor:null,canvas:Zq};let l=s,u=o;if(l>Kq&&(l=Kq,u=Math.trunc(l*o/s)),u>Kq&&(u=Kq,l=Math.trunc(u*s/o)),((null==(a=t.filter)?void 0:a.width)||0)>0?l=t.filter.width:((null==(r=t.filter)?void 0:r.height)||0)>0&&(l=s*((t.filter.height||0)/o)),(t.filter.height||0)>0?u=t.filter.height:(t.filter.width||0)>0&&(u=o*((t.filter.width||0)/s)),!l||!u)throw new Error("input error: cannot determine dimension");Zq&&Zq.width===l&&Zq.height===u||(Zq=tX(l,u));const d=Zq.getContext("2d");if("undefined"!==typeof ImageData&&e instanceof ImageData?d.putImageData(e,0,0):t.filter.flip&&"undefined"!==typeof d.translate?(d.translate(s,0),d.scale(-1,1),d.drawImage(e,0,0,s,o,0,0,Zq.width,Zq.height),d.setTransform(1,0,0,1,0,0)):d.drawImage(e,0,0,s,o,0,0,Zq.width,Zq.height),Yq&&Zq.width===Yq.width&&Zq.height===Yq.height||(Yq=tX(Zq.width,Zq.height)),t.filter.enabled&&iX.webgl.supported?(Hq||(Hq=iX.browser?new Uq:null),iX.filter=!!Hq,(null==Hq?void 0:Hq.add)?(Hq.reset(),0!==t.filter.brightness&&Hq.add("brightness",t.filter.brightness),0!==t.filter.contrast&&Hq.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&Hq.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&Hq.add("blur",t.filter.blur),0!==t.filter.saturation&&Hq.add("saturation",t.filter.saturation),0!==t.filter.hue&&Hq.add("hue",t.filter.hue),t.filter.negative&&Hq.add("negative"),t.filter.sepia&&Hq.add("sepia"),t.filter.vintage&&Hq.add("brownie"),t.filter.sepia&&Hq.add("sepia"),t.filter.kodachrome&&Hq.add("kodachrome"),t.filter.technicolor&&Hq.add("technicolor"),t.filter.polaroid&&Hq.add("polaroid"),0!==t.filter.pixelate&&Hq.add("pixelate",t.filter.pixelate),Yq=(null==(i=Hq.get())?void 0:i.length)>1?Hq.apply(Zq):Hq.draw(Zq)):(t.debug&&Oq("input process error: cannot initialize filters"),iX.webgl.supported=!1,t.filter.enabled=!1,nX(Zq,Yq))):(nX(Zq,Yq),Hq&&(Hq=null),iX.filter=!!Hq),!n)return{tensor:null,canvas:Yq};if(!Yq)throw new Error("canvas error: cannot create output");let p,h=3;if("undefined"!==typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)if(iX.browser&&mf)p=mf?mf.fromPixels(e):null;else{h=e.data.length/e.height/e.width;p=qi(new Uint8Array(e.data.buffer),[e.height,e.width,h],"int32")}else if(Jq&&Yq.width===Jq.width&&Yq.height===Jq.height||(Jq=tX(Yq.width,Yq.height)),mf&&iX.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?p=mf.fromPixels(Yq):(Jq=nX(Yq),p=mf.fromPixels(Jq));else{const e=nX(Yq).getContext("2d").getImageData(0,0,l,u);h=e.data.length/l/u;p=qi(new Uint8Array(e.data.buffer),[l,u,h])}if(4===h){const e=kp(p,[0,0,0],[-1,-1,3]);is(p),p=e}if(!p)throw new Error("input error: cannot create tensor");const c=go(p,"float32"),f=t.filter.equalization?await Gq(c):yu(c,0);if(is([p,c]),t.filter.autoBrightness){const e=su(f),n=await e.data();t.filter.brightness=n[0]>1?1-n[0]/255:1-n[0],is(e)}return{tensor:f,canvas:t.filter.return?Yq:null}}var rX=class{constructor(){if(o(this,"browser"),o(this,"node"),o(this,"worker"),o(this,"platform",""),o(this,"agent",""),o(this,"backends",[]),o(this,"initial"),o(this,"filter"),o(this,"tfjs"),o(this,"offscreen"),o(this,"perfadd",!1),o(this,"tensorflow",{version:void 0,gpu:void 0}),o(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),o(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0,shader:void 0,vendor:void 0}),o(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),o(this,"cpu",{model:void 0,flags:[]}),o(this,"kernels",[]),d(this,jq),d(this,qq),d(this,Xq),this.browser="undefined"!==typeof navigator&&"undefined"!==typeof navigator.appVersion,this.node="undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node,this.tfjs={version:_q["tfjs-core"]},this.offscreen="undefined"!==typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!==typeof WorkerGlobalScope:void 0,"undefined"!==typeof navigator&&"undefined"!==typeof navigator.userAgent){const e=navigator.userAgent||"",t=e.match(/\(([^()]+)\)/g);if(null==t?void 0:t[0]){const n=t[0].match(/\(([^()]+)\)/g);this.platform=(null==n?void 0:n[0])?n[0].replace(/\(|\)/g,""):"",this.agent=e.replace(t[0],""),this.platform[1]&&(this.agent=this.agent.replace(t[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!==typeof process&&(this.platform=`${process.platform} ${process.arch}`,this.agent=`NodeJS ${process.version}`)}get Canvas(){return u(this,jq)}set Canvas(e){p(this,jq,e),globalThis.Canvas=e}get Image(){return u(this,qq)}set Image(e){p(this,qq,e),globalThis.Image=e}get ImageData(){return u(this,Xq)}set ImageData(e){p(this,Xq,e),globalThis.ImageData=e}async updateBackend(){this.backends=Object.keys(ts().registryFactory);try{this.tensorflow={version:ms().binding?ms().binding.TF_Version:void 0,gpu:ms().binding?ms().binding.isUsingGpuDevice():void 0}}catch(n){}this.wasm.supported="undefined"!==typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&(this.wasm.simd=await Ve().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Ve().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=tX(100,100),t=e?e.getContext("webgl2"):void 0;this.webgl.supported="undefined"!==typeof t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&t&&(this.webgl.version=t.getParameter(t.VERSION),this.webgl.vendor=t.getParameter(t.VENDOR),this.webgl.renderer=t.getParameter(t.RENDERER),this.webgl.shader=t.getParameter(t.SHADING_LANGUAGE_VERSION)),this.webgpu.supported=this.browser&&"undefined"!==typeof navigator&&"undefined"!==typeof navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{if(this.webgpu.supported){const e=await navigator.gpu.requestAdapter();e&&(this.webgpu.adapter="requestAdapterInfo"in e?await e.requestAdapterInfo():await e.info)}}catch(n){this.webgpu.supported=!1}try{this.kernels=Ar(ds()).map(e=>e.kernelName.toLowerCase())}catch(n){}}updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}};jq=new WeakMap,qq=new WeakMap,Xq=new WeakMap;var iX=new rX,sX=class{constructor(){o(this,"config"),o(this,"element"),o(this,"stream"),o(this,"devices",[]),o(this,"enumerate",async()=>{try{const e=await navigator.mediaDevices.enumerateDevices();this.devices=e.filter(e=>"videoinput"===e.kind)}catch(e){this.devices=[]}return this.devices}),o(this,"start",async e=>{var t,n;if((null==e?void 0:e.debug)&&(this.config.debug=null==e?void 0:e.debug),(null==e?void 0:e.crop)&&(this.config.crop=null==e?void 0:e.crop),(null==e?void 0:e.mode)&&(this.config.mode=null==e?void 0:e.mode),(null==e?void 0:e.width)&&(this.config.width=null==e?void 0:e.width),(null==e?void 0:e.height)&&(this.config.height=null==e?void 0:e.height),(null==e?void 0:e.id)&&(this.config.id=null==e?void 0:e.id),null==e?void 0:e.element)if("string"===typeof e.element){const t=document.getElementById(e.element);if(!(t&&t instanceof HTMLVideoElement))return this.config.debug&&Oq("webcam","cannot get dom element",e.element),`webcam error: cannot get dom element: ${e.element}`;this.element=t}else{if(!(e.element instanceof HTMLVideoElement))return this.config.debug&&Oq("webcam","unknown dom element",e.element),`webcam error: unknown dom element: ${e.element}`;this.element=e.element}else this.element=document.createElement("video");const a={audio:!1,video:{facingMode:"front"===this.config.mode?"user":"environment",resizeMode:this.config.crop?"crop-and-scale":"none"}};if((null==(t=this.config)?void 0:t.width)>0&&(a.video.width={ideal:this.config.width}),(null==(n=this.config)?void 0:n.height)>0&&(a.video.height={ideal:this.config.height}),this.config.id&&(a.video.deviceId=this.config.id),this.element.addEventListener("play",()=>{this.config.debug&&Oq("webcam","play")}),this.element.addEventListener("pause",()=>{this.config.debug&&Oq("webcam","pause")}),this.element.addEventListener("click",async()=>{this.element&&this.stream&&(this.element.paused?await this.element.play():this.element.pause())}),!(null==navigator?void 0:navigator.mediaDevices))return this.config.debug&&Oq("webcam error","no devices"),"webcam error: no devices";try{this.stream=await navigator.mediaDevices.getUserMedia(a)}catch(i){return Oq("webcam",i),`webcam error: ${i}`}if(!this.stream)return this.config.debug&&Oq("webcam error","no stream"),"webcam error no stream";this.element.srcObject=this.stream;const r=new Promise(e=>{this.element?this.element.onloadeddata=()=>e(!0):e(!1)});return await r,await this.element.play(),this.config.debug&&Oq("webcam",{width:this.width,height:this.height,label:this.label,stream:this.stream,track:this.track,settings:this.settings,constraints:this.constraints,capabilities:this.capabilities}),`webcam: ${this.label}`}),o(this,"pause",()=>{this.element&&this.element.pause()}),o(this,"play",async()=>{this.element&&await this.element.play()}),o(this,"stop",()=>{this.config.debug&&Oq("webcam","stop"),this.track&&this.track.stop()}),this.config={element:void 0,debug:!0,mode:"front",crop:!1,width:0,height:0}}get track(){if(this.stream)return this.stream.getVideoTracks()[0]}get capabilities(){if(this.track)return this.track.getCapabilities?this.track.getCapabilities():void 0}get constraints(){if(this.track)return this.track.getConstraints?this.track.getConstraints():void 0}get settings(){if(!this.stream)return;const e=this.stream.getVideoTracks()[0];return e.getSettings?e.getSettings():void 0}get label(){return this.track?this.track.label:""}get paused(){var e;return(null==(e=this.element)?void 0:e.paused)||!1}get width(){var e;return(null==(e=this.element)?void 0:e.videoWidth)||0}get height(){var e;return(null==(e=this.element)?void 0:e.videoHeight)||0}},oX={};s(oX,{"affectnet-mobilenet":()=>bX,age:()=>vX,"anti-spoofing":()=>QX,antispoof:()=>lX,blazeface:()=>uX,"blazeface-back":()=>wX,"blazeface-front":()=>kX,"blazepose-detector":()=>IX,"blazepose-full":()=>SX,"blazepose-heavy":()=>NX,"blazepose-lite":()=>CX,centernet:()=>dX,default:()=>hK,efficientpose:()=>TX,"efficientpose-i-lite":()=>eK,"efficientpose-ii-lite":()=>tK,"efficientpose-iv":()=>nK,emotion:()=>pX,faceboxes:()=>RX,facemesh:()=>hX,"facemesh-attention":()=>$X,"facemesh-attention-pinto":()=>EX,"facemesh-detection-full":()=>MX,"facemesh-detection-short":()=>FX,faceres:()=>cX,"faceres-deep":()=>_X,gear:()=>DX,"gear-e1":()=>PX,"gear-e2":()=>OX,gender:()=>LX,"gender-ssrnet-imdb":()=>zX,handdetect:()=>WX,"handlandmark-full":()=>BX,"handlandmark-lite":()=>fX,"handlandmark-sparse":()=>VX,handskeleton:()=>UX,handtrack:()=>mX,"insightface-efficientnet-b0":()=>aK,"insightface-ghostnet-strides1":()=>rK,"insightface-ghostnet-strides2":()=>iK,"insightface-mobilenet-emore":()=>sK,"insightface-mobilenet-swish":()=>oK,iris:()=>gX,liveness:()=>yX,meet:()=>GX,mobileface:()=>HX,mobilefacenet:()=>jX,models:()=>AX,"movenet-lightning":()=>xX,"movenet-multipose":()=>qX,"movenet-thunder":()=>XX,nanodet:()=>KX,"nanodet-e":()=>lK,"nanodet-g":()=>uK,"nanodet-m":()=>dK,"nanodet-t":()=>pK,posenet:()=>ZX,rvm:()=>YX,selfie:()=>JX});var lX=853098,uX=538928,dX=4030290,pX=820516,hX=1477958,cX=6978814,fX=2023432,mX=2964837,gX=2599092,yX=592976,AX=0,xX=4650216,bX=6920630,vX=161240,wX=538928,kX=402048,IX=5928856,SX=6339202,NX=27502466,CX=2726402,TX=5651240,RX=2013002,EX=2387598,$X=2382414,MX=1026192,FX=201268,_X=13957620,PX=112438,OX=112438,DX=1498916,zX=161236,LX=201808,WX=3515612,BX=5431368,VX=5286322,UX=5502280,GX=372228,HX=2183192,jX=5171976,qX=9448838,XX=12477112,KX=7574558,ZX=5032780,YX=3739355,JX=212886,QX=853098,eK=2269064,tK=5651240,nK=25643252,aK=13013224,rK=8093408,iK=8049584,sK=6938536,oK=12168584,lK=12319156,uK=7574558,dK=1887474,pK=5294216,hK={antispoof:lX,blazeface:uX,centernet:dX,emotion:pX,facemesh:hX,faceres:cX,"handlandmark-lite":fX,handtrack:mX,iris:gX,liveness:yX,models:AX,"movenet-lightning":xX,"affectnet-mobilenet":bX,age:vX,"blazeface-back":wX,"blazeface-front":kX,"blazepose-detector":IX,"blazepose-full":SX,"blazepose-heavy":NX,"blazepose-lite":CX,efficientpose:TX,faceboxes:RX,"facemesh-attention-pinto":EX,"facemesh-attention":$X,"facemesh-detection-full":MX,"facemesh-detection-short":FX,"faceres-deep":_X,"gear-e1":PX,"gear-e2":OX,gear:DX,"gender-ssrnet-imdb":zX,gender:LX,handdetect:WX,"handlandmark-full":BX,"handlandmark-sparse":VX,handskeleton:UX,meet:GX,mobileface:HX,mobilefacenet:jX,"movenet-multipose":qX,"movenet-thunder":XX,nanodet:KX,posenet:ZX,rvm:YX,selfie:JX,"anti-spoofing":QX,"efficientpose-i-lite":eK,"efficientpose-ii-lite":tK,"efficientpose-iv":nK,"insightface-efficientnet-b0":aK,"insightface-ghostnet-strides1":rK,"insightface-ghostnet-strides2":iK,"insightface-mobilenet-emore":sK,"insightface-mobilenet-swish":oK,"nanodet-e":lK,"nanodet-g":uK,"nanodet-m":dK,"nanodet-t":pK},cK={cacheModels:!0,cacheSupported:!0,verbose:!0,debug:!1,modelBasePath:""},fK={};async function mK(e){var t,n,a,r,i,s;let o=function(e,t){const n=e.endsWith("/")?"":"/",a=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!a.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${a}`);return a}(cK.modelBasePath,e||"");o.toLowerCase().endsWith(".json")||(o+=".json");const l=o.includes("/")?o.split("/"):o.split("\\"),u=l[l.length-1].replace(".json",""),d="indexeddb://"+u;fK[u]={name:u,loaded:!1,sizeFromManifest:0,sizeLoadedWeights:0,sizeDesired:oX[u],inCache:!1,url:""},cK.cacheSupported="undefined"!==typeof indexedDB;let p={};try{p=cK.cacheSupported&&cK.cacheModels?await Gc.listModels():{}}catch(f){cK.cacheSupported=!1}fK[u].inCache=cK.cacheSupported&&cK.cacheModels&&Object.keys(p).includes(d),fK[u].url=fK[u].inCache?d:o;const h="undefined"===typeof fetch?{}:{fetchFunc:(e,t)=>async function(e,t){return cK.debug&&Oq("load model fetch:",e,t),fetch(e,t)}(e,t)};let c=new Hy(fK[u].url,h);fK[u].loaded=!1;try{c.findIOHandler(),cK.debug&&Oq("model load handler:",c.handler)}catch(m){Oq("error finding model i/o handler:",o,m)}try{const e=await(null==(t=c.handler)?void 0:t.load())||null;fK[u].sizeFromManifest=(null==(n=null==e?void 0:e.weightData)?void 0:n.byteLength)||0,e?c.loadSync(e):c=await jy(fK[u].inCache?d:o,h),fK[u].sizeLoadedWeights=(null==(r=null==(a=c.artifacts)?void 0:a.weightData)?void 0:r.byteLength)||(null==(s=null==(i=c.artifacts)?void 0:i.weightData)?void 0:s[0].byteLength)||0,cK.verbose&&Oq("load:",{model:u,url:c.modelUrl,bytes:fK[u].sizeLoadedWeights}),fK[u].loaded=!0}catch(m){Oq("error loading model:",o,m)}if(fK[u].loaded&&cK.cacheModels&&cK.cacheSupported&&!fK[u].inCache)try{const e=await c.save(d);cK.debug&&Oq("model saved:",d,e)}catch(m){Oq("error saving model:",o,m)}return c}var gK="3.3.6",yK={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};function AK(e){var t;if("humangl"===e.config.backend&&(yK.name in ts().registry&&!(null==(t=null==yK?void 0:yK.gl)?void 0:t.getParameter(yK.gl.VERSION))&&(Oq("humangl error: backend invalid context"),e.models.reset()),!hs(yK.name))){try{yK.canvas=tX(100,100)}catch(n){return void Oq("humangl error: cannot create canvas:",n)}try{if(yK.gl=yK.canvas.getContext("webgl2",yK.webGLattr),!yK.gl)return void Oq("humangl error: cannot get webgl context");if(!yK.gl.getParameter(yK.gl.VERSION).includes("2.0"))return Oq("backend override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");yK.canvas&&(yK.canvas.addEventListener("webglcontextlost",t=>{throw Oq("humangl error:",t.type),Oq("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")}),yK.canvas.addEventListener("webglcontextrestored",e=>{Oq("humangl error: context restored:",e)}),yK.canvas.addEventListener("webglcontextcreationerror",e=>{Oq("humangl error: context create:",e)}))}catch(n){return void Oq("humangl error: cannot get webgl context:",n)}try{PI(2,yK.gl)}catch(n){return void Oq("humangl error: cannot set webgl context:",n)}try{const e=new WN(yK.gl);fs(yK.name,()=>new tT(e),yK.priority)}catch(n){return void Oq("humangl error: cannot register webgl backend:",n)}try{Ar("webgl").forEach(e=>{xr({...e,backendName:yK.name})})}catch(n){return void Oq("humangl error: cannot update webgl backend registration:",n)}try{Ve().flagRegistry.WEBGL_VERSION&&Ve().set("WEBGL_VERSION",2)}catch(n){return void Oq("humangl error: cannot set WebGL backend flags:",n)}!function(){const e=yK.gl;e&&(yK.extensions=e.getSupportedExtensions())}();const t=ms(),a="undefined"!==typeof t.gpgpu?t.getGPGPUContext().gl:null;a?e.config.debug&&Oq("humangl backend registered:",{webgl:a.getParameter(a.VERSION),renderer:a.getParameter(a.RENDERER)}):Oq("humangl error: no current gl context:",a,yK.gl)}}var xK={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};var bK={};async function vK(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];var n,a;if(e.state="backend",0===(null==(n=e.config.backend)?void 0:n.length)&&(e.config.backend=await async function(){var e;return await iX.updateBackend(),(null==(e=iX.tensorflow)?void 0:e.version)?"tensorflow":iX.webgpu.supported&&iX.webgpu.backend?"webgpu":iX.webgl.supported&&iX.webgl.backend?"webgl":iX.wasm.supported&&iX.wasm.backend?"wasm":"cpu"}()),t||iX.initial||e.config.backend&&e.config.backend.length>0&&ds()!==e.config.backend){const t=Dq();if(e.config.backend&&e.config.backend.length>0){"undefined"===typeof window&&"undefined"!==typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&Oq("running inside web worker"),"undefined"!==typeof navigator&&(null==(a=null==navigator?void 0:navigator.userAgent)?void 0:a.toLowerCase().includes("electron"))&&e.config.debug&&Oq("running inside electron");let t=Object.keys(ts().registryFactory);if("humangl"!==e.config.backend||t.includes("humangl")||(AK(e),t=Object.keys(ts().registryFactory)),e.config.debug&&Oq("available backends:",t),iX.browser&&!iX.node&&"tensorflow"===e.config.backend&&t.includes("webgl")&&(e.config.debug&&Oq("override: backend set to tensorflow while running in browser"),e.config.backend="webgl"),!iX.node||iX.browser||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||!t.includes("tensorflow")||(e.config.debug&&Oq(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),iX.browser&&"webgpu"===e.config.backend)if("undefined"===typeof navigator||"undefined"===typeof navigator.gpu)Oq("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="webgl";else{const t=await navigator.gpu.requestAdapter();if(e.config.debug&&Oq("enumerated webgpu adapter:",t),t){let e;e="requestAdapterInfo"in t?await(null==t?void 0:t.requestAdapterInfo()):t.info,Oq("webgpu adapter info:",e)}else Oq("override: backend set to webgpu but browser reports no available gpu"),e.config.backend="webgl"}if(t.includes(e.config.backend)||(Oq(`error: backend ${e.config.backend} not found in registry`),e.config.backend=iX.node?"tensorflow":"webgl",e.config.debug&&Oq(`override: setting backend ${e.config.backend}`)),e.config.debug&&Oq("setting backend:",[e.config.backend]),"wasm"===e.config.backend){Ve().flagRegistry.CANVAS2D_WILL_READ_FREQUENTLY&&Ve().set("CANVAS2D_WILL_READ_FREQUENTLY",!0),e.config.debug&&Oq("wasm path:",e.config.wasmPath),UL(e.config.wasmPath,e.config.wasmPlatformFetch);let t=!1,n=!1;try{t=await Ve().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"),n=await Ve().getAsync("WASM_HAS_SIMD_SUPPORT"),e.config.debug&&Oq(`wasm execution: ${n?"simd":"no simd"} ${t?"multithreaded":"singlethreaded"}`),e.config.debug&&!n&&Oq("warning: wasm simd support is not enabled")}catch(r){Oq("wasm detection failed")}}try{await ls(e.config.backend),await us()}catch(i){return Oq("error: cannot set backend:",e.config.backend,i),!1}e.config.debug&&(bK=JSON.parse(JSON.stringify(Ve().flags)))}if("humangl"!==ds()&&"webgl"!==ds()||(Ve().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&Ve().set("WEBGL_USE_SHAPES_UNIFORMS",!0),Ve().flagRegistry.WEBGL_EXP_CONV&&Ve().set("WEBGL_EXP_CONV",!0),e.config.debug&&"undefined"!==typeof e.config.deallocate&&e.config.deallocate&&(Oq("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Ve().set("WEBGL_DELETE_TEXTURE_THRESHOLD",0))),ds(),e.config.debug){const t=Ve().flags,n={};for(const e of Object.keys(t))bK[e]!==t[e]&&(n[e]=t[e]);e.config.debug&&Object.keys(n).length>0&&Oq("backend:",ds(),"flags:",n)}if(e.config.flags&&Object.keys(e.config.flags).length>0){e.config.debug&&Oq("flags:",e.config.flags);for(const[t,n]of Object.entries(e.config.flags))Ve().set(t,n)}Zi(),xK.tf255=uu(255,"float32"),xK.tf1=uu(1,"float32"),xK.tf2=uu(2,"float32"),xK.tf05=uu(.5,"float32"),xK.tf127=uu(127.5,"float32"),xK.rgb=Dp([.2989,.587,.114],"float32"),e.performance.initBackend=Math.trunc(Dq()-t),e.config.backend=ds(),await iX.updateBackend(),function(e){const t=[];iX.kernels.includes("mod")||(xr({kernelName:"Mod",backendName:ds(),kernelFunc:e=>rs(()=>ju(e.inputs.a,wo(vo(e.inputs.a,e.inputs.b),e.inputs.b)))}),iX.kernels.push("mod"),t.push("mod"));iX.kernels.includes("floormod")||(xr({kernelName:"FloorMod",backendName:ds(),kernelFunc:e=>rs(()=>xo(wo(bo(e.inputs.a,e.inputs.b),e.inputs.b),hd(e.inputs.a,e.inputs.b)))}),iX.kernels.push("floormod"),t.push("floormod"));!iX.kernels.includes("rotatewithoffset")&&e.softwareKernels&&(xr({kernelName:"RotateWithOffset",backendName:ds(),kernelFunc:e=>rs(()=>{const t=ds();ls("cpu");const n=kc.rotateWithOffset(e.inputs.image,e.attrs.radians,e.attrs.fillValue,e.attrs.center);return ls(t),n})}),iX.kernels.push("rotatewithoffset"),t.push("rotatewithoffset"));t.length>0&&e.debug&&Oq("registered kernels:",t)}(e.config)}return!0}function wK(e,t){for(const n of e){xr({kernelName:n,backendName:t.backend,kernelFunc:e=>{var a;return t.debug&&Oq("kernelFunc",n,t.backend,e),null==(a=null==e?void 0:e.inputs)?void 0:a.info}})}iX.kernels=Ar(ds()).map(e=>e.kernelName.toLowerCase())}var kK={};s(kK,{all:()=>pZ,body:()=>nZ,canvas:()=>uZ,face:()=>tZ,gesture:()=>iZ,hand:()=>aZ,init:()=>hZ,object:()=>rZ,options:()=>_K,person:()=>lZ,tensor:()=>dZ});var IK=e=>{if(e)if(e.getContext){const t=e.getContext("2d",{willReadFrequently:!0});if(t)return t;Oq("draw error: cannot get canvas context")}else Oq("draw error: canvas context not defined");else Oq("draw error: invalid canvas");return null},SK=e=>Math.round(180*e/Math.PI),NK=(e,t,n)=>e.replace(t,"number"===typeof n?n.toFixed(1):n),CK=(e,t)=>{if(!t.useDepth||"undefined"===typeof e)return t.color;const n=Uint8ClampedArray.from([127+2*e,127-2*e,255]);return`rgba(${n[0]}, ${n[1]}, ${n[2]}, ${t.alpha})`};function TK(e,t,n,a,r){const i=t.replace(/\[.*\]/g,"").split("\n").map(e=>e.trim()),s=Math.max(0,n);for(let o=i.length-1;o>=0;o--){const t=o*r.lineHeight+a;r.shadowColor&&""!==r.shadowColor&&(e.fillStyle=r.shadowColor,e.fillText(i[o],s+5,t+16)),e.fillStyle=r.labelColor,e.fillText(i[o],s+4,t+15)}}function RK(e,t,n,a,r){e.fillStyle=CK(a,r),e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function EK(e,t,n,a,r,i){if(e.beginPath(),e.lineWidth=i.lineWidth,i.useCurves){const i=(t+t+a)/2,s=(n+n+r)/2;e.ellipse(i,s,a/2,r/2,0,0,2*Math.PI)}else e.moveTo(t+i.roundRect,n),e.lineTo(t+a-i.roundRect,n),e.quadraticCurveTo(t+a,n,t+a,n+i.roundRect),e.lineTo(t+a,n+r-i.roundRect),e.quadraticCurveTo(t+a,n+r,t+a-i.roundRect,n+r),e.lineTo(t+i.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-i.roundRect),e.lineTo(t,n+i.roundRect),e.quadraticCurveTo(t,n,t+i.roundRect,n),e.closePath();e.stroke()}function $K(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const a of t)e.strokeStyle=CK(a[2]||0,n),e.lineTo(Math.trunc(a[0]),Math.trunc(a[1]));e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function MK(e,t,n){if(!(t.length<2))if(e.lineWidth=n.lineWidth,!n.useCurves||t.length<=2)$K(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const a=(t[n][0]+t[n+1][0])/2,r=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],a,r)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function FK(e,t,n){let a,r,i,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),a=Math.atan2(n[1]-t[1],n[0]-t[0]),r=s*Math.cos(a)+n[0],i=s*Math.sin(a)+n[1],e.moveTo(r,i),a+=1/3*(2*Math.PI),r=s*Math.cos(a)+n[0],i=s*Math.sin(a)+n[1],e.lineTo(r,i),a+=1/3*(2*Math.PI),r=s*Math.cos(a)+n[0],i=s*Math.sin(a)+n[1],e.lineTo(r,i),e.closePath(),e.stroke(),e.fill()}var _K={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",alpha:.5,font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawAttention:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1,faceLabels:"",bodyLabels:"",bodyPartLabels:"",objectLabels:"",handLabels:"",fingerLabels:"",gestureLabels:""},PK={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[185,40,39,37,0,267,269,270,409],lipsLowerOuter:[61,146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[191,80,81,82,13,312,311,310,415],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],lipsLowerSemiOuter:[76,77,90,180,85,16,315,404,320,307,306],lipsUpperSemiOuter:[184,74,73,72,11,302,303,304,408],lipsLowerSemiInner:[62,96,89,179,86,15,316,403,319,325,292],lipsUpperSemiInner:[183,42,41,38,12,268,271,272,407],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},OK={count:468,mouth:13,symmetryLine:[13,PK.midwayBetweenEyes[0]]},DK={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},zK=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}],LK=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],WK=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255];[127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map(e=>LK[e]),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map(e=>LK[e]),[33,133,362,263,1,78,308].map(e=>LK[e]);function BK(e){const t=e.map(e=>e[0]);return t.push(e[e.length-1][1]),t}BK([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),BK([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),BK([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),BK([[474,475],[475,476],[476,477],[477,474]]),BK([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),BK([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),BK([[469,470],[470,471],[471,472],[472,469]]),BK([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]]);function VK(e){const t=e.map(e=>e[0]);return t.push(e[e.length-1][1]),t}var UK,GK={lips:VK([[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]]),leftEye:VK([[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]]),leftEyebrow:VK([[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]]),leftIris:VK([[474,475],[475,476],[476,477],[477,474]]),rightEye:VK([[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]]),rightEyebrow:VK([[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]]),rightIris:VK([[469,470],[470,471],[471,472],[472,469]]),faceOval:VK([[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]])},HK=Object.entries(GK).map(e=>{let[t,n]=e;return n.map(e=>[e,t])}).flat(),jK=(new Map(HK),[61,146,91,181,84,17,314,405,321,375,291,185,40,39,37,0,267,269,270,409,78,95,88,178,87,14,317,402,318,324,308,191,80,81,82,13,312,311,310,415,76,77,90,180,85,16,315,404,320,307,306,184,74,73,72,11,302,303,304,408,62,96,89,179,86,15,316,403,319,325,292,183,42,41,38,12,268,271,272,407]),qK=[33,7,163,144,145,153,154,155,133,246,161,160,159,158,157,173,130,25,110,24,23,22,26,112,243,247,30,29,27,28,56,190,226,31,228,229,230,231,232,233,244,113,225,224,223,222,221,189,35,124,46,53,52,65,143,111,117,118,119,120,121,128,245,156,70,63,105,66,107,55,193],XK=[263,249,390,373,374,380,381,382,362,466,388,387,386,385,384,398,359,255,339,254,253,252,256,341,463,467,260,259,257,258,286,414,446,261,448,449,450,451,452,453,464,342,445,444,443,442,441,413,265,353,276,283,282,295,372,340,346,347,348,349,350,357,465,383,300,293,334,296,336,285,417];function KK(e,t){var n,a,r,i,s,o,l,u,d;if(!UK.drawLabels||0===(null==(n=UK.faceLabels)?void 0:n.length))return;let p=UK.faceLabels.slice();if(p=NK(p,"[id]",e.id.toFixed(0)),e.score&&(p=NK(p,"[score]",100*e.score)),e.gender&&(p=NK(p,"[gender]",e.gender)),e.genderScore&&(p=NK(p,"[genderScore]",100*e.genderScore)),e.age&&(p=NK(p,"[age]",e.age)),e.distance&&(p=NK(p,"[distance]",100*e.distance)),e.real&&(p=NK(p,"[real]",100*e.real)),e.live&&(p=NK(p,"[live]",100*e.live)),e.emotion&&e.emotion.length>0){const t=e.emotion.map(e=>`${Math.trunc(100*e.score)}% ${e.emotion}`);t.length>3&&(t.length=3),p=NK(p,"[emotions]",t.join(" "))}(null==(r=null==(a=e.rotation)?void 0:a.angle)?void 0:r.roll)&&(p=NK(p,"[roll]",SK(e.rotation.angle.roll))),(null==(s=null==(i=e.rotation)?void 0:i.angle)?void 0:s.yaw)&&(p=NK(p,"[yaw]",SK(e.rotation.angle.yaw))),(null==(l=null==(o=e.rotation)?void 0:o.angle)?void 0:l.pitch)&&(p=NK(p,"[pitch]",SK(e.rotation.angle.pitch))),(null==(d=null==(u=e.rotation)?void 0:u.gaze)?void 0:d.bearing)&&(p=NK(p,"[gaze]",SK(e.rotation.gaze.bearing))),TK(t,p,e.box[0],e.box[1],UK)}function ZK(e,t){var n;if(UK.drawGaze&&(null==(n=e.rotation)?void 0:n.angle)&&"undefined"!==typeof Path2D){t.strokeStyle="pink";const n=e.box[0]+e.box[2]/2-e.box[3]*SK(e.rotation.angle.yaw)/90,a=e.box[1]+e.box[3]/2+e.box[2]*SK(e.rotation.angle.pitch)/90,r=new Path2D(`\n      M ${e.box[0]+e.box[2]/2} ${e.box[1]}\n      C\n        ${n} ${e.box[1]},\n        ${n} ${e.box[1]+e.box[3]},\n        ${e.box[0]+e.box[2]/2} ${e.box[1]+e.box[3]}\n    `),i=new Path2D(`\n      M ${e.box[0]} ${e.box[1]+e.box[3]/2}\n      C \n        ${e.box[0]} ${a},\n        ${e.box[0]+e.box[2]} ${a},\n        ${e.box[0]+e.box[2]} ${e.box[1]+e.box[3]/2}\n    `);t.stroke(i),t.stroke(r)}}function YK(e,t){var n;if(UK.drawGaze&&(null==(n=e.rotation)?void 0:n.gaze.strength)&&e.rotation.gaze.bearing&&e.annotations.leftEyeIris&&e.annotations.rightEyeIris&&e.annotations.leftEyeIris[0]&&e.annotations.rightEyeIris[0]){t.strokeStyle="pink",t.fillStyle="pink";const n=[e.annotations.leftEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.leftEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];FK(t,[e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1]],[n[0],n[1]],4);const a=[e.annotations.rightEyeIris[0][0]+Math.sin(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[3],e.annotations.rightEyeIris[0][1]+Math.cos(e.rotation.gaze.bearing)*e.rotation.gaze.strength*e.box[2]];FK(t,[e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1]],[a[0],a[1]],4)}}function JK(e,t){if(UK.drawPolygons&&e.mesh.length>=468){t.lineWidth=1;for(let n=0;n<WK.length/3;n++){$K(t,[WK[3*n+0],WK[3*n+1],WK[3*n+2]].map(t=>e.mesh[t]),UK)}!function(e,t){var n,a,r,i;if((null==(n=e.annotations)?void 0:n.leftEyeIris)&&(null==(a=e.annotations)?void 0:a.leftEyeIris[0])){t.strokeStyle=UK.useDepth?"rgba(255, 200, 255, 0.3)":UK.color,t.beginPath();const n=Math.abs(e.annotations.leftEyeIris[3][0]-e.annotations.leftEyeIris[1][0])/2,a=Math.abs(e.annotations.leftEyeIris[4][1]-e.annotations.leftEyeIris[2][1])/2;t.ellipse(e.annotations.leftEyeIris[0][0],e.annotations.leftEyeIris[0][1],n,a,0,0,2*Math.PI),t.stroke(),UK.fillPolygons&&(t.fillStyle=UK.useDepth?"rgba(255, 255, 200, 0.3)":UK.color,t.fill())}if((null==(r=e.annotations)?void 0:r.rightEyeIris)&&(null==(i=e.annotations)?void 0:i.rightEyeIris[0])){t.strokeStyle=UK.useDepth?"rgba(255, 200, 255, 0.3)":UK.color,t.beginPath();const n=Math.abs(e.annotations.rightEyeIris[3][0]-e.annotations.rightEyeIris[1][0])/2,a=Math.abs(e.annotations.rightEyeIris[4][1]-e.annotations.rightEyeIris[2][1])/2;t.ellipse(e.annotations.rightEyeIris[0][0],e.annotations.rightEyeIris[0][1],n,a,0,0,2*Math.PI),t.stroke(),UK.fillPolygons&&(t.fillStyle=UK.useDepth?"rgba(255, 255, 200, 0.3)":UK.color,t.fill())}}(e,t)}}function QK(e,t){if(UK.drawPoints)if((null==e?void 0:e.mesh.length)>=468)for(let n=0;n<e.mesh.length;n++)RK(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2],UK),UK.drawAttention&&(jK.includes(n)&&RK(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]+127,UK),qK.includes(n)&&RK(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,UK),XK.includes(n)&&RK(t,e.mesh[n][0],e.mesh[n][1],e.mesh[n][2]-127,UK));else for(const[n,a]of Object.entries((null==e?void 0:e.annotations)||{})){if(!(null==a?void 0:a[0]))continue;const e=a[0];RK(t,e[0],e[1],0,UK),UK.drawLabels&&TK(t,n,e[0],e[1],UK)}}function eZ(e,t){UK.drawBoxes&&EK(t,e.box[0],e.box[1],e.box[2],e.box[3],UK)}function tZ(e,t,n){if(UK=Lq(_K,n),!t||!e)return;const a=IK(e);if(a){a.font=UK.font,a.strokeStyle=UK.color,a.fillStyle=UK.color;for(const e of t)eZ(e,a),KK(e,a),e.mesh&&e.mesh.length>0&&(QK(e,a),JK(e,a),ZK(e,a),YK(e,a))}}function nZ(e,t,n){var a,r;const i=Lq(_K,n);if(!t||!e)return;const s=IK(e);if(s){s.lineJoin="round";for(let e=0;e<t.length;e++){if(s.strokeStyle=i.color,s.fillStyle=i.color,s.lineWidth=i.lineWidth,s.font=i.font,i.drawBoxes&&t[e].box&&4===t[e].box.length&&(EK(s,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],i),i.drawLabels&&(null==(a=i.bodyLabels)?void 0:a.length)>0)){let n=i.bodyLabels.slice();n=NK(n,"[id]",t[e].id.toFixed(0)),n=NK(n,"[score]",100*t[e].score),TK(s,n,t[e].box[0],t[e].box[1],i)}if(i.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(s.fillStyle=CK(t[e].keypoints[n].position[2],i),RK(s,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,i));if(i.drawLabels&&(null==(r=i.bodyPartLabels)?void 0:r.length)>0&&t[e].keypoints){s.font=i.font;for(const n of t[e].keypoints){if(!n.score||0===n.score)continue;let e=i.bodyPartLabels.slice();e=NK(e,"[label]",n.part),e=NK(e,"[score]",100*n.score),TK(s,e,n.position[0],n.position[1],i)}}if(i.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)MK(s,e,i)}}}function aZ(e,t,n){var a,r;const i=Lq(_K,n);if(!t||!e)return;const s=IK(e);if(s){s.lineJoin="round",s.font=i.font;for(const e of t){if(i.drawBoxes){if(s.strokeStyle=i.color,s.fillStyle=i.color,EK(s,e.box[0],e.box[1],e.box[2],e.box[3],i),i.drawLabels&&(null==(a=i.handLabels)?void 0:a.length)>0){let t=i.handLabels.slice();t=NK(t,"[id]",e.id.toFixed(0)),t=NK(t,"[label]",e.label),t=NK(t,"[score]",100*e.score),TK(s,t,e.box[0],e.box[1],i)}s.stroke()}if(i.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)s.fillStyle=CK(t[2],i),RK(s,t[0],t[1],0,i);if(i.drawLabels&&e.annotations&&(null==(r=i.fingerLabels)?void 0:r.length)>0)for(const[t,n]of Object.entries(e.annotations)){let e=i.fingerLabels.slice();e=NK(e,"[label]",t),TK(s,e,n[n.length-1][0],n[n.length-1][1],i)}if(i.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++){s.beginPath();const n=e[t][2]||0;s.strokeStyle=CK(t*n,i),s.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),s.lineTo(e[t][0],e[t][1]),s.stroke()}};s.lineWidth=i.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}function rZ(e,t,n){var a;const r=Lq(_K,n);if(!t||!e)return;const i=IK(e);if(i){i.lineJoin="round",i.font=r.font;for(const e of t)if(r.drawBoxes){if(i.strokeStyle=r.color,i.fillStyle=r.color,EK(i,e.box[0],e.box[1],e.box[2],e.box[3],r),r.drawLabels&&(null==(a=r.objectLabels)?void 0:a.length)>0){let t=r.objectLabels.slice();t=NK(t,"[id]",e.id.toFixed(0)),t=NK(t,"[label]",e.label),t=NK(t,"[score]",100*e.score),TK(i,t,e.box[0],e.box[1],r)}i.stroke()}}}function iZ(e,t,n){var a;const r=Lq(_K,n);if(t&&e&&r.drawGestures&&(null==(a=r.gestureLabels)?void 0:a.length)>0){const n=IK(e);if(!n)return;n.font=r.font,n.fillStyle=r.color;let a=1;for(let e=0;e<t.length;e++){const[i,s]=Object.entries(t[e]);if(s.length>1&&s[1].length>0){const e=i[1]>0?`#${i[1]}`:"";let t=r.gestureLabels.slice();t=NK(t,"[where]",i[0]),t=NK(t,"[who]",e),t=NK(t,"[what]",s[1]),TK(n,t,8,2+a*r.lineHeight,r),a+=1}}}}var sZ={face:"face\n    confidence: [score]%\n    [gender] [genderScore]%\n    age: [age] years\n    distance: [distance]cm\n    real: [real]%\n    live: [live]%\n    [emotions]\n    roll: [roll]\xb0 yaw:[yaw]\xb0 pitch:[pitch]\xb0\n    gaze: [gaze]\xb0",body:"body [score]%",bodyPart:"[label] [score]%",object:"[label] [score]%",hand:"[label] [score]%",finger:"[label]",gesture:"[where] [who]: [what]"},oZ=0;function lZ(e,t,n){const a=Lq(_K,n);if(!t||!e)return;const r=IK(e);if(r){r.lineJoin="round",r.font=a.font;for(let e=0;e<t.length;e++)if(a.drawBoxes){if(r.strokeStyle=a.color,r.fillStyle=a.color,EK(r,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels){const n=`person #${e}`;a.shadowColor&&""!==a.shadowColor&&(r.fillStyle=a.shadowColor,r.fillText(n,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),r.fillStyle=a.labelColor,r.fillText(n,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2])}r.stroke()}}}function uZ(e,t){if(!e||!t)return;const n=IK(t);n&&n.drawImage(e,0,0)}async function dZ(e,t){e&&t&&iX.browser&&await mf.toPixels(e,t)}async function pZ(e,t,n){if(!(null==t?void 0:t.performance)||!e)return null;const a=Dq(),r=Lq(_K,n),i=Promise.all([tZ(e,t.face,r),nZ(e,t.body,r),aZ(e,t.hand,r),rZ(e,t.object,r),iZ(e,t.gesture,r)]);return oZ=iX.perfadd?oZ+Math.round(Dq()-a):Math.round(Dq()-a),t.performance.draw=oZ,i}function hZ(){_K.faceLabels=sZ.face,_K.bodyLabels=sZ.body,_K.bodyPartLabels=sZ.bodyPart,_K.handLabels=sZ.hand,_K.fingerLabels=sZ.finger,_K.objectLabels=sZ.object,_K.gestureLabels=sZ.gesture}var cZ={};s(cZ,{connected:()=>yZ,kpt:()=>gZ});var fZ,mZ,gZ=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],yZ={shoulders:["leftShoulder","rightShoulder"],hips:["rightHip","leftHip"],mouth:["leftMouth","rightMouth"],leftLegUpper:["leftHip","leftKnee"],leftLegLower:["leftKnee","leftAnkle"],leftFoot:["leftAnkle","leftHeel","leftFoot"],leftTorso:["leftShoulder","leftHip"],leftArmUpper:["leftShoulder","leftElbow"],leftArmLower:["leftElbow","leftWrist"],leftHand:["leftWrist","leftPalm"],leftHandPinky:["leftPalm","leftPinky"],leftHandIndex:["leftPalm","leftIndex"],leftHandThumb:["leftPalm","leftThumb"],leftEyeOutline:["leftEyeInside","leftEyeOutside"],rightLegUpper:["rightHip","rightKnee"],rightLegLower:["rightKnee","rightAnkle"],rightFoot:["rightAnkle","rightHeel","rightFoot"],rightTorso:["rightShoulder","rightHip"],rightArmUpper:["rightShoulder","rightElbow"],rightArmLower:["rightElbow","rightWrist"],rightHand:["rightWrist","rightPalm"],rightHandPinky:["rightPalm","rightPinky"],rightHandIndex:["rightPalm","rightIndex"],rightHandThumb:["rightPalm","rightThumb"],rightEyeOutline:["rightEyeInside","rightEyeOutside"]},AZ=224,xZ=[8,16,32,32,32];async function bZ(e){if(iX.initial&&(fZ=null),!fZ&&e.body.detector&&e.body.detector.modelPath){const t=(null==(fZ=await mK(e.body.detector.modelPath))?void 0:fZ.executor)?Object.values(fZ.modelSignature.inputs):void 0;AZ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}else e.debug&&fZ&&Oq("cached model:",fZ.modelUrl);return function(){const e=[];let t=0;for(;t<5;){let n=0,a=t;for(;a<xZ.length&&xZ[a]===xZ[t];)n+=2,a++;const r=xZ[t],i=Math.ceil(AZ/r),s=Math.ceil(AZ/r);for(let t=0;t<i;++t)for(let a=0;a<s;++a)for(let r=0;r<n;++r)e.push({x:(a+.5)/s,y:(t+.5)/i});t=a}mZ={x:Dp(e.map(e=>e.x)),y:Dp(e.map(e=>e.y))}}(),fZ}var vZ,wZ=[5,5];async function kZ(e,t,n,a){var r,i;const s=[],o={};o.boxes=function(e,t){return rs(()=>{const n=Rp(e,12,1);let a=Mp(n[0]),r=Mp(n[1]),i=Mp(n[2]),s=Mp(n[3]);a=xo(vo(a,AZ),t.x),r=xo(vo(r,AZ),t.y),i=wo(vo(i,AZ),wZ[0]),s=wo(vo(s,AZ),wZ[1]);const o=ju(a,vo(i,2)),l=ju(r,vo(s,2)),u=xo(o,i),d=xo(l,s);return Fp([o,l,u,d],1)})}(e,mZ),o.scores=nl(t),o.nms=await kc.nonMaxSuppressionAsync(o.boxes,o.scores,1,(null==(r=n.body.detector)?void 0:r.minConfidence)||.1,(null==(i=n.body.detector)?void 0:i.iouThreshold)||.1);const l=await o.nms.data(),u=await o.scores.data(),d=await o.boxes.array();for(const p of Array.from(l)){const e=u[p],t=d[p],n={score:e,boxRaw:t,box:[Math.round(t[0]*a[0]),Math.round(t[1]*a[1]),Math.round(t[2]*a[0]),Math.round(t[3]*a[1])]};s.push(n)}return Object.keys(o).forEach(e=>is(o[e])),s}function IZ(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1];const n=[e.map(e=>e[0]),e.map(e=>e[1])],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],i=[a[0],a[1],r[0]-a[0],r[1]-a[1]];return{box:i,boxRaw:[i[0]/t[0],i[1]/t[1],i[2]/t[0],i[3]/t[1]]}}function SZ(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1];const n=[e.map(e=>e[0]),e.map(e=>e[1])],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],i=[(a[0]+r[0])/2,(a[1]+r[1])/2],s=Math.max(i[0]-a[0],i[1]-a[1],-i[0]+r[0],-i[1]+r[1]),o=[Math.trunc(i[0]-s),Math.trunc(i[1]-s),Math.trunc(2*s),Math.trunc(2*s)];return{box:o,boxRaw:[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]]}}function NZ(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}var CZ=256,TZ=Number.MAX_SAFE_INTEGER,RZ=["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],EZ=[],$Z=[[0,0],[0,0],[0,0],[0,0]],MZ=0,FZ=e=>1-1/(1+Math.exp(e));function _Z(e,t,n){var a,r;const i={};if(!(null==(a=null==e?void 0:e.shape)?void 0:a[1])||!(null==(r=null==e?void 0:e.shape)?void 0:r[2]))return e;let s;if(n&&(i.cropped=kc.cropAndResize(e,[n],[0],[e.shape[1],e.shape[2]])),e.shape[1]!==e.shape[2]){const n=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],a=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];$Z=[[0,0],n,a,[0,0]],i.pad=bd(i.cropped||e,$Z),i.resize=kc.resizeBilinear(i.pad,[t,t]),s=vo(i.resize,xK.tf255)}else e.shape[1]!==t?(i.resize=kc.resizeBilinear(i.cropped||e,[t,t]),s=vo(i.resize,xK.tf255)):s=vo(i.cropped||e,xK.tf255);return Object.keys(i).forEach(e=>is(i[e])),s}async function PZ(e,t,n){if(!(null==vZ?void 0:vZ.executor))return null;const a={};[a.ld,a.segmentation,a.heatmap,a.world,a.poseflag]=null==vZ?void 0:vZ.execute(e,RZ);const r=(await a.poseflag.data())[0],i=await a.ld.data(),s=await a.world.data();Object.keys(a).forEach(e=>is(a[e]));const o=[];for(let p=0;p<i.length/5;p++){const e=FZ(i[5*p+3]),t=FZ(i[5*p+4]),a=Math.trunc(100*e*t*r)/100,l=[i[5*p+0]/CZ,i[5*p+1]/CZ,i[5*p+2]+0],u=[Math.trunc(n[0]*l[0]),Math.trunc(n[1]*l[1]),l[2]],d=[s[5*p+0],s[5*p+1],s[5*p+2]+0];o.push({part:gZ[p],positionRaw:l,position:u,distance:d,score:a})}if(r<(t.body.minConfidence||0))return null;!function(e){const t=e.find(e=>"leftPalm"===e.part),n=e.find(e=>"leftWrist"===e.part),a=e.find(e=>"leftIndex"===e.part);t.position[2]=((n.position[2]||0)+(a.position[2]||0))/2;const r=e.find(e=>"rightPalm"===e.part),i=e.find(e=>"rightWrist"===e.part),s=e.find(e=>"rightIndex"===e.part);r.position[2]=((i.position[2]||0)+(s.position[2]||0))/2}(o);const l=function(e,t,n){for(const a of e)a.position=[Math.trunc(a.position[0]*(t[0]+$Z[2][0]+$Z[2][1])/t[0]-$Z[2][0]),Math.trunc(a.position[1]*(t[1]+$Z[1][0]+$Z[1][1])/t[1]-$Z[1][0]),a.position[2]],a.positionRaw=[a.position[0]/t[0],a.position[1]/t[1],2*a.position[2]/(t[0]+t[1])];if(n){const a=n[2]-n[0],r=n[3]-n[1];for(const i of e)i.positionRaw=[i.positionRaw[0]/r+n[1],i.positionRaw[1]/a+n[0],i.positionRaw[2]],i.position=[Math.trunc(i.positionRaw[0]*t[0]),Math.trunc(i.positionRaw[1]*t[1]),i.positionRaw[2]]}return e}(o,n),u=IZ(l.map(e=>e.position),[n[0],n[1]]),d={};for(const[p,h]of Object.entries(yZ)){const e=[];for(let t=0;t<h.length-1;t++){const n=l.find(e=>e.part===h[t]),a=l.find(e=>e.part===h[t+1]);n&&a&&e.push([n.position,a.position])}d[p]=e}return{id:0,score:Math.trunc(100*r)/100,box:u.box,boxRaw:u.boxRaw,keypoints:l,annotations:d}}async function OZ(e,t){var n,a,r;const i=[e.shape[2]||0,e.shape[1]||0],s=(t.body.skipTime||0)>Dq()-MZ,o=TZ<(t.body.skipFrames||0);if(t.skipAllowed&&s&&o&&null!==EZ)TZ++;else{let s=[];if(null==(a=null==(n=t.body)?void 0:n.detector)?void 0:a.enabled){const n=_Z(e,224);s=await async function(e,t,n){const a={};a.res=null==fZ?void 0:fZ.execute(e,["Identity"]),a.logitsRaw=al(a.res,[0,0,0],[1,-1,1]),a.boxesRaw=al(a.res,[0,0,1],[1,-1,-1]),a.logits=Mp(a.logitsRaw),a.boxes=Mp(a.boxesRaw);const r=await kZ(a.boxes,a.logits,t,n);return Object.keys(a).forEach(e=>is(a[e])),r}(n,t,i),is(n)}else s=[{box:[0,0,0,0],boxRaw:[0,0,1,1],score:0}];for(let n=0;n<s.length;n++){const a=_Z(e,256,null==(r=s[n])?void 0:r.boxRaw);EZ.length=0;const o=await PZ(a,t,i);is(a),o&&(o.id=n,EZ.push(o))}MZ=Dq(),TZ=0}return EZ}var DZ,zZ=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],LZ=0,WZ=[],BZ=0,VZ=Number.MAX_SAFE_INTEGER;async function UZ(e,t){if(!(null==DZ?void 0:DZ.executor))return[];const n=(t.object.skipTime||0)>Dq()-BZ,a=VZ<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&WZ.length>0?(VZ++,WZ):(VZ=0,new Promise(async n=>{const a=[e.shape[2]||0,e.shape[1]||0],r=kc.resizeBilinear(e,[LZ,LZ]),i=t.object.enabled?null==DZ?void 0:DZ.execute(r,["tower_0/detections"]):null;BZ=Dq(),is(r);const s=await async function(e,t,n){if(!e)return[];const a={},r=[],i=await e.array();a.squeeze=Mp(e);const s=Rp(a.squeeze,6,1);a.stack=Fp([s[1],s[0],s[3],s[2]],1),a.boxes=Mp(a.stack),a.scores=Mp(s[4]),a.classes=Mp(s[5]),is([e,...s]),a.nms=await kc.nonMaxSuppressionAsync(a.boxes,a.scores,n.object.maxDetected||0,n.object.iouThreshold,n.object.minConfidence||0);const o=await a.nms.data();let l=0;for(const u of Array.from(o)){const e=Math.trunc(100*i[0][u][4])/100,n=i[0][u][5];if(Number.isNaN(n))continue;const a=zZ[n].label,[s,o]=[i[0][u][0]/LZ,i[0][u][1]/LZ],d=[s,o,i[0][u][2]/LZ-s,i[0][u][3]/LZ-o],p=[Math.trunc(d[0]*t[0]),Math.trunc(d[1]*t[1]),Math.trunc(d[2]*t[0]),Math.trunc(d[3]*t[1])];r.push({id:l++,score:e,class:n,label:a,box:p,boxRaw:d})}return Object.keys(a).forEach(e=>is(a[e])),r}(i,a,t);WZ=s,n(s)}))}var GZ={};s(GZ,{connected:()=>qZ,kpt:()=>jZ});var HZ,jZ=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],qZ={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},XZ=0,KZ={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},ZZ=Number.MAX_SAFE_INTEGER;async function YZ(e,t){const[n,a]=e.shape,r=Yo(e,[a*n]),i=su(r,0),s=(await i.data())[0];if(s>t){const e=Ro(r,0),t=hd(e,n),a=(await t.data())[0],o=vo(e,n),l=(await o.data())[0];return is([r,i,e,t,o]),[a,l,s]}return is([r,i]),[0,0,s]}async function JZ(e,t){if(!(null==HZ?void 0:HZ.executor)||!(null==HZ?void 0:HZ.inputs[0].shape))return[];const n=(t.body.skipTime||0)>Dq()-XZ,a=ZZ<(t.body.skipFrames||0);return t.skipAllowed&&n&&a&&Object.keys(KZ.keypoints).length>0?(ZZ++,[KZ]):(ZZ=0,new Promise(async n=>{const a=rs(()=>{var t,n;const a=kc.resizeBilinear(e,[(null==(t=null==HZ?void 0:HZ.inputs[0].shape)?void 0:t[2])||0,(null==(n=null==HZ?void 0:HZ.inputs[0].shape)?void 0:n[1])||0],!1),r=wo(a,xK.tf2);return ju(r,xK.tf1)});let r;if(t.body.enabled&&(r=null==HZ?void 0:HZ.execute(a)),XZ=Dq(),is(a),r){KZ.keypoints.length=0;const n=Mp(r);is(r);const a=Jp(n,2);is(n);for(let r=0;r<a.length;r++){const[n,i,s]=await YZ(a[r],t.body.minConfidence);s>(t.body.minConfidence||0)&&KZ.keypoints.push({score:Math.round(100*s)/100,part:jZ[r],positionRaw:[n/HZ.inputs[0].shape[2],i/HZ.inputs[0].shape[1]],position:[Math.round(e.shape[2]*n/HZ.inputs[0].shape[2]),Math.round(e.shape[1]*i/HZ.inputs[0].shape[1])]})}a.forEach(e=>is(e))}KZ.score=KZ.keypoints.reduce((e,t)=>t.score>e?t.score:e,0);const i=KZ.keypoints.map(e=>e.position[0]),s=KZ.keypoints.map(e=>e.position[1]);KZ.box=[Math.min(...i),Math.min(...s),Math.max(...i)-Math.min(...i),Math.max(...s)-Math.min(...s)];const o=KZ.keypoints.map(e=>e.positionRaw[0]),l=KZ.keypoints.map(e=>e.positionRaw[1]);KZ.boxRaw=[Math.min(...o),Math.min(...l),Math.max(...o)-Math.min(...o),Math.max(...l)-Math.min(...l)];for(const[e,u]of Object.entries(qZ)){const n=[];for(let e=0;e<u.length-1;e++){const a=KZ.keypoints.find(t=>t.part===u[e]),r=KZ.keypoints.find(t=>t.part===u[e+1]);a&&r&&a.score>(t.body.minConfidence||0)&&r.score>(t.body.minConfidence||0)&&n.push([a.position,r.position])}KZ.annotations[e]=n}n([KZ])}))}var QZ=e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])],eY=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2,1],tY=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],nY=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],aY=(e,t,n)=>({startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],landmarks:e.landmarks.map(e=>[(e[0]+n[0])*t[0],(e[1]+n[1])*t[1]]),confidence:e.confidence}),rY=(e,t,n)=>{const a=t.shape[1],r=t.shape[2],i=[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r],s=kc.cropAndResize(t,[i],[0],n),o=vo(s,xK.tf255);return is(s),o},iY=(e,t)=>{const n=eY(e),a=QZ(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence,size:a}},sY=e=>{const t=eY(e),n=QZ(e),a=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-a),Math.round(t[1]-a)],endPoint:[Math.round(t[0]+a),Math.round(t[1]+a)],landmarks:e.landmarks,confidence:e.confidence,size:[Math.round(n[0]),Math.round(n[1])]}},oY=[[1,0,0],[0,1,0],[0,0,1]],lY=(e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n},uY=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],dY=(e,t)=>{let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n},pY=(e,t)=>{const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n},hY=(e,t)=>{const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let i=0;i<a;i++)n[r].push(dY(e[r],pY(t,i)))}return n},cY=(e,t)=>{const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],i=uY(t[0],t[1]),s=hY(i,r),o=uY(-t[0],-t[1]);return hY(s,o)},fY=(e,t)=>[dY(e,t[0]),dY(e,t[1])];function mY(e,t,n,a,r){const i=QZ(t),s=e.map(e=>[i[0]/r*(e[0]-r/2),i[1]/r*(e[1]-r/2),e[2]||0]),o=n&&0!==n&&Math.abs(n)>.2,l=o?cY(n,[0,0]):oY,u=o?s.map(e=>[...fY(e,l),e[2]]):s,d=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-dY(t[0],n),-dY(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]})(a):oY,p=eY(t),h=[dY(p,d[0]),dY(p,d[1])];return u.map(e=>[Math.trunc(e[0]+h[0]),Math.trunc(e[1]+h[1]),Math.trunc(e[2]||0)])}function gY(e,t,n,a){const r=t.landmarks.length>=OK.count?OK.symmetryLine:DK.symmetryLine;let i,s=0,o=oY;if(e&&iX.kernels.includes("rotatewithoffset")){s=lY(t.landmarks[r[0]],t.landmarks[r[1]]);if(s&&0!==s&&Math.abs(s)>.2){const e=eY(t),r=[e[0]/n.shape[2],e[1]/n.shape[1]],l=kc.rotateWithOffset(n,s,0,[r[0],r[1]]);o=cY(-s,e),i=rY(t,l,[a,a]),is(l)}else i=rY(t,n,[a,a])}else i=rY(t,n,[a,a]);return[s,o,i]}var yY,AY,xY=(e,t)=>{const n=(e=>{const t=e.map(e=>e[0]),n=e.map(e=>e[1]);return[Math.min(...t)+(Math.max(...t)-Math.min(...t))/2,Math.min(...n)+(Math.max(...n)-Math.min(...n))/2]})(e),a=QZ(t);return{startPoint:[n[0]-a[0]/2,n[1]-a[1]/2],endPoint:[n[0]+a[0]/2,n[1]+a[1]/2]}},bY=null,vY=0,wY=null,kY=()=>vY;async function IY(e){var t;return iX.initial&&(yY=null),yY?e.debug&&Oq("cached model:",yY.modelUrl):yY=await mK(null==(t=e.face.detector)?void 0:t.modelPath),vY=yY.executor&&yY.inputs[0].shape?yY.inputs[0].shape[2]:256,wY=uu(vY,"int32"),bY=zp(function(e){const t=192===e?{strides:[4],anchors:[1]}:{strides:[e/16,e/8],anchors:[2,6]},n=[];for(let a=0;a<t.strides.length;a++){const r=t.strides[a],i=Math.floor((e+r-1)/r),s=Math.floor((e+r-1)/r),o=t.anchors[a];for(let e=0;e<i;e++){const t=r*(e+.5);for(let e=0;e<s;e++){const a=r*(e+.5);for(let e=0;e<o;e++)n.push([a,t])}}}return n}(vY)),yY}async function SY(e,t){var n,a,r,i,s,o,l,u,d;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return[];const p={};let h=[0,0],c=[1,1];if(null==(a=null==(n=null==t?void 0:t.face)?void 0:n.detector)?void 0:a.square){const t=Math.max(e.shape[2],e.shape[1]);h=[Math.floor((t-e.shape[2])/2),Math.floor((t-e.shape[1])/2)],p.padded=bd(e,[[0,0],[h[1],h[1]],[h[0],h[0]],[0,0]]),c=[e.shape[2]/t,e.shape[1]/t],h=[h[0]/vY,h[1]/vY]}else p.padded=e.clone();p.resized=kc.resizeBilinear(p.padded,[vY,vY]),p.div=vo(p.resized,xK.tf127),p.normalized=ju(p.div,xK.tf1);const f=null==yY?void 0:yY.execute(p.normalized);if(Array.isArray(f)&&f.length>2){const e=f.sort((e,t)=>e.size-t.size);p.concat384=el([e[0],e[2]],2),p.concat512=el([e[1],e[3]],2),p.concat=el([p.concat512,p.concat384],1),p.batch=Mp(p.concat,[0])}else Array.isArray(f)?p.batch=Mp(f[0]):p.batch=Mp(f);is(f),p.boxes=function(e){if(!bY||!wY)return od([0,0]);const t={};t.boxStarts=al(e,[0,1],[-1,2]),t.centers=xo(t.boxStarts,bY),t.boxSizes=al(e,[0,3],[-1,2]),t.boxSizesNormalized=vo(t.boxSizes,wY),t.centersNormalized=vo(t.centers,wY),t.halfBoxSize=vo(t.boxSizesNormalized,xK.tf2),t.starts=ju(t.centersNormalized,t.halfBoxSize),t.ends=xo(t.centersNormalized,t.halfBoxSize),t.startNormalized=wo(t.starts,wY),t.endNormalized=wo(t.ends,wY);const n=bl([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach(e=>is(t[e])),n}(p.batch),p.logits=al(p.batch,[0,0],[-1,1]),p.sigmoid=nl(p.logits),p.scores=Mp(p.sigmoid),p.nms=await kc.nonMaxSuppressionAsync(p.boxes,p.scores,(null==(r=t.face.detector)?void 0:r.maxDetected)||0,(null==(i=t.face.detector)?void 0:i.iouThreshold)||0,(null==(s=t.face.detector)?void 0:s.minConfidence)||0);const m=await p.nms.array(),g=[],y=await p.scores.data();for(let A=0;A<m.length;A++){const n=y[m[A]];if(n>((null==(o=t.face.detector)?void 0:o.minConfidence)||0)){const a={};a.bbox=al(p.boxes,[m[A],0],[1,-1]),a.slice=al(p.batch,[m[A],5],[1,-1]),a.squeeze=Mp(a.slice),a.landmarks=Yo(a.squeeze,[6,-1]);const r=await a.bbox.data(),i=[r[0]*c[0]-h[0],r[1]*c[1]-h[1],r[2]*c[0]-h[0],r[3]*c[1]-h[1]],s={startPoint:[i[0],i[1]],endPoint:[i[2],i[3]],landmarks:await a.landmarks.array(),confidence:n};a.anchor=al(bY,[m[A],0],[1,2]);const o=await a.anchor.data(),f=aY(s,[(e.shape[2]||0)/vY,(e.shape[1]||0)/vY],o),y=iY(f,(null==(l=t.face.detector)?void 0:l.scale)||1.4),x=sY(y);x.size[0]>((null==(u=t.face.detector)?void 0:u.minSize)||0)&&x.size[1]>((null==(d=t.face.detector)?void 0:d.minSize)||0)&&g.push(x),Object.keys(a).forEach(e=>is(a[e]))}}return Object.keys(p).forEach(e=>is(p[e])),g}var NY=0,CY=PK.leftEyeLower0,TY=PK.rightEyeLower0,RY={leftBounds:[CY[0],CY[CY.length-1]],rightBounds:[TY[0],TY[TY.length-1]]},EY=3,$Y=4,MY=71,FY=76;function _Y(e,t,n,a){for(let r=0;r<zK.length;r++){const{key:i,indices:s}=zK[r],o=PK[`${n}${i}`];if(!a||a.includes(i))for(let n=0;n<s.length;n++){const a=s[n];e[o[n]]=[t[a][0],t[a][1],(t[a][2]+e[o[n]][2])/2]}}}var PY=function(e,t,n,a,r){let i=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2.3;const o=sY(iY((e=>{const t=e.map(e=>e[0]),n=e.map(e=>e[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}})([e[n],e[a]]),s)),l=QZ(o);let u=kc.cropAndResize(t,[[o.startPoint[1]/r,o.startPoint[0]/r,o.endPoint[1]/r,o.endPoint[0]/r]],[0],[NY,NY]);if(i&&iX.kernels.includes("flipleftright")){const e=kc.flipLeftRight(u);is(u),u=e}return{box:o,boxSize:l,crop:u}},OY=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=[];for(let i=0;i<FY;i++){const s=e[3*i],o=e[3*i+1],l=e[3*i+2];r.push([(a?1-s/NY:s/NY)*n[0]+t.startPoint[0],o/NY*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(MY)}},DY=(e,t,n)=>{const a=e[PK[`${n}EyeUpper0`][EY]][2],r=e[PK[`${n}EyeLower0`][$Y]][2],i=(a+r)/2;return t.map((e,t)=>{let n=i;return 2===t?n=a:4===t&&(n=r),[e[0],e[1],n]})};async function zY(e,t,n,a){var r,i;if(!(null==AY?void 0:AY.executor))return e;const{box:s,boxSize:o,crop:l}=PY(e,t,RY.leftBounds[0],RY.leftBounds[1],n,!0,(null==(r=a.face.iris)?void 0:r.scale)||2.3),{box:u,boxSize:d,crop:p}=PY(e,t,RY.rightBounds[0],RY.rightBounds[1],n,!0,(null==(i=a.face.iris)?void 0:i.scale)||2.3),h=el([l,p]);is(l),is(p);const c=AY.execute(h);is(h);const f=await c.data();is(c);const m=f.slice(0,3*FY),{rawCoords:g,iris:y}=OY(m,s,o,!0),A=f.slice(3*FY),{rawCoords:x,iris:b}=OY(A,u,d,!1),v=(e=>e[RY.leftBounds[0]][2]-e[RY.rightBounds[0]][2])(e);Math.abs(v)<30?(_Y(e,g,"left",null),_Y(e,x,"right",null)):v<1?_Y(e,g,"left",["EyeUpper0","EyeLower0"]):_Y(e,x,"right",["EyeUpper0","EyeLower0"]);const w=DY(e,y,"left"),k=DY(e,b,"right");return e.concat(w).concat(k)}async function LY(e,t){var n,a,r,i,s,o,l,u,d,p;const h={lips:await(null==(a=null==(n=t.filter(e=>160===e.size))?void 0:n[0])?void 0:a.data()),irisL:await(null==(i=null==(r=t.filter(e=>10===e.size))?void 0:r[0])?void 0:i.data()),eyeL:await(null==(o=null==(s=t.filter(e=>142===e.size))?void 0:s[0])?void 0:o.data()),irisR:await(null==(u=null==(l=t.filter(e=>10===e.size))?void 0:l[1])?void 0:u.data()),eyeR:await(null==(p=null==(d=t.filter(e=>142===e.size))?void 0:d[1])?void 0:p.data())};for(const m of Object.values(h))if(!m)return e;const c=qK.reduce((t,n)=>t+e[n][2],0)/qK.length;for(let m=0;m<h.irisL.length/2;m++)e.push([h.irisL[2*m+0],h.irisL[2*m+1],c]);const f=XK.reduce((t,n)=>t+e[n][2],0)/XK.length;for(let m=0;m<h.irisR.length/2;m++)e.push([h.irisR[2*m+0],h.irisR[2*m+1],f]);for(let m=0;m<h.eyeL.length/2;m++)e[qK[m]]=[h.eyeL[2*m+0],h.eyeL[2*m+1],e[qK[m]][2]];for(let m=0;m<h.eyeR.length/2;m++)e[XK[m]]=[h.eyeR[2*m+0],h.eyeR[2*m+1],e[XK[m]][2]];for(let m=0;m<h.lips.length/2;m++)e[jK[m]]=[h.lips[2*m+0],h.lips[2*m+1],e[jK[m]][2]];return e}var WY={boxes:[],skipped:Number.MAX_SAFE_INTEGER,timestamp:0},BY=null,VY=0;var UY,GY,HY=WK,jY=LK,qY=[],XY=[],KY=0,ZY=0,YY=Number.MAX_SAFE_INTEGER,JY=!1;async function QY(e,t,n,a){var r,i;if(!UY)return[];const s=YY<((null==(r=t.face.emotion)?void 0:r.skipFrames)||0),o=((null==(i=t.face.emotion)?void 0:i.skipTime)||0)>Dq()-ZY;return t.skipAllowed&&o&&s&&KY===a&&XY[n]&&XY[n].length>0?(YY++,XY[n]):(YY=0,new Promise(async r=>{var i,s,o;const l=[];if(null==(i=t.face.emotion)?void 0:i.enabled){const n={},a=(null==UY?void 0:UY.inputs[0].shape)?UY.inputs[0].shape[2]:0;if((null==(s=t.face.emotion)?void 0:s.crop)>0){const r=null==(o=t.face.emotion)?void 0:o.crop,i=[[r,r,1-r,1-r]];n.resize=kc.cropAndResize(e,i,[0],[a,a])}else n.resize=kc.resizeBilinear(e,[a,a],!1);JY?(n.mul=wo(n.resize,255),n.normalize=ju(n.mul,[103.939,116.779,123.68]),n.emotion=null==UY?void 0:UY.execute(n.normalize)):(n.channels=wo(n.resize,xK.rgb),n.grayscale=hu(n.channels,3,!0),n.grayscaleSub=ju(n.grayscale,xK.tf05),n.grayscaleMul=wo(n.grayscaleSub,xK.tf2),n.emotion=null==UY?void 0:UY.execute(n.grayscaleMul)),ZY=Dq();const r=await n.emotion.data();for(let e=0;e<r.length;e++)r[e]>(t.face.emotion.minConfidence||0)&&l.push({score:Math.min(.99,Math.trunc(100*r[e])/100),emotion:qY[e]});l.sort((e,t)=>t.score-e.score),Object.keys(n).forEach(e=>is(n[e]))}XY[n]=l,KY=a,r(l)}))}var eJ=[],tJ=0,nJ=0,aJ=Number.MAX_SAFE_INTEGER;async function rJ(e,t,n,a){var r,i,s,o;const l={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(!(null==GY?void 0:GY.executor))return l;const u=aJ<((null==(r=t.face.description)?void 0:r.skipFrames)||0),d=((null==(i=t.face.description)?void 0:i.skipTime)||0)>Dq()-tJ;return t.skipAllowed&&u&&d&&nJ===a&&(null==(s=null==eJ?void 0:eJ[n])?void 0:s.age)>0&&(null==(o=null==eJ?void 0:eJ[n])?void 0:o.genderScore)>0?(aJ++,eJ[n]):(aJ=0,new Promise(async r=>{var i;if(null==(i=t.face.description)?void 0:i.enabled){const n=function(e,t){var n,a;const r=e.image||e.tensor||e;if(!(null==GY?void 0:GY.inputs[0].shape))return r;let i;if((null==(n=t.face.description)?void 0:n.crop)>0){const e=null==(a=t.face.description)?void 0:a.crop,n=[[e,e,1-e,1-e]];i=kc.cropAndResize(r,n,[0],[GY.inputs[0].shape[2],GY.inputs[0].shape[1]])}else i=kc.resizeBilinear(r,[GY.inputs[0].shape[2],GY.inputs[0].shape[1]],!1);const s=wo(i,xK.tf255);return is(i),s}(e,t),a=null==GY?void 0:GY.execute(n);tJ=Dq(),is(n);const r=a.find(e=>1===e.shape[1]),i=await r.data(),s=Math.trunc(200*Math.abs(i[0]-.5))/100;s>(t.face.description.minConfidence||0)&&(l.gender=i[0]<=.5?"female":"male",l.genderScore=Math.min(.99,s));const o=Ro(a.find(e=>100===e.shape[1]),1),u=(await o.data())[0];is(o);const d=a.find(e=>100===e.shape[1]),p=await d.data();l.age=Math.round(p[u-1]>p[u+1]?10*u-100*p[u-1]:10*u+100*p[u+1])/10,(Number.isNaN(i[0])||Number.isNaN(p[0]))&&Oq("faceres error:",{model:GY,result:a});const h=a.find(e=>1024===e.shape[1]),c=h?await h.data():[];l.descriptor=Array.from(c),a.forEach(e=>is(e))}eJ[n]=l,nJ=a,r(l)}))}var iJ,sJ=.1;function oJ(e,t,n){let a=!1,r=n.length-1;for(let i=0;i<n.length;r=i++)n[i].y>t!==n[r].y>t&&e<(n[r].x-n[i].x)*(t-n[i].y)/(n[r].y-n[i].y)+n[i].x&&(a=!a);return a}async function lJ(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,a=await e.tensor.buffer();let r=[];for(const i of PK.silhouette)r.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});r=r.map(e=>({x:e.x>.5?e.x+sJ:e.x-sJ,y:e.y>.5?e.y+sJ:e.y-sJ}));for(let i=0;i<t;i++)for(let e=0;e<n;e++){oJ(i/t,e/t,r)||(a.set(.5*a.get(0,e,i,0),0,e,i,0),a.set(.5*a.get(0,e,i,1),0,e,i,1),a.set(.5*a.get(0,e,i,2),0,e,i,2))}return a.toTensor()}var uJ,dJ=[],pJ=Number.MAX_SAFE_INTEGER,hJ=0,cJ=0;async function fJ(e,t,n,a){var r,i;if(!(null==iJ?void 0:iJ.executor))return 0;const s=((null==(r=t.face.antispoof)?void 0:r.skipTime)||0)>Dq()-cJ,o=pJ<((null==(i=t.face.antispoof)?void 0:i.skipFrames)||0);return t.skipAllowed&&s&&o&&hJ===a&&dJ[n]?(pJ++,dJ[n]):(pJ=0,new Promise(async t=>{const r=kc.resizeBilinear(e,[(null==iJ?void 0:iJ.inputs[0].shape)?iJ.inputs[0].shape[2]:0,(null==iJ?void 0:iJ.inputs[0].shape)?iJ.inputs[0].shape[1]:0],!1),i=null==iJ?void 0:iJ.execute(r),s=(await i.data())[0];dJ[n]=Math.round(100*s)/100,hJ=a,cJ=Dq(),is([r,i]),t(dJ[n])}))}var mJ,gJ=[],yJ=Number.MAX_SAFE_INTEGER,AJ=0,xJ=0;async function bJ(e,t,n,a){var r,i;if(!(null==uJ?void 0:uJ.executor))return 0;const s=((null==(r=t.face.liveness)?void 0:r.skipTime)||0)>Dq()-xJ,o=yJ<((null==(i=t.face.liveness)?void 0:i.skipFrames)||0);return t.skipAllowed&&s&&o&&AJ===a&&gJ[n]?(yJ++,gJ[n]):(yJ=0,new Promise(async t=>{const r=kc.resizeBilinear(e,[(null==uJ?void 0:uJ.inputs[0].shape)?uJ.inputs[0].shape[2]:0,(null==uJ?void 0:uJ.inputs[0].shape)?uJ.inputs[0].shape[1]:0],!1),i=null==uJ?void 0:uJ.execute(r),s=(await i.data())[0];gJ[n]=Math.round(100*s)/100,AJ=a,xJ=Dq(),is([r,i]),t(gJ[n])}))}var vJ,wJ=[],kJ=["white","black","asian","indian","other"],IJ=[15,23,28,35.5,45.5,55.5,65],SJ=0,NJ=0,CJ=Number.MAX_SAFE_INTEGER;async function TJ(e,t,n,a){var r,i;if(!mJ)return{age:0,gender:"unknown",genderScore:0,race:[]};const s=CJ<((null==(r=t.face.gear)?void 0:r.skipFrames)||0),o=((null==(i=t.face.gear)?void 0:i.skipTime)||0)>Dq()-NJ;return t.skipAllowed&&o&&s&&SJ===a&&wJ[n]?(CJ++,wJ[n]):(CJ=0,new Promise(async r=>{var i,s,o,l;if(!(null==mJ?void 0:mJ.inputs[0].shape))return;const u={};let d=[[0,.1,.9,.9]];if((null==(i=t.face.gear)?void 0:i.crop)>0){const e=null==(s=t.face.gear)?void 0:s.crop;d=[[e,e,1-e,1-e]]}u.resize=kc.cropAndResize(e,d,[0],[mJ.inputs[0].shape[2],mJ.inputs[0].shape[1]]);const p={age:0,gender:"unknown",genderScore:0,race:[]};(null==(o=t.face.gear)?void 0:o.enabled)&&([u.age,u.gender,u.race]=mJ.execute(u.resize,["age_output","gender_output","race_output"]));const h=await u.gender.data();p.gender=h[0]>h[1]?"male":"female",p.genderScore=Math.round(100*(h[0]>h[1]?h[0]:h[1]))/100;const c=await u.race.data();for(let e=0;e<c.length;e++)c[e]>((null==(l=t.face.gear)?void 0:l.minConfidence)||.2)&&p.race.push({score:Math.round(100*c[e])/100,race:kJ[e]});p.race.sort((e,t)=>t.score-e.score);const f=Array.from(await u.age.data()).map((e,t)=>[IJ[t],e]).sort((e,t)=>t[1]-e[1]);let m=f[0][0];for(let e=1;e<f.length;e++)m+=f[e][1]*(f[e][0]-m);p.age=Math.round(10*m)/10,Object.keys(u).forEach(e=>is(u[e])),wJ[n]=p,SJ=a,NJ=Dq(),r(p)}))}var RJ,EJ=[],$J=0,MJ=0,FJ=Number.MAX_SAFE_INTEGER;async function _J(e,t,n,a){var r,i,s,o;if(!vJ)return{age:0};const l=FJ<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(i=t.face.ssrnet)?void 0:i.skipTime)||0)>Dq()-MJ;return t.skipAllowed&&l&&u&&$J===a&&(null==(s=EJ[n])?void 0:s.age)&&(null==(o=EJ[n])?void 0:o.age)>0?(FJ++,EJ[n]):(FJ=0,new Promise(async r=>{var i,s,o;if(!(null==vJ?void 0:vJ.inputs)||!vJ.inputs[0]||!vJ.inputs[0].shape)return;const l={};if((null==(i=t.face.ssrnet)?void 0:i.crop)>0){const n=null==(s=t.face.ssrnet)?void 0:s.crop,a=[[n,n,1-n,1-n]];l.resize=kc.cropAndResize(e,a,[0],[vJ.inputs[0].shape[2],vJ.inputs[0].shape[1]])}else l.resize=kc.resizeBilinear(e,[vJ.inputs[0].shape[2],vJ.inputs[0].shape[1]],!1);l.enhance=wo(l.resize,xK.tf255);const u={age:0};if((null==(o=t.face.ssrnet)?void 0:o.enabled)&&(l.age=vJ.execute(l.enhance)),l.age){const e=await l.age.data();u.age=Math.trunc(10*e[0])/10}Object.keys(l).forEach(e=>is(l[e])),EJ[n]=u,$J=a,MJ=Dq(),r(u)}))}var PJ,OJ=[],DJ=0,zJ=0,LJ=Number.MAX_SAFE_INTEGER,WJ=[.2989,.587,.114];async function BJ(e,t,n,a){var r,i,s,o;if(!RJ)return{gender:"unknown",genderScore:0};const l=LJ<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(i=t.face.ssrnet)?void 0:i.skipTime)||0)>Dq()-zJ;return t.skipAllowed&&l&&u&&DJ===a&&(null==(s=OJ[n])?void 0:s.gender)&&(null==(o=OJ[n])?void 0:o.genderScore)>0?(LJ++,OJ[n]):(LJ=0,new Promise(async r=>{var i,s,o;if(!(null==RJ?void 0:RJ.inputs[0].shape))return;const l={};if((null==(i=t.face.ssrnet)?void 0:i.crop)>0){const n=null==(s=t.face.ssrnet)?void 0:s.crop,a=[[n,n,1-n,1-n]];l.resize=kc.cropAndResize(e,a,[0],[RJ.inputs[0].shape[2],RJ.inputs[0].shape[1]])}else l.resize=kc.resizeBilinear(e,[RJ.inputs[0].shape[2],RJ.inputs[0].shape[1]],!1);l.enhance=rs(()=>{var e,t;let n;if(1===(null==(t=null==(e=null==RJ?void 0:RJ.inputs)?void 0:e[0].shape)?void 0:t[3])){const[e,t,a]=Rp(l.resize,3,3),r=wo(e,WJ[0]),i=wo(t,WJ[1]),s=wo(a,WJ[2]),o=No([r,i,s]);n=wo(ju(o,xK.tf05),2)}else n=wo(ju(l.resize,xK.tf05),2);return n});const u={gender:"unknown",genderScore:0};(null==(o=t.face.ssrnet)?void 0:o.enabled)&&(l.gender=RJ.execute(l.enhance));const d=await l.gender.data();u.gender=d[0]>d[1]?"female":"male",u.genderScore=d[0]>d[1]?Math.trunc(100*d[0])/100:Math.trunc(100*d[1])/100,Object.keys(l).forEach(e=>is(l[e])),OJ[n]=u,DJ=a,zJ=Dq(),r(u)}))}var VJ,UJ=[],GJ=0,HJ=0,jJ=Number.MAX_SAFE_INTEGER;async function qJ(e,t,n,a){var r,i;if(!(null==PJ?void 0:PJ.executor))return[];const s=jJ<((null==(r=t.face.mobilefacenet)?void 0:r.skipFrames)||0),o=((null==(i=t.face.mobilefacenet)?void 0:i.skipTime)||0)>Dq()-HJ;return t.skipAllowed&&o&&s&&GJ===a&&UJ[n]?(jJ++,UJ[n]):new Promise(async r=>{var i;let s=[];if((null==(i=t.face.mobilefacenet)?void 0:i.enabled)&&(null==PJ?void 0:PJ.inputs[0].shape)){const t={};t.crop=kc.resizeBilinear(e,[PJ.inputs[0].shape[2],PJ.inputs[0].shape[1]],!1),t.data=PJ.execute(t.crop);const n=await t.data.data();s=Array.from(n),Object.keys(t).forEach(e=>is(t[e]))}UJ[n]=s,GJ=a,HJ=Dq(),r(s)})}var XJ=[],KJ=0,ZJ=0,YJ=Number.MAX_SAFE_INTEGER;async function JJ(e,t,n,a){var r,i;if(!(null==VJ?void 0:VJ.executor))return[];const s=YJ<((null==(r=t.face.insightface)?void 0:r.skipFrames)||0),o=((null==(i=t.face.insightface)?void 0:i.skipTime)||0)>Dq()-ZJ;return t.skipAllowed&&o&&s&&KJ===a&&XJ[n]?(YJ++,XJ[n]):new Promise(async r=>{var i;let s=[];if((null==(i=t.face.insightface)?void 0:i.enabled)&&(null==VJ?void 0:VJ.inputs[0].shape)){const t={};t.crop=kc.resizeBilinear(e,[VJ.inputs[0].shape[2],VJ.inputs[0].shape[1]],!1),t.data=VJ.execute(t.crop);const n=await t.data.data();s=Array.from(n),Object.keys(t).forEach(e=>is(t[e]))}XJ[n]=s,KJ=a,ZJ=Dq(),r(s)})}var QJ=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},a=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],r=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],i=e.meshRaw;if(!i||i.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const s=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[i[10],i[152],i[234],i[454]].map(e=>[e[0]*t[0]/s,e[1]*t[1]/s,e[2]]),l=n(a(o[1],o[0]));let u=n(a(o[3],o[2]));const d=n(r(u,l));u=r(l,d);const p=[u[0],u[1],u[2],l[0],l[1],l[2],d[0],d[1],d[2]],h=(e=>{const[t,n,a,r,i,s,o,l,u]=e;let d,p,h;if(r<1)if(r>-1){const e=Math.sqrt(t*t+o*o);h=Math.atan2(r,e),p=Math.atan2(-o,t),d=Math.atan2(-s,i)}else h=-Math.PI/2,p=-Math.atan2(l,u),d=0;else h=Math.PI/2,p=Math.atan2(l,u),d=0;return Number.isNaN(d)&&(d=0),Number.isNaN(p)&&(p=0),Number.isNaN(h)&&(h=0),{pitch:-d,yaw:-p,roll:-h}})(p),c=478===i.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=(e.mesh[33][2]||0)>(e.mesh[263][2]||0),a=n?e.mesh[473]:e.mesh[468],r=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],i=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],s=[(r[0]-a[0])/i[0]-t[0],1*(a[1]-r[1])/i[1]-t[1]];let o=Math.sqrt(s[0]*s[0]+s[1]*s[1]);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=s,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0};return{angle:h,matrix:p,gaze:c}};function eQ(e,t){const n=null==e?void 0:e.annotations;if(!(null==n?void 0:n.leftEyeIris)||!(null==n?void 0:n.rightEyeIris))return 0;const a=Math.max(Math.abs(n.leftEyeIris[3][0]-n.leftEyeIris[1][0]),Math.abs(n.rightEyeIris[3][0]-n.rightEyeIris[1][0]))/t;return Math.round(1.17/a)/100}var tQ=async(e,t)=>{var n,a,r,i,s,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,w,k,I;let S,N,C,T,R,E,$,M,F,_=Dq();const P=[];e.state="run:face";const O=await async function(e,t){var n,a,r,i,s,o,l,u,d,p;const h=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>Dq()-WY.timestamp,c=WY.skipped<((null==(a=t.face.detector)?void 0:a.skipFrames)||0);t.skipAllowed&&h&&c&&0!==WY.boxes.length?WY.skipped++:(WY.boxes=await SY(e,t),WY.timestamp=Dq(),WY.skipped=0);const f=[],m=[];let g=0;const y=VY;for(let A=0;A<WY.boxes.length;A++){const n=WY.boxes[A];let a,h=0;const c={id:g++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,size:[0,0],annotations:{}};if([h,a,c.tensor]=gY(null==(r=t.face.detector)?void 0:r.rotation,n,e,(null==(i=t.face.mesh)?void 0:i.enabled)?VY:kY()),t.filter.equalization){const e=c.tensor?await Gq(c.tensor):void 0;is(c.tensor),e&&(c.tensor=e)}if(c.boxScore=Math.round(100*n.confidence)/100,(null==(s=t.face.mesh)?void 0:s.enabled)&&(null==BY?void 0:BY.executor))if(BY){if((null==(o=t.face.attention)?void 0:o.enabled)&&!iX.kernels.includes("atan2"))return t.face.attention.enabled=!1,is(c.tensor),f;const r=BY.execute(c.tensor),i=r.find(e=>1===e.shape[e.shape.length-1]),s=await i.data();if(c.faceScore=Math.round(100*s[0])/100,c.faceScore<((null==(l=t.face.detector)?void 0:l.minConfidence)||1)){if(n.confidence=c.faceScore,t.face.mesh.keepInvalid){c.box=tY(n,e),c.boxRaw=nY(n,e),c.size=n.size,c.score=c.boxScore,c.mesh=n.landmarks,c.meshRaw=c.mesh.map(t=>[t[0]/(e.shape[2]||1),t[1]/(e.shape[1]||1),(t[2]||0)/y]);for(const e of Object.keys(DK))c.annotations[e]=[c.mesh[DK[e]]]}}else{const i=r.find(e=>1404===e.shape[e.shape.length-1]),s=Yo(i,[-1,3]);let o=await s.array();is(s),(null==(u=t.face.attention)?void 0:u.enabled)?o=await LY(o,r):(null==(d=t.face.iris)?void 0:d.enabled)&&(o=await zY(o,c.tensor,VY,t)),c.mesh=mY(o,n,h,a,VY),c.meshRaw=c.mesh.map(t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/y]);for(const e of Object.keys(PK))c.annotations[e]=PK[e].map(e=>c.mesh[e]);c.score=c.faceScore;const l={...xY(c.mesh,n),confidence:n.confidence,landmarks:n.landmarks,size:n.size};c.box=tY(l,e),c.boxRaw=nY(l,e),c.size=l.size,m.push(l)}is(r)}else t.debug&&Oq("face mesh detection requested, but model is not loaded");else{c.box=tY(n,e),c.boxRaw=nY(n,e),c.score=c.boxScore,c.size=n.size,c.mesh=n.landmarks,c.meshRaw=c.mesh.map(t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/y]);for(const e of Object.keys(DK))c.annotations[e]=[c.mesh[DK[e]]]}c.score>((null==(p=t.face.detector)?void 0:p.minConfidence)||1)?f.push(c):is(c.tensor)}return WY.boxes=m,f}(t,e.config);if(e.performance.face=iX.perfadd?(e.performance.face||0)+Math.trunc(Dq()-_):Math.trunc(Dq()-_),!t.shape||4!==t.shape.length)return[];if(!O)return[];for(let D=0;D<O.length;D++){if(e.analyze("Get Face"),!O[D].tensor||O[D].tensor.isDisposedInternal){Oq("Face object is disposed:",O[D].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await lJ(O[D]);is(O[D].tensor),e&&(O[D].tensor=e)}const z=O[D].mesh&&O[D].mesh.length>200?QJ(O[D],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?T=(null==(a=e.config.face.emotion)?void 0:a.enabled)?QY(O[D].tensor||qi([]),e.config,D,O.length):[]:(e.state="run:emotion",_=Dq(),T=(null==(r=e.config.face.emotion)?void 0:r.enabled)?await QY(O[D].tensor||qi([]),e.config,D,O.length):[],e.performance.emotion=iX.perfadd?(e.performance.emotion||0)+Math.trunc(Dq()-_):Math.trunc(Dq()-_)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?$=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?fJ(O[D].tensor||qi([]),e.config,D,O.length):0:(e.state="run:antispoof",_=Dq(),$=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?await fJ(O[D].tensor||qi([]),e.config,D,O.length):0,e.performance.antispoof=iX.perfadd?(e.performance.antispoof||0)+Math.trunc(Dq()-_):Math.trunc(Dq()-_)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?M=(null==(o=e.config.face.liveness)?void 0:o.enabled)?bJ(O[D].tensor||qi([]),e.config,D,O.length):0:(e.state="run:liveness",_=Dq(),M=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await bJ(O[D].tensor||qi([]),e.config,D,O.length):0,e.performance.liveness=iX.perfadd?(e.performance.antispoof||0)+Math.trunc(Dq()-_):Math.trunc(Dq()-_)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?N=(null==(u=e.config.face.gear)?void 0:u.enabled)?TJ(O[D].tensor||qi([]),e.config,D,O.length):null:(e.state="run:gear",_=Dq(),N=(null==(d=e.config.face.gear)?void 0:d.enabled)?await TJ(O[D].tensor||qi([]),e.config,D,O.length):null,e.performance.gear=Math.trunc(Dq()-_)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(S=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?_J(O[D].tensor||qi([]),e.config,D,O.length):null,C=(null==(h=e.config.face.ssrnet)?void 0:h.enabled)?BJ(O[D].tensor||qi([]),e.config,D,O.length):null):(e.state="run:ssrnet",_=Dq(),S=(null==(c=e.config.face.ssrnet)?void 0:c.enabled)?await _J(O[D].tensor||qi([]),e.config,D,O.length):null,C=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await BJ(O[D].tensor||qi([]),e.config,D,O.length):null,e.performance.ssrnet=Math.trunc(Dq()-_)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?R=(null==(m=e.config.face.mobilefacenet)?void 0:m.enabled)?qJ(O[D].tensor||qi([]),e.config,D,O.length):null:(e.state="run:mobilefacenet",_=Dq(),R=(null==(g=e.config.face.mobilefacenet)?void 0:g.enabled)?await qJ(O[D].tensor||qi([]),e.config,D,O.length):null,e.performance.mobilefacenet=Math.trunc(Dq()-_)),e.analyze("End MobileFaceNet:"),e.analyze("Start InsightFace:"),e.config.async?E=(null==(y=e.config.face.insightface)?void 0:y.enabled)?JJ(O[D].tensor||qi([]),e.config,D,O.length):null:(e.state="run:mobilefacenet",_=Dq(),E=(null==(A=e.config.face.insightface)?void 0:A.enabled)?await JJ(O[D].tensor||qi([]),e.config,D,O.length):null,e.performance.mobilefacenet=Math.trunc(Dq()-_)),e.analyze("End InsightFace:"),e.analyze("Start Description:"),e.config.async?F=rJ(O[D].tensor||qi([]),e.config,D,O.length):(e.state="run:description",_=Dq(),F=await rJ(O[D].tensor||qi([]),e.config,D,O.length),e.performance.description=iX.perfadd?(e.performance.description||0)+Math.trunc(Dq()-_):Math.trunc(Dq()-_)),e.analyze("End Description:"),e.config.async&&([S,C,T,R,E,F,N,$,M]=await Promise.all([S,C,T,R,E,F,N,$,M])),e.analyze("Finish Face:"),(null==(x=e.config.face.ssrnet)?void 0:x.enabled)&&S&&C&&(F={...F,age:S.age,gender:C.gender,genderScore:C.genderScore}),(null==(b=e.config.face.gear)?void 0:b.enabled)&&N&&(F={...F,age:N.age,gender:N.gender,genderScore:N.genderScore,race:N.race}),(null==(v=e.config.face.mobilefacenet)?void 0:v.enabled)&&R&&(F.descriptor=R),(null==(w=e.config.face.insightface)?void 0:w.enabled)&&E&&(F.descriptor=E);const L=(null==(k=e.config.face.iris)?void 0:k.enabled)?eQ(O[D],t.shape[2]):0,W=(null==(I=e.config.face.detector)?void 0:I.return)?Mp(O[D].tensor):null;is(O[D].tensor),O[D].tensor&&delete O[D].tensor;const B={...O[D],id:D};F.age&&(B.age=F.age),F.gender&&(B.gender=F.gender),F.genderScore&&(B.genderScore=F.genderScore),F.descriptor&&(B.embedding=F.descriptor),F.race&&(B.race=F.race),T&&(B.emotion=T),$&&(B.real=$),M&&(B.live=M),L>0&&(B.distance=L),z&&(B.rotation=z),W&&(B.tensor=W),P.push(B),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),P},nQ={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>nQ.nameMapping[e],getPoints:e=>nQ.pointsMapping[e]},aQ={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>aQ.nameMapping[e]},rQ={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>rQ.nameMapping[e]},iQ=class{constructor(e){o(this,"name"),o(this,"curls"),o(this,"directions"),o(this,"weights"),o(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){"undefined"===typeof this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce((e,t)=>e+t,0);this.weightsRelative=this.weights.map(e=>5*e/n)}matchAgainst(e,t){let n=0;for(const a in e){const t=e[a],r=this.curls[a];if("undefined"!==typeof r){for(const[e,i]of r)if(t===e){n+=i*this.weightsRelative[a];break}}else n+=this.weightsRelative[a]}for(const a in t){const e=t[a],r=this.directions[a];if("undefined"!==typeof r){for(const[t,i]of r)if(e===t){n+=i*this.weightsRelative[a];break}}else n+=this.weightsRelative[a]}return n/10}},{thumb:sQ,index:oQ,middle:lQ,ring:uQ,pinky:dQ}=nQ,{none:pQ,half:hQ,full:cQ}=aQ,{verticalUp:fQ,verticalDown:mQ,horizontalLeft:gQ,horizontalRight:yQ,diagonalUpRight:AQ,diagonalUpLeft:xQ,diagonalDownRight:bQ,diagonalDownLeft:vQ}=rQ,wQ=new iQ("thumbs up");wQ.curl(sQ,pQ,1),wQ.direction(sQ,fQ,1),wQ.direction(sQ,xQ,.25),wQ.direction(sQ,AQ,.25);for(const Z2 of[nQ.index,nQ.middle,nQ.ring,nQ.pinky])wQ.curl(Z2,cQ,1),wQ.direction(Z2,gQ,1),wQ.direction(Z2,yQ,1);var kQ=new iQ("victory");kQ.curl(sQ,hQ,.5),kQ.curl(sQ,pQ,.5),kQ.direction(sQ,fQ,1),kQ.direction(sQ,xQ,1),kQ.curl(oQ,pQ,1),kQ.direction(oQ,fQ,.75),kQ.direction(oQ,xQ,1),kQ.curl(lQ,pQ,1),kQ.direction(lQ,fQ,1),kQ.direction(lQ,xQ,.75),kQ.curl(uQ,cQ,1),kQ.direction(uQ,fQ,.2),kQ.direction(uQ,xQ,1),kQ.direction(uQ,gQ,.2),kQ.curl(dQ,cQ,1),kQ.direction(dQ,fQ,.2),kQ.direction(dQ,xQ,1),kQ.direction(dQ,gQ,.2),kQ.weight(oQ,2),kQ.weight(lQ,2);var IQ=new iQ("point");IQ.curl(sQ,cQ,1),IQ.curl(oQ,pQ,.5),IQ.curl(lQ,cQ,.5),IQ.curl(uQ,cQ,.5),IQ.curl(dQ,cQ,.5),IQ.weight(oQ,2),IQ.weight(lQ,2);var SQ=new iQ("middle finger");SQ.curl(sQ,pQ,1),SQ.curl(oQ,cQ,.5),SQ.curl(lQ,cQ,.5),SQ.curl(uQ,cQ,.5),SQ.curl(dQ,cQ,.5),SQ.weight(oQ,2),SQ.weight(lQ,2);var NQ=new iQ("open palm");NQ.curl(sQ,pQ,.75),NQ.curl(oQ,pQ,.75),NQ.curl(lQ,pQ,.75),NQ.curl(uQ,pQ,.75),NQ.curl(dQ,pQ,.75);var CQ=[wQ,kQ,IQ,SQ,NQ],TQ=60,RQ=130,EQ=1.1,$Q=.9,MQ=1.6;function FQ(e,t,n,a){const r=(t-a)/(e-n);let i=180*Math.atan(r)/Math.PI;return i<=0?i=-i:i>0&&(i=180-i),i}function _Q(e,t){if(!e||!t)return[0,0];const n=FQ(e[0],e[1],t[0],t[1]);if(2===e.length)return n;return[n,FQ(e[1],e[2],t[1],t[2])]}function PQ(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=0,a=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?a=1*t:r=1*t,[n,a,r]}function OQ(e,t,n){const a=e[0]-t[0],r=e[0]-n[0],i=t[0]-n[0],s=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],d=e[2]-n[2],p=t[2]-n[2],h=Math.sqrt(a*a+s*s+u*u),c=Math.sqrt(r*r+o*o+d*d),f=Math.sqrt(i*i+l*l+p*p);let m=(f*f+h*h-c*c)/(2*f*h);m>1?m=1:m<-1&&(m=-1);let g,y=Math.acos(m);return y=57.2958*y%180,g=y>RQ?aQ.none:y>TQ?aQ.half:aQ.full,g}function DQ(e,t,n,a){let r;return r=a===Math.abs(e)?e>0?rQ.horizontalLeft:rQ.horizontalRight:a===Math.abs(t)?t>0?rQ.horizontalLeft:rQ.horizontalRight:n>0?rQ.horizontalLeft:rQ.horizontalRight,r}function zQ(e,t,n,a){let r;return r=a===Math.abs(e)?e<0?rQ.verticalDown:rQ.verticalUp:a===Math.abs(t)?t<0?rQ.verticalDown:rQ.verticalUp:n<0?rQ.verticalDown:rQ.verticalUp,r}function LQ(e,t,n,a){const r=e[0]-t[0],i=e[0]-n[0],s=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],d=Math.max(Math.abs(r),Math.abs(i),Math.abs(s)),p=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let h=0,c=0,f=0;const m=p/(d+1e-5);m>1.5?h+=EQ:m>.66?c+=EQ:f+=EQ;const g=Math.sqrt(r*r+o*o),y=Math.sqrt(i*i+l*l),A=Math.sqrt(s*s+u*u),x=Math.max(g,y,A);let b=e[0],v=e[1],w=n[0],k=n[1];x===g?(w=n[0],k=n[1]):x===A&&(b=t[0],v=t[1]);const I=PQ(_Q([b,v],[w,k]),MQ);h+=I[0],c+=I[1],f+=I[2];for(const N of a){const e=PQ(N,$Q);h+=e[0],c+=e[1],f+=e[2]}let S;return S=h===Math.max(h,c,f)?zQ(l,o,u,p):f===Math.max(c,f)?DQ(i,r,s,d):function(e,t,n,a,r,i,s,o){let l;const u=zQ(e,t,n,a),d=DQ(r,i,s,o);return l=u===rQ.verticalUp?d===rQ.horizontalLeft?rQ.diagonalUpLeft:rQ.diagonalUpRight:d===rQ.horizontalLeft?rQ.diagonalDownLeft:rQ.diagonalDownRight,l}(l,o,u,p,i,r,s,d),S}function WQ(e){const t=[],n=[],a=[],r=[];if(!e)return{curls:a,directions:r};for(const i of nQ.all){const a=nQ.getPoints(i),r=[],s=[];for(const t of a){const n=_Q(e[t[0]],e[t[1]]),a=n[0],i=n[1];r.push(a),s.push(i)}t.push(r),n.push(s)}for(const i of nQ.all){const n=i===nQ.thumb?1:0,s=nQ.getPoints(i),o=e[s[n][0]],l=e[s[n+1][1]],u=e[s[3][1]],d=OQ(o,l,u),p=LQ(o,l,u,t[i].slice(n));a[i]=d,r[i]=p}return{curls:a,directions:r}}function BQ(e){if(!e||0===e.length)return null;const t=WQ(e),n={};for(const a of nQ.all)n[nQ.getName(a)]={curl:aQ.getName(t.curls[a]),direction:rQ.getName(t.directions[a])};return n}function VQ(e){const t=[];if(!e||0===e.length)return t;const n=WQ(e);for(const a of CQ){const e=a.matchAgainst(n.curls,n.directions);e>=.7&&t.push({name:a.name,confidence:e})}return t}var UQ=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=e[n].keypoints.find(e=>"leftWrist"===e.part),r=e[n].keypoints.find(e=>"rightWrist"===e.part),i=e[n].keypoints.find(e=>"nose"===e.part);i&&a&&r&&a.position[1]<i.position[1]&&r.position[1]<i.position[1]?t.push({body:n,gesture:"i give up"}):i&&a&&a.position[1]<i.position[1]?t.push({body:n,gesture:"raise left hand"}):i&&r&&r.position[1]<i.position[1]&&t.push({body:n,gesture:"raise right hand"});const s=e[n].keypoints.find(e=>"leftShoulder"===e.part),o=e[n].keypoints.find(e=>"rightShoulder"===e.part);s&&o&&Math.abs(s.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(s.position[1]>o.position[1]?"left":"right")})}return t},GQ=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const a=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(a/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(a<0?"left":"right")});Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"});Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const i=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));i>10&&t.push({face:n,gesture:`mouth ${Math.trunc(i)}% open`});const s=e[n].mesh[152][2]||0;Math.abs(s)>10&&t.push({face:n,gesture:"head "+(s<0?"up":"down")})}return t},HQ=e=>{var t,n,a,r;if(!e)return[];const i=[];for(let s=0;s<e.length;s++){if(!(null==(n=null==(t=e[s].annotations)?void 0:t.leftEyeIris)?void 0:n[0])||!(null==(r=null==(a=e[s].annotations)?void 0:a.rightEyeIris)?void 0:r[0]))continue;const o=e[s].annotations.leftEyeIris[3][0]-e[s].annotations.leftEyeIris[1][0],l=e[s].annotations.leftEyeIris[4][1]-e[s].annotations.leftEyeIris[2][1],u=Math.abs(o*l),d=e[s].annotations.rightEyeIris[3][0]-e[s].annotations.rightEyeIris[1][0],p=e[s].annotations.rightEyeIris[4][1]-e[s].annotations.rightEyeIris[2][1],h=Math.abs(d*p);let c=!1;Math.abs(u-h)/Math.max(u,h)<.25&&(c=!0,i.push({iris:s,gesture:"facing center"}));const f=Math.abs(e[s].mesh[263][0]-e[s].annotations.leftEyeIris[0][0])/e[s].box[2],m=Math.abs(e[s].mesh[33][0]-e[s].annotations.rightEyeIris[0][0])/e[s].box[2];(f>.06||m>.06)&&(c=!1),f>m?m>.04&&i.push({iris:s,gesture:"looking right"}):f>.04&&i.push({iris:s,gesture:"looking left"});const g=Math.abs(e[s].mesh[145][1]-e[s].annotations.rightEyeIris[0][1])/e[s].box[3],y=Math.abs(e[s].mesh[374][1]-e[s].annotations.leftEyeIris[0][1])/e[s].box[3];(y<.01||g<.01||y>.022||g>.022)&&(c=!1),(y<.01||g<.01)&&i.push({iris:s,gesture:"looking down"}),(y>.022||g>.022)&&i.push({iris:s,gesture:"looking up"}),c&&i.push({iris:s,gesture:"looking center"})}return i},jQ=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=[];if(e[n].annotations)for(const[t,r]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(r)&&r[0]&&a.push({name:t.toLowerCase(),position:r[0]});if(a&&a.length>0){const e=a.reduce((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t);t.push({hand:n,gesture:`${e.name} forward`});const r=a.reduce((e,t)=>e.position[1]<t.position[1]?e:t);t.push({hand:n,gesture:`${r.name} up`})}if(e[n].keypoints){const a=VQ(e[n].keypoints);for(const e of a)t.push({hand:n,gesture:e.name})}}return t};function qQ(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function XQ(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function KQ(e,t,n){const a=t.shape[1],r=t.shape[2],i=[[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r]];return kc.cropAndResize(t,i,[0],n)}function ZQ(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map(e=>[e[0]*t[0],e[1]*t[1]]),confidence:e.confidence}}function YQ(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1.5;const n=XQ(e),a=qQ(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],palmLandmarks:e.palmLandmarks}}function JQ(e){const t=XQ(e),n=qQ(e),a=Math.max(...n)/2;return{startPoint:[t[0]-a,t[1]-a],endPoint:[t[0]+a,t[1]+a],palmLandmarks:e.palmLandmarks}}function QQ(e,t){const n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return(a=n)-2*Math.PI*Math.floor((a+Math.PI)/(2*Math.PI));var a}var e0=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function t0(e,t){let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n}function n0(e,t){const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n}function a0(e,t){const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let i=0;i<a;i++)n[r].push(t0(e[r],n0(t,i)))}return n}function r0(e,t){const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],i=a0(e0(t[0],t[1]),r);return a0(i,e0(-t[0],-t[1]))}function i0(e,t){return[t0(e,t[0]),t0(e,t[1])]}var s0,o0,l0,u0=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],d0=class{constructor(e){var t,n,a,r;o(this,"model"),o(this,"anchors"),o(this,"anchorsTensor"),o(this,"inputSize"),o(this,"inputSizeTensor"),o(this,"doubleInputSizeTensor"),this.model=e,this.anchors=u0.map(e=>[e.x,e.y]),this.anchorsTensor=zp(this.anchors),this.inputSize=(null==(r=null==(a=null==(n=null==(t=null==this?void 0:this.model)?void 0:t.inputs)?void 0:n[0])?void 0:a.shape)?void 0:r[2])||0,this.inputSizeTensor=Dp([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=Dp([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=al(e,[0,0],[-1,2]),t.boxSizes=al(e,[0,2],[-1,2]),t.div=vo(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=xo(t.div,this.anchorsTensor),t.halfBoxSizes=vo(t.boxSizes,this.doubleInputSizeTensor),t.sub=ju(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=wo(t.sub,this.inputSizeTensor),t.add=xo(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=wo(t.add,this.inputSizeTensor);const n=bl([t.startPoints,t.endPoints],1);return Object.keys(t).forEach(e=>is(t[e])),n}normalizeLandmarks(e,t){const n={};n.reshape=Yo(e,[-1,7,2]),n.div=vo(n.reshape,this.inputSizeTensor),n.landmarks=xo(n.div,this.anchors[t]?this.anchors[t]:0);const a=wo(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach(e=>is(n[e])),a}async predict(e,t){var n;const a={};a.resize=kc.resizeBilinear(e,[this.inputSize,this.inputSize]),a.div=vo(a.resize,xK.tf127),a.image=ju(a.div,xK.tf1),a.batched=this.model.execute(a.image),a.predictions=Mp(a.batched),a.slice=al(a.predictions,[0,0],[-1,1]),a.sigmoid=nl(a.slice),a.scores=Mp(a.sigmoid);const r=await a.scores.data();a.boxes=al(a.predictions,[0,1],[-1,4]),a.norm=this.normalizeBoxes(a.boxes),a.nms=await kc.nonMaxSuppressionAsync(a.norm,a.scores,3*((null==(n=t.hand)?void 0:n.maxDetected)||1),t.hand.iouThreshold,t.hand.minConfidence);const i=await a.nms.array(),s=[];for(const o of i){const t={};t.box=al(a.norm,[o,0],[1,-1]),t.slice=al(a.predictions,[o,5],[1,14]),t.norm=this.normalizeLandmarks(t.slice,o),t.palmLandmarks=Yo(t.norm,[-1,2]);const n=await t.box.data(),i=ZQ({startPoint:n.slice(0,2),endPoint:n.slice(2,4),palmLandmarks:await t.palmLandmarks.array(),confidence:r[o]},[(e.shape[2]||1)/this.inputSize,(e.shape[1]||0)/this.inputSize]);s.push(i),Object.keys(t).forEach(e=>is(t[e]))}return Object.keys(a).forEach(e=>is(a[e])),s}},p0=[0,5,9,13,17,1,2],h0=0,c0=class{constructor(e,t){var n,a,r;o(this,"handDetector"),o(this,"handPoseModel"),o(this,"inputSize"),o(this,"storedBoxes"),o(this,"skipped"),o(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=(null==(r=null==(a=null==(n=this.handPoseModel)?void 0:n.inputs)?void 0:a[0].shape)?void 0:r[2])||0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map(e=>e[0]),n=e.map(e=>e[1]);return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map(e=>i0([...e,1],t));return YQ(JQ(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=YQ(JQ(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<p0.length;n++)t.palmLandmarks.push(e[p0[n]].slice(0,2));return t}transformRawCoords(e,t,n,a){const r=qQ(t),i=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],s=e.map(e=>[i[0]*(e[0]-this.inputSize/2),i[1]*(e[1]-this.inputSize/2),i[2]*e[2]]),o=r0(n,[0,0]),l=s.map(e=>[...i0(e,o),e[2]]),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-t0(t[0],n),-t0(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]}(a),d=[...XQ(t),1],p=[t0(d,u[0]),t0(d,u[1])];return l.map(e=>[Math.trunc(e[0]+p[0]),Math.trunc(e[1]+p[1]),Math.trunc(e[2])])}async estimateHands(e,t){let n,a=!1;const r=(t.hand.skipTime||0)>Dq()-h0,i=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&i?this.skipped++:(n=await this.handDetector.predict(e,t),this.skipped=0),n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(a=!0));const s=[];for(let o=0;o<this.storedBoxes.length;o++){const n=this.storedBoxes[o];if(n)if(t.hand.landmarks){const r=t.hand.rotation?QQ(n.palmLandmarks[0],n.palmLandmarks[2]):0,i=XQ(n),l=[i[0]/e.shape[2],i[1]/e.shape[1]],u=t.hand.rotation&&iX.kernels.includes("rotatewithoffset")?kc.rotateWithOffset(e,r,0,l):e.clone(),d=r0(-r,i),p=a?this.getBoxForPalmLandmarks(n.palmLandmarks,d):n,h=KQ(p,u,[this.inputSize,this.inputSize]),c=vo(h,xK.tf255);is(h),is(u);const[f,m]=this.handPoseModel.execute(c);h0=Dq(),is(c);const g=(await f.data())[0];if(is(f),g>=t.hand.minConfidence/4){const e=Yo(m,[-1,3]),t=await e.array();is(m),is(e);const a=this.transformRawCoords(t,p,r,d),i=this.getBoxForHandLandmarks(a);this.storedBoxes[o]={...i,confidence:g};const l={landmarks:a,confidence:g,boxConfidence:n.confidence,fingerConfidence:g,box:{topLeft:i.startPoint,bottomRight:i.endPoint}};s.push(l)}else this.storedBoxes[o]=null;is(m)}else{const e=YQ(JQ(n),1.65),t={confidence:n.confidence,boxConfidence:n.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};s.push(t)}}return this.storedBoxes=this.storedBoxes.filter(e=>null!==e),this.detectedHands=s.length,s.length>t.hand.maxDetected&&(s.length=t.hand.maxDetected),s}},f0={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function m0(e,t){l0||function(){const e=s0?new d0(s0):void 0;e&&o0&&(l0=new c0(e,o0))}();const n=await l0.estimateHands(e,t);if(!n)return[];const a=[];for(let r=0;r<n.length;r++){const t={};if(n[r].landmarks)for(const e of Object.keys(f0))t[e]=f0[e].map(e=>n[r].landmarks[e]);const i=n[r].landmarks;let s=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(i&&i.length>0){for(const e of i)e[0]<s[0]&&(s[0]=e[0]),e[1]<s[1]&&(s[1]=e[1]),e[0]>s[2]&&(s[2]=e[0]),e[1]>s[3]&&(s[3]=e[1]);s[2]-=s[0],s[3]-=s[1],o=[s[0]/(e.shape[2]||0),s[1]/(e.shape[1]||0),s[2]/(e.shape[2]||0),s[3]/(e.shape[1]||0)]}else s=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],o=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];const l=BQ(i);a.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:s,boxRaw:o,keypoints:i,annotations:t,landmarks:l})}return a}var g0=[null,null],y0=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],A0=[[0,0],[0,0]],x0=["hand","fist","pinch","point","face","tip","pinchtip"],b0=Number.MAX_SAFE_INTEGER,v0=0,w0=[0,0],k0={boxes:[],hands:[]},I0={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],base:[0],palm:[0,17,13,9,5,1,0]};async function S0(e,t,n){const a={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&g0[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const r={},i=[t.boxRaw[1],t.boxRaw[0],t.boxRaw[3]+t.boxRaw[1],t.boxRaw[2]+t.boxRaw[0]];r.crop=kc.cropAndResize(e,[i],[0],[A0[1][0],A0[1][1]],"bilinear"),r.div=vo(r.crop,xK.tf255),[r.score,r.keypoints]=g0[1].execute(r.div,["Identity_1","Identity"]);const s=(await r.score.data())[0],o=(100-Math.trunc(100/(1+Math.exp(s))))/100;if(o>=(n.hand.minConfidence||0)){a.fingerScore=o,r.reshaped=Yo(r.keypoints,[-1,3]);const e=(await r.reshaped.array()).map(e=>[e[0]/A0[1][1],e[1]/A0[1][0],e[2]||0]).map(e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]);a.keypoints=e.map(e=>[w0[0]*(e[0]+t.boxRaw[0]),w0[1]*(e[1]+t.boxRaw[1]),e[2]||0]),a.landmarks=BQ(a.keypoints);for(const t of Object.keys(I0))a.annotations[t]=I0[t].map(e=>a.landmarks&&a.keypoints[e]?a.keypoints[e]:null)}Object.keys(r).forEach(e=>is(r[e]))}return a}async function N0(e,t){var n,a;if(!(null==(n=g0[0])?void 0:n.executor)||!(null==(a=g0[1])?void 0:a.executor)||!g0[0].inputs[0].shape||!g0[1].inputs[0].shape)return[];w0=[e.shape[2]||0,e.shape[1]||0],b0++;const r=(t.hand.skipTime||0)>Dq()-v0,i=b0<(t.hand.skipFrames||0);return t.skipAllowed&&r&&i?k0.hands:new Promise(async n=>{const a=3*(t.hand.skipTime||0)>Dq()-v0,r=b0<3*(t.hand.skipFrames||0);t.skipAllowed&&k0.hands.length===t.hand.maxDetected||t.skipAllowed&&a&&r&&k0.hands.length>0?k0.hands=await Promise.all(k0.boxes.map(n=>S0(e,n,t))):(k0.boxes=await async function(e,t){const n=[];if(!e||!g0[0])return n;const a={},r=(e.shape[2]||1)/(e.shape[1]||1),i=Math.min(8*Math.round((e.shape[1]||0)/8),512),s=8*Math.round(i*r/8);a.resize=kc.resizeBilinear(e,[i,s]),a.cast=go(a.resize,"int32"),[a.rawScores,a.rawBoxes]=await g0[0].executeAsync(a.cast,y0),a.boxes=Mp(a.rawBoxes,[0,2]),a.scores=Mp(a.rawScores,[0]);const o=Jp(a.scores,1);is(o[4]),o.splice(4,1),a.filtered=Fp(o,1),is(o),a.max=su(a.filtered,1),a.argmax=Ro(a.filtered,1);let l=0;a.nms=await kc.nonMaxSuppressionAsync(a.boxes,a.max,(t.hand.maxDetected||0)+1,t.hand.iouThreshold||0,t.hand.minConfidence||1);const u=await a.nms.data(),d=await a.max.data(),p=await a.argmax.data();for(const h of Array.from(u)){const e=al(a.boxes,h,1),t=await e.data();is(e);const r=[t[1],t[0],t[3]-t[1],t[2]-t[0]],i=NZ(r,1.4),s=[Math.trunc(r[0]*w0[0]),Math.trunc(r[1]*w0[1]),Math.trunc(r[2]*w0[0]),Math.trunc(r[3]*w0[1])],o={id:l++,score:d[h],box:s,boxRaw:i,label:x0[p[h]]};n.push(o)}return Object.keys(a).forEach(e=>is(a[e])),n.sort((e,t)=>t.score-e.score),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),v0=Dq(),k0.hands=await Promise.all(k0.boxes.map(n=>S0(e,n,t))),b0=0);const i=[...k0.boxes];if(k0.boxes.length=0,t.cacheSensitivity>0)for(let s=0;s<k0.hands.length;s++){const n=SZ(k0.hands[s].keypoints,w0);if(n.box[2]/(e.shape[2]||1)>.05&&n.box[3]/(e.shape[1]||1)>.05&&k0.hands[s].fingerScore&&k0.hands[s].fingerScore>(t.hand.minConfidence||0)){const e=NZ(n.box,1.6),t=NZ(n.boxRaw,1.6);k0.boxes.push({...i[s],box:e,boxRaw:t})}}for(let e=0;e<k0.hands.length;e++){const t=IZ(k0.hands[e].keypoints,w0);k0.hands[e].box=t.box,k0.hands[e].boxRaw=t.boxRaw}n(k0.hands)})}var C0=function(){return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,width:0,height:0,error:arguments.length>0&&void 0!==arguments[0]?arguments[0]:null}},T0={};s(T0,{connected:()=>_0,horizontal:()=>$0,kpt:()=>E0,relative:()=>F0,vertical:()=>M0});var R0,E0=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],$0=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],M0=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],F0=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],_0={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},P0=C0(),O0=0;async function D0(e){return!R0||iX.initial?R0=await mK(e.segmentation.modelPath):e.debug&&Oq("cached model:",R0.modelUrl),R0}var z0={};function L0(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25};if(!e||!e)return Number.MAX_SAFE_INTEGER;let a=0;for(let r=0;r<e.length;r++){const i=n.order&&2!==n.order?Math.abs(e[r]-t[r]):e[r]-t[r];a+=n.order&&2!==n.order?i**n.order:i*i}return Math.round(100*(n.multiplier||20)*a)/100}s(z0,{distance:()=>L0,find:()=>V0,similarity:()=>B0});var W0=(e,t,n,a)=>{if(0===e)return 1;const r=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(a-n);return Math.round(100*Math.max(Math.min(r,1),0))/100};function B0(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25,min:.2,max:.8};const a=L0(e,t,n);return W0(a,n.order||2,n.min||0,n.max||1)}function V0(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{order:2,multiplier:25,threshold:0,min:.2,max:.8};if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let a=Number.MAX_SAFE_INTEGER,r=-1;for(let i=0;i<t.length;i++){const s=t[i].length===e.length?L0(e,t[i],n):Number.MAX_SAFE_INTEGER;if(s<a&&(a=s,r=i),a<(n.threshold||0))break}return{index:r,distance:a,similarity:W0(a,n.order||2,n.min||0,n.max||1)}}var U0={};s(U0,{Models:()=>L2,validateModel:()=>z2});var G0,H0={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function j0(e){for(const t of $0){const n=e.keypoints.findIndex(e=>e.part===t[0]),a=e.keypoints.findIndex(e=>e.part===t[1]);if(e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[0]<e.keypoints[a].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[a],e.keypoints[a]=t}}for(const t of M0){const n=e.keypoints.findIndex(e=>e&&e.part===t[0]),a=e.keypoints.findIndex(e=>e&&e.part===t[1]);e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[1]<e.keypoints[a].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of F0){const a=e.keypoints.findIndex(e=>e&&e.part===t[0]),r=e.keypoints.findIndex(e=>e&&e.part===t[1]),i=e.keypoints.findIndex(e=>e&&e.part===n[0]),s=e.keypoints.findIndex(e=>e&&e.part===n[1]);if(!e.keypoints[i]||!e.keypoints[s])continue;const o=e.keypoints[a]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[a];e.keypoints[a]=e.keypoints[r],e.keypoints[r]=t}}}function q0(e){for(let t=0;t<e.length;t++)if(e[t]&&H0.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-H0.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-H0.keypoints[t].positionRaw[1])];n[0]<.005&&n[1]<.005?e[t]=H0.keypoints[t]:H0.keypoints[t]=e[t]}else H0.keypoints[t]=e[t];return e}function X0(e,t){e.keypoints=e.keypoints.filter(e=>null==e?void 0:e.position);for(const a of e.keypoints)a.position=[a.position[0]*(t[0]+H0.padding[2][0]+H0.padding[2][1])/t[0]-H0.padding[2][0],a.position[1]*(t[1]+H0.padding[1][0]+H0.padding[1][1])/t[1]-H0.padding[1][0]],a.positionRaw=[a.position[0]/t[0],a.position[1]/t[1]];const n=IZ(e.keypoints.map(e=>e.position),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var K0,Z0=0,Y0=Number.MAX_SAFE_INTEGER,J0={boxes:[],bodies:[],last:0};async function Q0(e,t){var n;if(!(null==G0?void 0:G0.executor)||!(null==(n=null==G0?void 0:G0.inputs)?void 0:n[0].shape))return[];t.skipAllowed||(J0.boxes.length=0),Y0++;const a=(t.body.skipTime||0)>Dq()-J0.last,r=Y0<(t.body.skipFrames||0);return t.skipAllowed&&a&&r?J0.bodies:new Promise(async n=>{const a={};Y0=0,a.input=function(e,t){var n,a;const r={};if(!(null==(n=null==e?void 0:e.shape)?void 0:n[1])||!(null==(a=null==e?void 0:e.shape)?void 0:a[2]))return e;H0.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],r.pad=bd(e,H0.padding),r.resize=kc.resizeBilinear(r.pad,[t,t]);const i=go(r.resize,"int32");return Object.keys(r).forEach(e=>is(r[e])),i}(e,Z0),a.res=null==G0?void 0:G0.execute(a.input),J0.last=Dq();const r=await a.res.array();J0.bodies=17===a.res.shape[2]?function(e,t,n){const a=e[0][0],r=[];let i=0;for(let d=0;d<a.length;d++)if(i=a[d][2],i>t.body.minConfidence){const e=[a[d][1],a[d][0]];r.push({score:Math.round(100*i)/100,part:E0[d],positionRaw:e,position:[Math.round((n.shape[2]||0)*e[0]),Math.round((n.shape[1]||0)*e[1])]})}i=r.reduce((e,t)=>t.score>e?t.score:e,0);const s=[],o=IZ(r.map(e=>e.position),[n.shape[2],n.shape[1]]),l={};for(const[d,p]of Object.entries(_0)){const e=[];for(let n=0;n<p.length-1;n++){const a=r.find(e=>e.part===p[n]),i=r.find(e=>e.part===p[n+1]);a&&i&&a.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&e.push([a.position,i.position])}l[d]=e}const u={id:0,score:i,box:o.box,boxRaw:o.boxRaw,keypoints:r,annotations:l};return j0(u),s.push(u),s}(r,t,e):function(e,t,n){const a=[];for(let r=0;r<e[0].length;r++){const i=e[0][r],s=Math.round(100*i[55])/100;if(s>t.body.minConfidence){const e=[];for(let a=0;a<17;a++){const r=i[3*a+2];if(r>t.body.minConfidence){const t=[i[3*a+1],i[3*a+0]];e.push({part:E0[a],score:Math.round(100*r)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=[i[52],i[51],i[54]-i[52],i[53]-i[51]],l=[Math.trunc(o[0]*(n.shape[2]||0)),Math.trunc(o[1]*(n.shape[1]||0)),Math.trunc(o[2]*(n.shape[2]||0)),Math.trunc(o[3]*(n.shape[1]||0))],u={};for(const[n,a]of Object.entries(_0)){const r=[];for(let n=0;n<a.length-1;n++){const i=e.find(e=>e.part===a[n]),s=e.find(e=>e.part===a[n+1]);i&&s&&i.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&r.push([i.position,s.position])}u[n]=r}const d={id:r,score:s,box:l,boxRaw:o,keypoints:[...e],annotations:u};j0(d),a.push(d)}}return a.sort((e,t)=>t.score-e.score),a.length>t.body.maxDetected&&(a.length=t.body.maxDetected),a}(r,t,e);for(const t of J0.bodies)X0(t,[e.shape[2]||1,e.shape[1]||1]),q0(t.keypoints);Object.keys(a).forEach(e=>is(a[e])),n(J0.bodies)})}var e2=[],t2=0,n2=Number.MAX_SAFE_INTEGER,a2=0,r2=2.5;async function i2(e,t){if(!(null==K0?void 0:K0.executor))return[];const n=(t.object.skipTime||0)>Dq()-t2,a=n2<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&e2.length>0?(n2++,e2):(n2=0,iX.kernels.includes("mod")&&iX.kernels.includes("sparsetodense")?new Promise(async n=>{const a=[e.shape[2]||0,e.shape[1]||0],r=kc.resizeBilinear(e,[a2,a2],!1),i=vo(r,xK.tf255),s=rh(i,[0,3,1,2]);let o;t.object.enabled&&(o=K0.execute(s)),t2=Dq();const l=await async function(e,t,n){var a,r;let i=0,s=[];const o=a2;for(const p of[1,2,4]){const l=13*p,u=Mp(e.find(e=>e.shape[1]===l**2&&(e.shape[2]||0)===zZ.length)),d=await u.array(),h=Mp(e.find(e=>e.shape[1]===l**2&&(e.shape[2]||0)<zZ.length)),c=Yo(h,[-1,4,((null==(a=h.shape)?void 0:a[1])||0)/4]),f=Ro(c,2),m=await f.array();for(let e=0;e<u.shape[0];e++)for(let a=0;a<((null==(r=u.shape)?void 0:r[1])||0);a++){const r=d[e][a];if(r>(n.object.minConfidence||0)&&61!==a){const n=(.5+Math.trunc(e%l))/l,u=(.5+Math.trunc(e/l))/l,d=m[e].map(e=>e*(l/p/o)),[h,c]=[n-r2/p*d[0],u-r2/p*d[1]],[f,g]=[n+r2/p*d[2]-h,u+r2/p*d[3]-c];let y=[h,c,f,g];y=y.map(e=>Math.max(0,Math.min(e,1)));const A=[y[0]*t[0],y[1]*t[1],y[2]*t[0],y[3]*t[1]],x={id:i++,score:Math.round(100*r)/100,class:a+1,label:zZ[a].label,box:A.map(e=>Math.trunc(e)),boxRaw:y};s.push(x)}}is([u,h,c,f])}const l=s.map(e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]]),u=s.map(e=>e.score);let d=[];if(l&&l.length>0){const e=await kc.nonMaxSuppressionAsync(l,u,n.object.maxDetected||0,n.object.iouThreshold,n.object.minConfidence);d=Array.from(await e.data()),is(e)}return s=s.filter((e,t)=>d.includes(t)).sort((e,t)=>t.score-e.score),s}(o,a,t);e2=l,is([r,i,s,...o]),n(l)}):e2)}var s2=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],o2=s2.length,l2=s2.reduce((e,t,n)=>(e[t]=n,e),{}),u2=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(e=>{let[t,n]=e;return[l2[t],l2[n]]}),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function d2(e){const t=e.reduce((e,t)=>{let{maxX:n,maxY:a,minX:r,minY:i}=e,{position:{x:s,y:o}}=t;return{maxX:Math.max(n,s),maxY:Math.max(a,o),minX:Math.min(r,s),minY:Math.min(i,o)}},{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function p2(e,t,n){let[a,r]=t,[i,s]=n;const o=a/i,l=r/s;return e.map((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/s,e.box[1]/i,e.box[2]/s,e.box[3]/i],box:[Math.trunc(e.box[0]*l),Math.trunc(e.box[1]*o),Math.trunc(e.box[2]*l),Math.trunc(e.box[3]*o)],keypoints:e.keypoints.map(e=>{let{score:t,part:n,position:a}=e;return{score:t,part:n,position:[Math.trunc(a.x*l),Math.trunc(a.y*o)],positionRaw:[a.x/i,a.y/i]}}),annotations:{}}))(e,t))}var h2,c2=class{constructor(e,t){o(this,"priorityQueue"),o(this,"numberOfElements"),o(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}};function f2(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+o2)}}function m2(e,t,n){const{heatmapY:a,heatmapX:r,id:i}=e,{y:s,x:o}=f2(a,r,i,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+s}}function g2(e,t,n){return e<t?t:e>n?n:e}function y2(e,t){return{x:e.x+t.x,y:e.y+t.y}}var A2,x2=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],b2=16;function v2(e,t,n,a,r,i){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:2;const o=(e,t,n)=>({y:g2(Math.round(e.y/b2),0,t-1),x:g2(Math.round(e.x/b2),0,n-1)}),[l,u]=a.shape,d=o(t.position,l,u),p=(h=d,{y:i.get(h.y,h.x,e),x:i.get(h.y,h.x,i.shape[2]/2+e)});var h;let c=y2(t.position,p);for(let g=0;g<s;g++){const e=o(c,l,u),t=f2(e.y,e.x,n,r);c=y2({x:e.x*b2,y:e.y*b2},{x:t.x,y:t.y})}const f=o(c,l,u),m=a.get(f.y,f.x,n);return{position:c,part:s2[n],score:m}}function w2(e,t,n,a,r){const i=u2.map(e=>{let[t,n]=e;return[l2[t],l2[n]]}),s=i.map(e=>{let[,t]=e;return t}),o=i.map(e=>{let[t]=e;return t}),l=t.shape[2],u=s.length,d=new Array(l),p=m2(e.part,b2,n);d[e.part.id]={score:e.score,part:s2[e.part.id],position:p};for(let h=u-1;h>=0;--h){const e=s[h],a=o[h];d[e]&&!d[a]&&(d[a]=v2(h,d[e],a,t,n,r))}for(let h=0;h<u;++h){const e=o[h],r=s[h];d[e]&&!d[r]&&(d[r]=v2(h,d[e],r,t,n,a))}return d}function k2(e,t,n,a,r){const[i,s]=r.shape;let o=!0;const l=Math.max(n-1,0),u=Math.min(n+1+1,i);for(let d=l;d<u;++d){const n=Math.max(a-1,0),i=Math.min(a+1+1,s);for(let a=n;a<i;++a)if(r.get(d,a,e)>t){o=!1;break}if(!o)break}return o}function I2(e,t,n){let{x:a,y:r}=t;return e.some(e=>{let{keypoints:t}=e;var i;const s=null==(i=t[n])?void 0:i.position;return!!s&&function(e,t,n,a){const r=n-e,i=a-t;return r*r+i*i}(r,a,s.y,s.x)<=2500})}function S2(e,t){return t.reduce((t,n,a)=>{let{position:r,score:i}=n;return I2(e,r,a)||(t+=i),t},0)/t.length}function N2(e,t,n,a,r,i){const s=[],o=function(e,t){const[n,a,r]=t.shape,i=new c2(n*a*r,e=>{let{score:t}=e;return t});for(let s=0;s<n;++s)for(let n=0;n<a;++n)for(let a=0;a<r;++a){const r=t.get(s,n,a);r<e||k2(a,r,s,n,t)&&i.enqueue({score:r,part:{heatmapY:s,heatmapX:n,id:a}})}return i}(i,t);for(;s.length<r&&!o.empty();){const r=o.dequeue();if(I2(s,m2(r.part,b2,e),r.part.id))continue;let l=w2(r,t,e,n,a);l=l.filter(e=>e.score>i);const u=S2(s,l),d=d2(l);u>i&&s.push({keypoints:l,box:d,score:Math.round(100*u)/100})}return s}async function C2(e,t){if(!(null==h2?void 0:h2.executor))return[];const n=rs(()=>{if(!h2.inputs[0].shape)return[];const t=kc.resizeBilinear(e,[h2.inputs[0].shape[2],h2.inputs[0].shape[1]]),n=ju(vo(go(t,"float32"),127.5),1),a=h2.execute(n,x2).map(e=>Mp(e,[0]));return a[1]=nl(a[1]),a}),a=await Promise.all(n.map(e=>e.buffer()));for(const i of n)is(i);const r=N2(a[0],a[1],a[2],a[3],t.body.maxDetected,t.body.minConfidence);if(!h2.inputs[0].shape)return[];return p2(r,[e.shape[1],e.shape[2]],[h2.inputs[0].shape[2],h2.inputs[0].shape[1]])}var T2=["fgr","pha","r1o","r2o","r3o","r4o"],R2={},E2=0;function $2(e){is([R2.r1i,R2.r2i,R2.r3i,R2.r4i,R2.downsample_ratio]),R2.r1i=qi(0),R2.r2i=qi(0),R2.r3i=qi(0),R2.r4i=qi(0),E2=e.segmentation.ratio||.5,R2.downsample_ratio=qi(E2)}async function M2(e){return!A2||iX.initial?A2=await mK(e.segmentation.modelPath):e.debug&&Oq("cached model:",A2.modelUrl),$2(e),A2}var F2,_2=e=>rs(()=>{const t=Mp(e,[0]),n=wo(t,xK.tf255);return go(n,"int32")});function P2(e,t){const n=e?_2(e):yl([t.shape[1]||0,t.shape[2]||0,3],255,"int32"),a=t?_2(t):yl([e.shape[1]||0,e.shape[2]||0,1],255,"int32"),r=el([n,a],-1);return is([n,a]),r}async function O2(e,t){if(A2||(A2=await M2(t)),!(null==A2?void 0:A2.executor))return null;R2.src=vo(e,255),E2!==t.segmentation.ratio&&$2(t);const[n,a,r,i,s,o]=await A2.executeAsync(R2,T2);let l;switch(t.segmentation.mode||"default"){case"default":l=P2(n,a);break;case"alpha":l=P2(null,a);break;case"foreground":l=P2(n,null);break;case"state":u=r,l=rs(()=>{const e={};return e.unstack=Jp(u,-1),e.concat=el(e.unstack,1),e.split=Rp(e.concat,4,1),e.stack=el(e.split,2),e.squeeze=Mp(e.stack,[0]),e.expand=yu(e.squeeze,-1),e.add=xo(e.expand,1),e.mul=wo(e.add,127.5),e.cast=go(e.mul,"int32"),e.tile=xu(e.cast,[1,1,3]),e.alpha=yl([e.tile.shape[0]||0,e.tile.shape[1]||0,1],255,"int32"),el([e.tile,e.alpha],-1)});break;default:l=qi(0)}var u;return is([R2.src,n,a,R2.r1i,R2.r2i,R2.r3i,R2.r4i]),[R2.r1i,R2.r2i,R2.r3i,R2.r4i]=[r,i,s,o],l}async function D2(e){return!F2||iX.initial?F2=await mK(e.segmentation.modelPath):e.debug&&Oq("cached model:",F2.modelUrl),F2}function z2(e,t,n){var a,r;if(!t)return null;if(!(null==(a=null==e?void 0:e.config)?void 0:a.validateModels))return null;const i=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"],s=["biasadd","fusedbatchnormv3","matmul","switch","shape","merge","split","broadcastto"],o=[],l=[],u=t.modelUrl,d=t.executor;if(null==(r=null==d?void 0:d.graph)?void 0:r.nodes)for(const p of Object.values(d.graph.nodes)){const e=p.op.toLowerCase();o.includes(e)||o.push(e)}else!d&&e.config.debug&&Oq("model not loaded",n);for(const p of o)i.includes(p)||s.includes(p)||e.env.kernels.includes(p)||e.env.kernels.includes(p.replace("_",""))||e.env.kernels.includes(p.replace("native",""))||e.env.kernels.includes(p.replace("v2",""))||l.push(p);return e.config.debug&&l.length>0&&Oq("model validation failed:",n,l),l.length>0?{name:n,missing:l,ops:o,url:u}:null}var L2=class{constructor(e){o(this,"instance"),o(this,"models",{}),this.models={},this.instance=e}stats(){let e=0,t=0,n=0;for(const r of Object.values(fK))e+=Number.isNaN(+r.sizeFromManifest)?0:r.sizeFromManifest,t+=Number.isNaN(+r.sizeLoadedWeights)?0:r.sizeLoadedWeights,n+=Number.isNaN(+r.sizeDesired)?0:r.sizeDesired;const a=n>0?t/n:0;return{numLoadedModels:Object.values(fK).filter(e=>null==e?void 0:e.loaded).length,numDefinedModels:Object.keys(this.models).length,percentageLoaded:a,totalSizeFromManifest:e,totalSizeWeights:t,totalSizeLoading:n,modelStats:Object.values(fK)}}reset(){for(const e of Object.keys(this.models))this.models[e]=null}async load(e){var t,n,a,r,i,s,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,w,k,I,S,N,C;iX.initial&&this.reset(),e&&(this.instance=e);const T={};T.blazeface=this.instance.config.face.enabled&&!this.models.blazeface?IY(this.instance.config):null,T.antispoof=this.instance.config.face.enabled&&(null==(t=this.instance.config.face.antispoof)?void 0:t.enabled)&&!this.models.antispoof?async function(e){var t;return iX.initial&&(iJ=null),iJ?e.debug&&Oq("cached model:",iJ.modelUrl):iJ=await mK(null==(t=e.face.antispoof)?void 0:t.modelPath),iJ}(this.instance.config):null,T.liveness=this.instance.config.face.enabled&&(null==(n=this.instance.config.face.liveness)?void 0:n.enabled)&&!this.models.liveness?async function(e){var t;return iX.initial&&(uJ=null),uJ?e.debug&&Oq("cached model:",uJ.modelUrl):uJ=await mK(null==(t=e.face.liveness)?void 0:t.modelPath),uJ}(this.instance.config):null,T.faceres=this.instance.config.face.enabled&&(null==(a=this.instance.config.face.description)?void 0:a.enabled)&&!this.models.faceres?async function(e){var t;return iX.initial&&(GY=null),GY?e.debug&&Oq("cached model:",GY.modelUrl):GY=await mK(null==(t=e.face.description)?void 0:t.modelPath),GY}(this.instance.config):null,T.emotion=this.instance.config.face.enabled&&(null==(r=this.instance.config.face.emotion)?void 0:r.enabled)&&!this.models.emotion?async function(e){var t,n,a;return iX.initial&&(UY=null),UY?e.debug&&Oq("cached model:",UY.modelUrl):(UY=await mK(null==(t=e.face.emotion)?void 0:t.modelPath),JY=3===(null==(a=null==(n=null==UY?void 0:UY.inputs)?void 0:n[0].shape)?void 0:a[3]),qY=JY?["angry","disgust","fear","happy","neutral","sad","surprise"]:["angry","disgust","fear","happy","sad","surprise","neutral"]),UY}(this.instance.config):null,T.iris=this.instance.config.face.enabled&&(null==(i=this.instance.config.face.iris)?void 0:i.enabled)&&!(null==(s=this.instance.config.face.attention)?void 0:s.enabled)&&!this.models.iris?async function(e){var t,n;return iX.initial&&(AY=null),AY?e.debug&&Oq("cached model:",AY.modelUrl):AY=await mK(null==(t=e.face.iris)?void 0:t.modelPath),-1===(NY=(null==AY?void 0:AY.executor)&&(null==(n=AY.inputs)?void 0:n[0].shape)?AY.inputs[0].shape[2]:0)&&(NY=64),AY}(this.instance.config):null,T.facemesh=this.instance.config.face.enabled&&(null==(o=this.instance.config.face.mesh)?void 0:o.enabled)&&!this.models.facemesh?async function(e){var t,n,a,r,i,s;return iX.initial&&(BY=null),(null==(t=e.face.attention)?void 0:t.enabled)&&(null==BY?void 0:BY.signature)&&Object.keys((null==(n=null==BY?void 0:BY.signature)?void 0:n.outputs)||{}).length<6&&(BY=null),BY?e.debug&&Oq("cached model:",BY.modelUrl):BY=(null==(a=e.face.attention)?void 0:a.enabled)?await mK(e.face.attention.modelPath):await mK(null==(r=e.face.mesh)?void 0:r.modelPath),VY=BY.executor&&(null==(i=null==BY?void 0:BY.inputs)?void 0:i[0].shape)?null==(s=null==BY?void 0:BY.inputs)?void 0:s[0].shape[2]:256,BY}(this.instance.config):null,T.gear=this.instance.config.face.enabled&&(null==(l=this.instance.config.face.gear)?void 0:l.enabled)&&!this.models.gear?async function(e){var t;return iX.initial&&(mJ=null),mJ?e.debug&&Oq("cached model:",mJ.modelUrl):mJ=await mK(null==(t=e.face.gear)?void 0:t.modelPath),mJ}(this.instance.config):null,T.ssrnetage=this.instance.config.face.enabled&&(null==(u=this.instance.config.face.ssrnet)?void 0:u.enabled)&&!this.models.ssrnetage?async function(e){return iX.initial&&(vJ=null),vJ?e.debug&&Oq("cached model:",vJ.modelUrl):vJ=await mK(e.face.ssrnet.modelPathAge),vJ}(this.instance.config):null,T.ssrnetgender=this.instance.config.face.enabled&&(null==(d=this.instance.config.face.ssrnet)?void 0:d.enabled)&&!this.models.ssrnetgender?async function(e){var t;return iX.initial&&(RJ=null),RJ?e.debug&&Oq("cached model:",RJ.modelUrl):RJ=await mK(null==(t=e.face.ssrnet)?void 0:t.modelPathGender),RJ}(this.instance.config):null,T.mobilefacenet=this.instance.config.face.enabled&&(null==(p=this.instance.config.face.mobilefacenet)?void 0:p.enabled)&&!this.models.mobilefacenet?async function(e){var t;return iX.initial&&(PJ=null),PJ?e.debug&&Oq("cached model:",PJ.modelUrl):PJ=await mK(null==(t=e.face.mobilefacenet)?void 0:t.modelPath),PJ}(this.instance.config):null,T.insightface=this.instance.config.face.enabled&&(null==(h=this.instance.config.face.insightface)?void 0:h.enabled)&&!this.models.insightface?async function(e){return iX.initial&&(VJ=null),VJ?e.debug&&Oq("cached model:",VJ.modelUrl):VJ=await mK(e.face.insightface.modelPath),VJ}(this.instance.config):null,T.blazepose=this.instance.config.body.enabled&&!this.models.blazepose&&(null==(c=this.instance.config.body.modelPath)?void 0:c.includes("blazepose"))?async function(e){if(iX.initial&&(vZ=null),vZ)e.debug&&Oq("cached model:",vZ.modelUrl);else{const t=(null==(vZ=await mK(e.body.modelPath))?void 0:vZ.executor)?Object.values(vZ.modelSignature.inputs):void 0;CZ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0}return vZ}(this.instance.config):null,T.blazeposedetect=this.instance.config.body.enabled&&!this.models.blazeposedetect&&this.instance.config.body.detector&&this.instance.config.body.detector.modelPath?bZ(this.instance.config):null,T.efficientpose=this.instance.config.body.enabled&&!this.models.efficientpose&&(null==(f=this.instance.config.body.modelPath)?void 0:f.includes("efficientpose"))?async function(e){return iX.initial&&(HZ=null),HZ?e.debug&&Oq("cached model:",HZ.modelUrl):HZ=await mK(e.body.modelPath),HZ}(this.instance.config):null,T.movenet=this.instance.config.body.enabled&&!this.models.movenet&&(null==(m=this.instance.config.body.modelPath)?void 0:m.includes("movenet"))?async function(e){var t;return iX.initial&&(G0=null),G0?e.debug&&Oq("cached model:",G0.modelUrl):(wK(["size"],e),G0=await mK(e.body.modelPath)),(Z0=(null==G0?void 0:G0.executor)&&(null==(t=null==G0?void 0:G0.inputs)?void 0:t[0].shape)?G0.inputs[0].shape[2]:0)<64&&(Z0=256),Ve().flagRegistry.WEBGL_USE_SHAPES_UNIFORMS&&Ve().set("WEBGL_USE_SHAPES_UNIFORMS",!1),G0}(this.instance.config):null,T.posenet=this.instance.config.body.enabled&&!this.models.posenet&&(null==(g=this.instance.config.body.modelPath)?void 0:g.includes("posenet"))?async function(e){return!h2||iX.initial?h2=await mK(e.body.modelPath):e.debug&&Oq("cached model:",h2.modelUrl),h2}(this.instance.config):null,T.handtrack=this.instance.config.hand.enabled&&!this.models.handtrack&&(null==(A=null==(y=this.instance.config.hand.detector)?void 0:y.modelPath)?void 0:A.includes("handtrack"))?async function(e){var t;if(iX.initial&&(g0[0]=null),g0[0])e.debug&&Oq("cached model:",g0[0].modelUrl);else{wK(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),g0[0]=await mK(null==(t=e.hand.detector)?void 0:t.modelPath);const n=g0[0].executor?Object.values(g0[0].modelSignature.inputs):void 0;A0[0][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,A0[0][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return g0[0]}(this.instance.config):null,T.handskeleton=this.instance.config.hand.enabled&&this.instance.config.hand.landmarks&&!this.models.handskeleton&&(null==(b=null==(x=this.instance.config.hand.detector)?void 0:x.modelPath)?void 0:b.includes("handtrack"))?async function(e){var t;if(iX.initial&&(g0[1]=null),g0[1])e.debug&&Oq("cached model:",g0[1].modelUrl);else{g0[1]=await mK(null==(t=e.hand.skeleton)?void 0:t.modelPath);const n=g0[1].executor?Object.values(g0[1].modelSignature.inputs):void 0;A0[1][0]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[1].size):0,A0[1][1]=Array.isArray(n)?parseInt(n[0].tensorShape.dim[2].size):0}return g0[1]}(this.instance.config):null,this.instance.config.hand.enabled&&!this.models.handdetect&&(null==(w=null==(v=this.instance.config.hand.detector)?void 0:v.modelPath)?void 0:w.includes("handdetect"))&&(T.handdetect=async function(e){var t;return iX.initial&&(s0=null),s0?e.debug&&Oq("cached model:",s0.modelUrl):s0=await mK(null==(t=e.hand.detector)?void 0:t.modelPath),s0}(this.instance.config),T.handskeleton=async function(e){var t;return iX.initial&&(o0=null),o0?e.debug&&Oq("cached model:",o0.modelUrl):o0=await mK(null==(t=e.hand.skeleton)?void 0:t.modelPath),o0}(this.instance.config)),T.centernet=this.instance.config.object.enabled&&!this.models.centernet&&(null==(k=this.instance.config.object.modelPath)?void 0:k.includes("centernet"))?async function(e){if(iX.initial&&(DZ=null),DZ)e.debug&&Oq("cached model:",DZ.modelUrl);else{const t=(null==(DZ=await mK(e.object.modelPath))?void 0:DZ.executor)?Object.values(DZ.modelSignature.inputs):void 0;LZ=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0}return DZ}(this.instance.config):null,T.nanodet=this.instance.config.object.enabled&&!this.models.nanodet&&(null==(I=this.instance.config.object.modelPath)?void 0:I.includes("nanodet"))?async function(e){if(!K0||iX.initial){const t=(null==(K0=await mK(e.object.modelPath))?void 0:K0.executor)?Object.values(K0.modelSignature.inputs):void 0;a2=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):416}else e.debug&&Oq("cached model:",K0.modelUrl);return K0}(this.instance.config):null,T.selfie=this.instance.config.segmentation.enabled&&!this.models.selfie&&(null==(S=this.instance.config.segmentation.modelPath)?void 0:S.includes("selfie"))?D2(this.instance.config):null,T.meet=this.instance.config.segmentation.enabled&&!this.models.meet&&(null==(N=this.instance.config.segmentation.modelPath)?void 0:N.includes("meet"))?D0(this.instance.config):null,T.rvm=this.instance.config.segmentation.enabled&&!this.models.rvm&&(null==(C=this.instance.config.segmentation.modelPath)?void 0:C.includes("rvm"))?M2(this.instance.config):null;for(const[R,E]of Object.entries(T))(null==E?void 0:E.then)&&E.then(e=>this.models[R]=e);await Promise.all(Object.values(T))}list(){const e=Object.keys(this.models).map(e=>{var t;return{name:e,loaded:null!==this.models[e],size:0,url:this.models[e]?null==(t=this.models[e])?void 0:t.modelUrl:null}});for(const t of e){const e=Object.keys(fK).find(e=>e.startsWith(t.name));e&&(t.size=fK[e].sizeLoadedWeights,t.url=fK[e].url)}return e}loaded(){return this.list().filter(e=>e.loaded).map(e=>e.name)}validate(){const e=[];for(const t of Object.keys(this.models)){const n=this.models[t];if(!n)continue;const a=z2(this.instance,n,t);a&&e.push(a)}return e}};var W2,B2,V2,U2,G2,H2="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",j2="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";async function q2(e){let t;return t="function"===typeof createImageBitmap?await async function(e){const t=function(e){return fetch(`data:${arguments.length>1&&void 0!==arguments[1]?arguments[1]:"application/octet-stream"};base64,${e}`).then(e=>e.blob())};let n,a;switch(e.config.warmup){case"face":n=await t(H2);break;case"body":case"full":n=await t(j2);break;default:n=null}if(n){const t=await createImageBitmap(n);a=await e.detect(t,e.config),t.close()}return a}(e):"undefined"!==typeof Image||void 0!==iX.Canvas?await async function(e){return new Promise(t=>{let n,a;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+H2;break;case"full":case"body":n="data:image/jpeg;base64,"+j2;break;default:n=""}if("undefined"!==typeof Image)a=new Image;else{if(!iX.Image)return void t(void 0);a=new iX.Image}a.onload=async()=>{const n=tX(a.naturalWidth,a.naturalHeight);if(n){const r=n.getContext("2d");r&&r.drawImage(a,0,0);const i=await e.image(n,!0),s=i.tensor?await e.detect(i.tensor,e.config):void 0;t(s)}else Oq("Warmup: Canvas not found"),t(void 0)},n?a.src=n:t(void 0)})}(e):await async function(e){const t=e=>Buffer.from(e,"base64");let n,a;if(n="face"===e.config.warmup?t(H2):t(j2),"node"in h&&"tensorflow"===ds()){const t=Pq.decodeJpeg(n),r=yu(t,0);e.tf.dispose(t),a=await e.detect(r,e.config),e.tf.dispose(r)}else e.config.debug&&Oq("Warmup tfjs-node not loaded");return a}(e),t}async function X2(e,t){await vK(e,!1);const n=Dq();return e.state="warmup",t&&(e.config=Lq(e.config,t)),e.config.warmup&&0!==e.config.warmup.length&&"none"!==e.config.warmup?new Promise(async t=>{await e.models.load(),await us(),await async function(e){var t,n,a,r;if(!Ve().flagRegistry.ENGINE_COMPILE_ONLY)return;const i=ds(),s=ms();if("webgl"!==i&&"humangl"!==i||!(null==s?void 0:s.checkCompileCompletion))return;Ve().set("ENGINE_COMPILE_ONLY",!0);const o=ts().state.numTensors,l=[];for(const[h,c]of Object.entries(e.models.models)){if(!c)continue;const i=(null==c?void 0:c.modelSignature)&&(null==(n=null==(t=null==c?void 0:c.inputs)?void 0:t[0])?void 0:n.shape)?[...c.inputs[0].shape]:[1,64,64,3],s=(null==c?void 0:c.modelSignature)&&(null==(r=null==(a=null==c?void 0:c.inputs)?void 0:a[0])?void 0:r.dtype)?c.inputs[0].dtype:"float32";for(let e=0;e<i.length;e++)-1===i[e]&&(i[e]=0===e?1:64);const o=od(i,s);try{const e=c.execute(o);l.push(h),Array.isArray(e)?e.forEach(e=>is(e)):is(e)}catch(p){e.config.debug&&Oq("compile fail model:",h)}is(o)}const u=await s.checkCompileCompletionAsync();s.getUniformLocations(),e.config.debug&&Oq("compile pass:",{models:l,kernels:u.length}),Ve().set("ENGINE_COMPILE_ONLY",!1);const d=ts().state.numTensors;d-o>0&&Oq("tensor leak:",d-o)}(e);const a=await q2(e),r=Dq();e.config.debug&&Oq("warmup",e.config.warmup,Math.round(r-n),"ms"),e.emit("warmup"),t(a)}):C0()}var K2=class{constructor(e){var t=this;o(this,"version"),o(this,"config"),o(this,"result"),o(this,"state"),o(this,"process"),o(this,"tf"),o(this,"env",iX),o(this,"draw",kK),o(this,"match",z0),o(this,"models"),o(this,"events"),o(this,"faceTriangulation"),o(this,"faceUVMap"),o(this,"performance"),d(this,W2),d(this,B2),d(this,V2),o(this,"analyze",function(){if(!u(t,B2))return;const e=t.tf.engine().state.numTensors,n=u(t,W2);p(t,W2,e);const a=e-n;for(var r=arguments.length,i=new Array(r),s=0;s<r;s++)i[s]=arguments[s];0!==a&&Oq(...i,a)}),d(this,U2,e=>{if(!u(this,V2))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof si))return"input must be a tensor";try{this.tf.getBackend()}catch(t){return"backend not loaded"}return null}),o(this,"webcam",new sX),o(this,"emit",e=>{var t;(null==(t=this.events)?void 0:t.dispatchEvent)&&this.events.dispatchEvent(new Event(e))}),d(this,G2,{});const n=(_q.tfjs||jf).replace(/-(.*)/,"");var a;Wq.wasmPath=`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${n}/dist/`,Wq.modelBasePath=iX.browser?"../models/":"file://models/",this.version=gK,Object.defineProperty(this,"version",{value:gK}),this.config=JSON.parse(JSON.stringify(Wq)),Object.seal(this.config),this.config.cacheModels="undefined"!==typeof indexedDB,e&&(this.config=Lq(this.config,e)),a=this.config,cK.cacheModels=a.cacheModels,cK.verbose=a.debug,cK.modelBasePath=a.modelBasePath,this.tf=h,this.state="idle",p(this,W2,0),p(this,B2,!1),p(this,V2,!1),this.performance={},this.events="undefined"!==typeof EventTarget?new EventTarget:void 0,this.models=new L2(this),hZ(),this.result=C0(),this.process={tensor:null,canvas:null},this.faceTriangulation=HY,this.faceUVMap=jY,z2(this,null,""),this.emit("create"),(this.config.debug||this.env.browser)&&Oq(`version: ${this.version}`),this.config.debug&&Oq(`tfjs version: ${this.tf.version["tfjs-core"]}`);const r=JSON.parse(JSON.stringify(this.env));delete r.kernels,delete r.initial,delete r.perfadd,this.config.debug&&Oq("environment:",r)}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(Wq)),this.config.backend=e,eX(),iX.initial=!0}validate(e){const t=zq(Wq,e||this.config);return 0===t.length&&(this.config=Lq(this.config,e)),t}now(){return Dq()}image(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return aX(e,this.config,t)}async segmentation(e,t){var n,a,r;if(t&&(this.config=Lq(this.config,t)),!this.config.segmentation.enabled)return null;const i=await aX(e,this.config);if(!i.tensor)return null;let s=null;return(null==(n=this.config.segmentation.modelPath)?void 0:n.includes("rvm"))&&(s=await O2(i.tensor,this.config)),(null==(a=this.config.segmentation.modelPath)?void 0:a.includes("meet"))&&(s=await async function(e,t){var n;if(R0||(R0=await D0(t)),!(null==R0?void 0:R0.executor)||!(null==(n=null==R0?void 0:R0.inputs)?void 0:n[0].shape))return null;const a={};let r;switch(a.resize=kc.resizeBilinear(e,[R0.inputs[0].shape?R0.inputs[0].shape[1]:0,R0.inputs[0].shape?R0.inputs[0].shape[2]:0],!1),a.norm=vo(a.resize,xK.tf255),a.res=R0.execute(a.norm),a.squeeze=Mp(a.res,[0]),[a.bgRaw,a.fgRaw]=Jp(a.squeeze,2),a.fg=Sp(a.fgRaw),a.mul=wo(a.fg,xK.tf255),a.expand=yu(a.mul,2),a.output=kc.resizeBilinear(a.expand,[e.shape[1]||0,e.shape[2]||0]),t.segmentation.mode||"default"){case"default":a.input=Mp(e),a.concat=el([a.input,a.output],-1),r=go(a.concat,"int32");break;case"alpha":r=go(a.output,"int32");break;default:r=qi(0)}return Object.keys(a).forEach(e=>is(a[e])),r}(i.tensor,this.config)),(null==(r=this.config.segmentation.modelPath)?void 0:r.includes("selfie"))&&(s=await async function(e,t){var n;if(F2||(F2=await D2(t)),!(null==F2?void 0:F2.executor)||!(null==(n=null==F2?void 0:F2.inputs)?void 0:n[0].shape))return null;const a={};let r;switch(a.resize=kc.resizeBilinear(e,[F2.inputs[0].shape?F2.inputs[0].shape[1]:0,F2.inputs[0].shape?F2.inputs[0].shape[2]:0],!1),a.norm=vo(a.resize,xK.tf255),a.res=F2.execute(a.norm),a.squeeze=Mp(a.res,[0]),a.alpha=kc.resizeBilinear(a.squeeze,[e.shape[1]||0,e.shape[2]||0]),a.mul=wo(a.alpha,xK.tf255),t.segmentation.mode||"default"){case"default":a.input=Mp(e),a.concat=el([a.input,a.mul],-1),r=go(a.concat,"int32");break;case"alpha":r=go(a.mul,"int32");break;default:r=qi(0)}return Object.keys(a).forEach(e=>is(a[e])),r}(i.tensor,this.config)),is(i.tensor),s}compare(e,t){return async function(e,t,n){const a={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||Oq("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||Oq("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;a.input1=yo(t),a.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?kc.resizeBilinear(n,[t.shape[1],t.shape[2]]):yo(n),a.diff=ju(a.input1,a.input2),a.squared=wo(a.diff,a.diff),a.sum=hu(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return is([a.input1,a.input2,a.diff,a.squared,a.sum]),r}(this.config,e,t)}async init(){await vK(this,!0),await this.tf.ready(),eX()}async load(e){this.state="load";const t=Dq(),n=Object.values(this.models.models).filter(e=>e).length;e&&(this.config=Lq(this.config,e)),this.env.initial&&(await vK(this,!1)||Oq("error: backend check failed"),await us(),this.env.browser&&(this.config.debug&&Oq("configuration:",this.config),this.config.debug&&Oq("tf flags:",this.tf.ENV.flags))),await this.models.load(this),this.env.initial&&this.config.debug&&Oq("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1;Object.values(this.models.models).filter(e=>e).length!==n&&(this.models.validate(),this.emit("load"));const a=Math.trunc(Dq()-t);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(){return function(e,t){var n,a,r,i,s,o,l,u,d,p,h,c,f,m,g,y,A,x,b,v,w,k,I,S,N,C;const T=Dq();if(!e)return C0();const R=Date.now()-e.timestamp,E=R<1e3?8-Math.log(R+1):1;if(e.canvas&&(P0.canvas=e.canvas),e.error&&(P0.error=e.error),P0.body&&e.body.length===P0.body.length)for(let M=0;M<e.body.length;M++){const i=e.body[M].box.map((e,t)=>((E-1)*P0.body[M].box[t]+e)/E),s=e.body[M].boxRaw.map((e,t)=>((E-1)*P0.body[M].boxRaw[t]+e)/E),o=e.body[M].keypoints.map((e,t)=>{var n,a,r,i,s,o,l,u,d;return{score:e.score,part:e.part,position:[P0.body[M].keypoints[t]?((E-1)*(P0.body[M].keypoints[t].position[0]||0)+(e.position[0]||0))/E:e.position[0],P0.body[M].keypoints[t]?((E-1)*(P0.body[M].keypoints[t].position[1]||0)+(e.position[1]||0))/E:e.position[1],P0.body[M].keypoints[t]?((E-1)*(P0.body[M].keypoints[t].position[2]||0)+(e.position[2]||0))/E:e.position[2]],positionRaw:[P0.body[M].keypoints[t]?((E-1)*(P0.body[M].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/E:e.positionRaw[0],P0.body[M].keypoints[t]?((E-1)*(P0.body[M].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/E:e.positionRaw[1],P0.body[M].keypoints[t]?((E-1)*(P0.body[M].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/E:e.positionRaw[2]],distance:[P0.body[M].keypoints[t]?((E-1)*((null==(n=P0.body[M].keypoints[t].distance)?void 0:n[0])||0)+((null==(a=e.distance)?void 0:a[0])||0))/E:null==(r=e.distance)?void 0:r[0],P0.body[M].keypoints[t]?((E-1)*((null==(i=P0.body[M].keypoints[t].distance)?void 0:i[1])||0)+((null==(s=e.distance)?void 0:s[1])||0))/E:null==(o=e.distance)?void 0:o[1],P0.body[M].keypoints[t]?((E-1)*((null==(l=P0.body[M].keypoints[t].distance)?void 0:l[2])||0)+((null==(u=e.distance)?void 0:u[2])||0))/E:null==(d=e.distance)?void 0:d[2]]}}),l={};let u={connected:{}};(null==(n=t.body.modelPath)?void 0:n.includes("efficientpose"))?u=GZ:(null==(a=t.body.modelPath)?void 0:a.includes("blazepose"))?u=cZ:(null==(r=t.body.modelPath)?void 0:r.includes("movenet"))&&(u=T0);for(const[e,t]of Object.entries(u.connected)){const n=[];for(let e=0;e<t.length-1;e++){const a=o.find(n=>n.part===t[e]),r=o.find(n=>n.part===t[e+1]);a&&r&&n.push([a.position,r.position])}l[e]=n}P0.body[M]={...e.body[M],box:i,boxRaw:s,keypoints:o,annotations:l}}else P0.body=JSON.parse(JSON.stringify(e.body));if(P0.hand&&e.hand.length===P0.hand.length)for(let M=0;M<e.hand.length;M++){const t=e.hand[M].box.map((e,t)=>((E-1)*P0.hand[M].box[t]+e)/E),n=e.hand[M].boxRaw.map((e,t)=>((E-1)*P0.hand[M].boxRaw[t]+e)/E);P0.hand[M].keypoints.length!==e.hand[M].keypoints.length&&(P0.hand[M].keypoints=e.hand[M].keypoints);const a=e.hand[M].keypoints&&e.hand[M].keypoints.length>0?e.hand[M].keypoints.map((e,t)=>e.map((e,n)=>((E-1)*(P0.hand[M].keypoints[t][n]||1)+(e||0))/E)):[];let r={};if(Object.keys(P0.hand[M].annotations).length!==Object.keys(e.hand[M].annotations).length)P0.hand[M].annotations=e.hand[M].annotations,r=P0.hand[M].annotations;else if(e.hand[M].annotations)for(const l of Object.keys(e.hand[M].annotations))r[l]=(null==(o=null==(s=null==(i=e.hand[M])?void 0:i.annotations)?void 0:s[l])?void 0:o[0])?e.hand[M].annotations[l].map((e,t)=>e.map((e,n)=>((E-1)*P0.hand[M].annotations[l][t][n]+e)/E)):null;P0.hand[M]={...e.hand[M],box:t,boxRaw:n,keypoints:a,annotations:r}}else P0.hand=JSON.parse(JSON.stringify(e.hand));if(P0.face&&e.face.length===P0.face.length)for(let M=0;M<e.face.length;M++){const t=e.face[M].box.map((e,t)=>((E-1)*P0.face[M].box[t]+e)/E),n=e.face[M].boxRaw.map((e,t)=>((E-1)*P0.face[M].boxRaw[t]+e)/E);let a=e.face[M].annotations;if(Object.keys(P0.face[M].annotations).length!==Object.keys(e.face[M].annotations).length)P0.face[M].annotations=e.face[M].annotations,a=P0.face[M].annotations;else if(e.face[M].annotations)for(const r of Object.keys(e.face[M].annotations))a[r]=(null==(d=null==(u=null==(l=e.face[M])?void 0:l.annotations)?void 0:u[r])?void 0:d[0])?e.face[M].annotations[r].map((e,t)=>e.map((e,n)=>((E-1)*P0.face[M].annotations[r][t][n]+e)/E)):null;if(e.face[M].rotation){const r={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};r.matrix=null==(p=e.face[M].rotation)?void 0:p.matrix,r.angle={roll:((E-1)*((null==(c=null==(h=P0.face[M].rotation)?void 0:h.angle)?void 0:c.roll)||0)+((null==(m=null==(f=e.face[M].rotation)?void 0:f.angle)?void 0:m.roll)||0))/E,yaw:((E-1)*((null==(y=null==(g=P0.face[M].rotation)?void 0:g.angle)?void 0:y.yaw)||0)+((null==(x=null==(A=e.face[M].rotation)?void 0:A.angle)?void 0:x.yaw)||0))/E,pitch:((E-1)*((null==(v=null==(b=P0.face[M].rotation)?void 0:b.angle)?void 0:v.pitch)||0)+((null==(k=null==(w=e.face[M].rotation)?void 0:w.angle)?void 0:k.pitch)||0))/E},r.gaze={bearing:((E-1)*((null==(I=P0.face[M].rotation)?void 0:I.gaze.bearing)||0)+((null==(S=e.face[M].rotation)?void 0:S.gaze.bearing)||0))/E,strength:((E-1)*((null==(N=P0.face[M].rotation)?void 0:N.gaze.strength)||0)+((null==(C=e.face[M].rotation)?void 0:C.gaze.strength)||0))/E},P0.face[M]={...e.face[M],rotation:r,box:t,boxRaw:n,annotations:a}}else P0.face[M]={...e.face[M],box:t,boxRaw:n,annotations:a}}else P0.face=JSON.parse(JSON.stringify(e.face));if(P0.object&&e.object.length===P0.object.length)for(let M=0;M<e.object.length;M++){const t=e.object[M].box.map((e,t)=>((E-1)*P0.object[M].box[t]+e)/E),n=e.object[M].boxRaw.map((e,t)=>((E-1)*P0.object[M].boxRaw[t]+e)/E);P0.object[M]={...e.object[M],box:t,boxRaw:n}}else P0.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(P0.persons&&t.length===P0.persons.length)for(let e=0;e<t.length;e++)P0.persons[e].box=t[e].box.map((t,n)=>((E-1)*P0.persons[e].box[n]+t)/E);else P0.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(P0.gesture=e.gesture),P0.width=e.width,P0.height=e.height;const $=Dq();return O0=iX.perfadd?O0+Math.round($-T):Math.round($-T),e.performance&&(P0.performance={...e.performance,interpolate:O0}),P0}(arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.result,this.config)}async warmup(e){const t=Dq(),n=await X2(this,e),a=Dq();return this.performance.warmup=Math.trunc(a-t),n}async profile(e,t){const n=await this.tf.profile(()=>this.detect(e,t)),a={};let r=0;for(const s of n.kernels){const e=Number(s.kernelTimeMs)||0;a[s.name]?a[s.name]+=e:a[s.name]=e,r+=e}const i=[];Object.entries(a).forEach(e=>i.push({kernel:e[0],time:e[1],perc:0}));for(const s of i)s.perc=Math.round(1e3*s.time/r)/1e3,s.time=Math.round(1e3*s.time)/1e3;return i.sort((e,t)=>t.time-e.time),i.length=20,i}async detect(e,t){return this.state="detect",new Promise(async n=>{var a,r,i,s,o,l,d,p,h,c,f,m,g,y,A,x,b,v,w,k,I;let S;this.state="config",this.config=Lq(this.config,t),this.state="check";const N=u(this,U2).call(this,e);N&&(Oq(N,e),this.emit("error"),n(C0(N)));const C=Dq();await this.load(),S=Dq(),this.state="image";const T=await aX(e,this.config);if(this.process=T,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S),this.analyze("Get Image:"),!T.tensor)return this.config.debug&&Oq("could not convert input to tensor"),this.emit("error"),void n(C0("could not convert input to tensor"));this.emit("image"),S=Dq(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>3840||t.shape[2]>2160)return n;if(Qq.inputTensor)if(Qq.inputTensor.shape[1]!==t.shape[1]||Qq.inputTensor.shape[2]!==t.shape[2])is(Qq.inputTensor),Qq.inputTensor=yo(t);else{const a={};a.diff=ju(t,Qq.inputTensor),a.squared=wo(a.diff,a.diff),a.sum=hu(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;is([Qq.inputTensor,a.diff,a.squared,a.sum]),Qq.inputTensor=yo(t),n=r<=(e.cacheSensitivity||0)}else Qq.inputTensor=yo(t);return n}(this.config,T.tensor),this.config.filter.autoBrightness=!!this.config.filter.autoBrightness&&this.config.skipAllowed,this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S),this.analyze("Check Changed:");let R=[],E=[],$=[],M=[];this.state="detect:face",this.config.async?(R=this.config.face.enabled?tQ(this,T.tensor):[],this.performance.face&&delete this.performance.face):(S=Dq(),R=this.config.face.enabled?await tQ(this,T.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(R=await R),this.analyze("Start Body:"),this.state="detect:body";const F=-1===this.config.body.maxDetected?Lq(this.config,{body:{maxDetected:this.config.face.enabled?1*R.length:1}}):this.config;this.config.async?((null==(a=this.config.body.modelPath)?void 0:a.includes("posenet"))?E=this.config.body.enabled?C2(T.tensor,F):[]:(null==(r=this.config.body.modelPath)?void 0:r.includes("blazepose"))?E=this.config.body.enabled?OZ(T.tensor,F):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("efficientpose"))?E=this.config.body.enabled?JZ(T.tensor,F):[]:(null==(s=this.config.body.modelPath)?void 0:s.includes("movenet"))&&(E=this.config.body.enabled?Q0(T.tensor,F):[]),this.performance.body&&delete this.performance.body):(S=Dq(),(null==(o=this.config.body.modelPath)?void 0:o.includes("posenet"))?E=this.config.body.enabled?await C2(T.tensor,F):[]:(null==(l=this.config.body.modelPath)?void 0:l.includes("blazepose"))?E=this.config.body.enabled?await OZ(T.tensor,F):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("efficientpose"))?E=this.config.body.enabled?await JZ(T.tensor,F):[]:(null==(p=this.config.body.modelPath)?void 0:p.includes("movenet"))&&(E=this.config.body.enabled?await Q0(T.tensor,F):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const _=-1===this.config.hand.maxDetected?Lq(this.config,{hand:{maxDetected:this.config.face.enabled?2*R.length:1}}):this.config;this.config.async?((null==(c=null==(h=this.config.hand.detector)?void 0:h.modelPath)?void 0:c.includes("handdetect"))?$=this.config.hand.enabled?m0(T.tensor,_):[]:(null==(m=null==(f=this.config.hand.detector)?void 0:f.modelPath)?void 0:m.includes("handtrack"))&&($=this.config.hand.enabled?N0(T.tensor,_):[]),this.performance.hand&&delete this.performance.hand):(S=Dq(),(null==(y=null==(g=this.config.hand.detector)?void 0:g.modelPath)?void 0:y.includes("handdetect"))?$=this.config.hand.enabled?await m0(T.tensor,_):[]:(null==(x=null==(A=this.config.hand.detector)?void 0:A.modelPath)?void 0:x.includes("handtrack"))&&($=this.config.hand.enabled?await N0(T.tensor,_):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(b=this.config.object.modelPath)?void 0:b.includes("nanodet"))?M=this.config.object.enabled?i2(T.tensor,this.config):[]:(null==(v=this.config.object.modelPath)?void 0:v.includes("centernet"))&&(M=this.config.object.enabled?UZ(T.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(S=Dq(),(null==(w=this.config.object.modelPath)?void 0:w.includes("nanodet"))?M=this.config.object.enabled?await i2(T.tensor,this.config):[]:(null==(k=this.config.object.modelPath)?void 0:k.includes("centernet"))&&(M=this.config.object.enabled?await UZ(T.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([R,E,$,M]=await Promise.all([R,E,$,M])),this.state="detect:gesture";let P=[];this.config.gesture.enabled&&(S=Dq(),P=[...GQ(R),...UQ(E),...jQ($),...HQ(R)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(Dq()-S):Math.trunc(Dq()-S)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(Dq()-C):Math.trunc(Dq()-C);const O=(null==(I=this.process.tensor)?void 0:I.shape)||[0,0,0,0];this.result={face:R,body:E,hand:$,gesture:P,object:M,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,width:O[2],height:O[1],get persons(){return function(e,t,n,a,r){var i,s,o,l,u,d;let p=0;const h=[];for(const c of e){const e={id:p++,face:c,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)c.box[0]>n.box[0]&&c.box[0]<n.box[0]+n.box[2]&&c.box[1]+c.box[3]>n.box[1]&&c.box[1]+c.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of a)(void 0!==t.face&&t.face===c.id||void 0!==t.iris&&t.iris===c.id||void 0!==t.body&&t.body===(null==(i=e.body)?void 0:i.id)||void 0!==t.hand&&t.hand===(null==(s=e.hands.left)?void 0:s.id)||void 0!==t.hand&&t.hand===(null==(o=e.hands.right)?void 0:o.id))&&e.gestures.push(t);const f=[],m=[],g=e=>{e&&4===e.length&&(f.push(e[0],e[0]+e[2]),m.push(e[1],e[1]+e[3]))};g(e.face.box),g(null==(l=e.body)?void 0:l.box),g(null==(u=e.hands.left)?void 0:u.box),g(null==(d=e.hands.right)?void 0:d.box);const y=Math.min(...f),A=Math.min(...m);e.box=[y,A,Math.max(...f)-y,Math.max(...m)-A],(null==r?void 0:r[1])&&(null==r?void 0:r[2])&&(e.boxRaw=[e.box[0]/r[2],e.box[1]/r[1],e.box[2]/r[2],e.box[3]/r[1]]),h.push(e)}return h}(R,E,$,P,O)}},is(T.tensor),this.emit("detect"),this.state="idle",n(this.result)})}async sleep(e){return new Promise(t=>{setTimeout(t,e)})}async video(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;t?(u(this,G2)[e.id]||(this.config.debug&&Oq("video start",e.id),u(this,G2)[e.id]=!0),!e.paused&&u(this,G2)[e.id]&&e.readyState>=2&&await this.detect(e),n>0&&await this.sleep(n),u(this,G2)[e.id]&&requestAnimationFrame(()=>this.video(e,t,n))):(this.config.debug&&Oq("video stop",e.id),u(this,G2)[e.id]=!1)}};W2=new WeakMap,B2=new WeakMap,V2=new WeakMap,U2=new WeakMap,G2=new WeakMap}}]);